

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 27 12:35:35 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79   000000                     
    80                           ; Generated 09/02/2023 GMT
    81                           ; 
    82                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F46K42 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114   000000                     _T2CON	set	16300
   115   000000                     _TMR0H	set	16311
   116   000000                     _T0CON1	set	16313
   117   000000                     _OSCTUNE	set	14814
   118   000000                     _OSCFRQ	set	14815
   119   000000                     _TRISD	set	16325
   120   000000                     _TRISC	set	16324
   121   000000                     _TRISE	set	16326
   122   000000                     _LATC	set	16316
   123   000000                     _LATB	set	16315
   124   000000                     _PORTBbits	set	16331
   125                           
   126                           	psect	nvCOMRAM
   127   00005A                     __pnvCOMRAM:
   128                           	callstack 0
   129   00005A                     _UART1_ErrorHandler:
   130                           	callstack 0
   131   00005A                     	ds	2
   132   00005C                     _UART1_OverrunErrorHandler:
   133                           	callstack 0
   134   00005C                     	ds	2
   135   00005E                     _UART1_FramingErrorHandler:
   136                           	callstack 0
   137   00005E                     	ds	2
   138                           
   139                           	psect	nvBANK0
   140   0000A2                     __pnvBANK0:
   141                           	callstack 0
   142   0000A2                     _UART2_ErrorHandler:
   143                           	callstack 0
   144   0000A2                     	ds	2
   145   0000A4                     _UART2_OverrunErrorHandler:
   146                           	callstack 0
   147   0000A4                     	ds	2
   148   0000A6                     _UART2_FramingErrorHandler:
   149                           	callstack 0
   150   0000A6                     	ds	2
   151   000000                     _ANSELB	set	14928
   152   000000                     _U2ERRIRbits	set	15841
   153   000000                     _U2CON0bits	set	15834
   154   000000                     _U1ERRIRbits	set	15865
   155   000000                     _U1CON0bits	set	15858
   156   000000                     _PR2	set	16299
   157   000000                     _TMR2	set	16298
   158   000000                     _T2CONbits	set	16300
   159   000000                     _T2RSTbits	set	16303
   160   000000                     _T2HLTbits	set	16301
   161   000000                     _T0CON0bits	set	16312
   162   000000                     _TRISB	set	16323
   163   000000                     _PIR3bits	set	14755
   164   000000                     _RB6PPS	set	14862
   165   000000                     _RC0PPS	set	14864
   166   000000                     _ANSELA	set	14912
   167   000000                     _ANSELBbits	set	14928
   168   000000                     _TRISBbits	set	16323
   169   000000                     _INLVLB	set	14932
   170   000000                     _SLRCONB	set	14931
   171   000000                     _ODCONB	set	14930
   172   000000                     _RB1I2C	set	14938
   173   000000                     _WPUB	set	14929
   174   000000                     _ANSELC	set	14944
   175   000000                     _ANSELD	set	14960
   176   000000                     _LATA	set	16314
   177   000000                     _LATD	set	16317
   178   000000                     _LATE	set	16318
   179   000000                     _TRISA	set	16322
   180   000000                     _INLVLD	set	14964
   181   000000                     _SLRCOND	set	14963
   182   000000                     _ODCOND	set	14962
   183   000000                     _RD0I2C	set	14970
   184   000000                     _WPUD	set	14961
   185   000000                     _ANSELE	set	14976
   186   000000                     _INLVLC	set	14948
   187   000000                     _SLRCONC	set	14947
   188   000000                     _ODCONC	set	14946
   189   000000                     _RC3I2C	set	14954
   190   000000                     _WPUC	set	14945
   191   000000                     _T0CKIPPS	set	15043
   192   000000                     _U1RXPPS	set	15077
   193   000000                     _U2RXPPS	set	15080
   194   000000                     _INLVLE	set	14980
   195   000000                     _SLRCONE	set	14979
   196   000000                     _ODCONE	set	14978
   197   000000                     _WPUE	set	14977
   198   000000                     _INLVLA	set	14916
   199   000000                     _SLRCONA	set	14915
   200   000000                     _ODCONA	set	14914
   201   000000                     _WPUA	set	14913
   202   000000                     _RB2I2C	set	14939
   203   000000                     _RC4I2C	set	14955
   204   000000                     _RD1I2C	set	14971
   205   000000                     _U2RXB	set	15824
   206   000000                     _U2P1L	set	15828
   207   000000                     _U1RXB	set	15848
   208   000000                     _U1P1L	set	15852
   209   000000                     _RC1PPS	set	14865
   210   000000                     _RC3PPS	set	14867
   211   000000                     _RC6PPS	set	14870
   212   000000                     _RC5PPS	set	14869
   213   000000                     _RC4PPS	set	14868
   214   000000                     _T2INPPS	set	15050
   215   000000                     _ADACTPPS	set	15069
   216   000000                     _I2C1SCLPPS	set	15073
   217   000000                     _I2C1SDAPPS	set	15074
   218   000000                     _CCPTMRS1bits	set	16223
   219   000000                     _PWM7DCL	set	16228
   220   000000                     _PWM7DCH	set	16229
   221   000000                     _T2TMR	set	16298
   222   000000                     _T2PR	set	16299
   223   000000                     _T2HLT	set	16301
   224   000000                     _T2CLKCON	set	16302
   225   000000                     _TMR0L	set	16310
   226   000000                     _T0CON0	set	16312
   227   000000                     _U1ERRIE	set	15866
   228   000000                     _U1ERRIR	set	15865
   229   000000                     _U1UIR	set	15864
   230   000000                     _U1FIFO	set	15863
   231   000000                     _U1BRGH	set	15862
   232   000000                     _U1BRGL	set	15861
   233   000000                     _U1CON2	set	15860
   234   000000                     _U1CON1	set	15859
   235   000000                     _U1CON0	set	15858
   236   000000                     _U1P3H	set	15857
   237   000000                     _U1P3L	set	15856
   238   000000                     _U1P2H	set	15855
   239   000000                     _U1P2L	set	15854
   240   000000                     _U1P1H	set	15853
   241   000000                     _PIR4bits	set	14756
   242   000000                     _PIR6bits	set	14758
   243   000000                     _PMD0	set	14784
   244   000000                     _OSCCON1	set	14809
   245   000000                     _U1TXB	set	15850
   246   000000                     _OSCCON3	set	14811
   247   000000                     _OSCEN	set	14813
   248   000000                     _PMD7	set	14791
   249   000000                     _PMD6	set	14790
   250   000000                     _PMD5	set	14789
   251   000000                     _PMD4	set	14788
   252   000000                     _PMD3	set	14787
   253   000000                     _PMD2	set	14786
   254   000000                     _PMD1	set	14785
   255   000000                     _U2P2L	set	15830
   256   000000                     _U2P3L	set	15832
   257   000000                     _U2CON0	set	15834
   258   000000                     _U2ERRIE	set	15842
   259   000000                     _U2ERRIR	set	15841
   260   000000                     _U2UIR	set	15840
   261   000000                     _U2FIFO	set	15839
   262   000000                     _U2BRGH	set	15838
   263   000000                     _U2BRGL	set	15837
   264   000000                     _U2CON2	set	15836
   265   000000                     _U2CON1	set	15835
   266   000000                     _U2TXB	set	15826
   267   000000                     _T2RST	set	16303
   268   000000                     _PWM7CON	set	16230
   269                           
   270                           	psect	mediumconst
   271   00FB14                     __pmediumconst:
   272                           	callstack 0
   273   00FB14  00                 	db	0
   274   00FB15                     STR_43:
   275   00FB15  09                 	db	9
   276   00FB16  20                 	db	32
   277   00FB17  50                 	db	80	;'P'
   278   00FB18  6C                 	db	108	;'l'
   279   00FB19  65                 	db	101	;'e'
   280   00FB1A  61                 	db	97	;'a'
   281   00FB1B  73                 	db	115	;'s'
   282   00FB1C  65                 	db	101	;'e'
   283   00FB1D  20                 	db	32
   284   00FB1E  65                 	db	101	;'e'
   285   00FB1F  6E                 	db	110	;'n'
   286   00FB20  74                 	db	116	;'t'
   287   00FB21  65                 	db	101	;'e'
   288   00FB22  72                 	db	114	;'r'
   289   00FB23  20                 	db	32
   290   00FB24  74                 	db	116	;'t'
   291   00FB25  68                 	db	104	;'h'
   292   00FB26  65                 	db	101	;'e'
   293   00FB27  20                 	db	32
   294   00FB28  74                 	db	116	;'t'
   295   00FB29  75                 	db	117	;'u'
   296   00FB2A  72                 	db	114	;'r'
   297   00FB2B  6E                 	db	110	;'n'
   298   00FB2C  69                 	db	105	;'i'
   299   00FB2D  6E                 	db	110	;'n'
   300   00FB2E  67                 	db	103	;'g'
   301   00FB2F  20                 	db	32
   302   00FB30  64                 	db	100	;'d'
   303   00FB31  69                 	db	105	;'i'
   304   00FB32  66                 	db	102	;'f'
   305   00FB33  66                 	db	102	;'f'
   306   00FB34  65                 	db	101	;'e'
   307   00FB35  72                 	db	114	;'r'
   308   00FB36  65                 	db	101	;'e'
   309   00FB37  6E                 	db	110	;'n'
   310   00FB38  74                 	db	116	;'t'
   311   00FB39  69                 	db	105	;'i'
   312   00FB3A  61                 	db	97	;'a'
   313   00FB3B  6C                 	db	108	;'l'
   314   00FB3C  3A                 	db	58	;':'
   315   00FB3D  20                 	db	32
   316   00FB3E  73                 	db	115	;'s'
   317   00FB3F  70                 	db	112	;'p'
   318   00FB40  65                 	db	101	;'e'
   319   00FB41  65                 	db	101	;'e'
   320   00FB42  64                 	db	100	;'d'
   321   00FB43  20                 	db	32
   322   00FB44  2B                 	db	43
   323   00FB45  20                 	db	32
   324   00FB46  64                 	db	100	;'d'
   325   00FB47  69                 	db	105	;'i'
   326   00FB48  66                 	db	102	;'f'
   327   00FB49  66                 	db	102	;'f'
   328   00FB4A  65                 	db	101	;'e'
   329   00FB4B  72                 	db	114	;'r'
   330   00FB4C  65                 	db	101	;'e'
   331   00FB4D  6E                 	db	110	;'n'
   332   00FB4E  74                 	db	116	;'t'
   333   00FB4F  69                 	db	105	;'i'
   334   00FB50  61                 	db	97	;'a'
   335   00FB51  6C                 	db	108	;'l'
   336   00FB52  20                 	db	32
   337   00FB53  3C                 	db	60	;'<'
   338   00FB54  20                 	db	32
   339   00FB55  31                 	db	49	;'1'
   340   00FB56  32                 	db	50	;'2'
   341   00FB57  37                 	db	55	;'7'
   342   00FB58  20                 	db	32
   343   00FB59  0D                 	db	13
   344   00FB5A  0A                 	db	10
   345   00FB5B  00                 	db	0
   346   00FB5C                     STR_76:
   347   00FB5C  20                 	db	32
   348   00FB5D  20                 	db	32
   349   00FB5E  76                 	db	118	;'v'
   350   00FB5F  20                 	db	32
   351   00FB60  09                 	db	9
   352   00FB61  09                 	db	9
   353   00FB62  20                 	db	32
   354   00FB63  28                 	db	40
   355   00FB64  76                 	db	118	;'v'
   356   00FB65  29                 	db	41
   357   00FB66  6F                 	db	111	;'o'
   358   00FB67  6C                 	db	108	;'l'
   359   00FB68  74                 	db	116	;'t'
   360   00FB69  61                 	db	97	;'a'
   361   00FB6A  67                 	db	103	;'g'
   362   00FB6B  65                 	db	101	;'e'
   363   00FB6C  20                 	db	32
   364   00FB6D  2D                 	db	45
   365   00FB6E  20                 	db	32
   366   00FB6F  52                 	db	82	;'R'
   367   00FB70  65                 	db	101	;'e'
   368   00FB71  61                 	db	97	;'a'
   369   00FB72  64                 	db	100	;'d'
   370   00FB73  20                 	db	32
   371   00FB74  61                 	db	97	;'a'
   372   00FB75  6E                 	db	110	;'n'
   373   00FB76  64                 	db	100	;'d'
   374   00FB77  20                 	db	32
   375   00FB78  64                 	db	100	;'d'
   376   00FB79  69                 	db	105	;'i'
   377   00FB7A  73                 	db	115	;'s'
   378   00FB7B  70                 	db	112	;'p'
   379   00FB7C  6C                 	db	108	;'l'
   380   00FB7D  61                 	db	97	;'a'
   381   00FB7E  79                 	db	121	;'y'
   382   00FB7F  20                 	db	32
   383   00FB80  62                 	db	98	;'b'
   384   00FB81  61                 	db	97	;'a'
   385   00FB82  74                 	db	116	;'t'
   386   00FB83  74                 	db	116	;'t'
   387   00FB84  65                 	db	101	;'e'
   388   00FB85  72                 	db	114	;'r'
   389   00FB86  79                 	db	121	;'y'
   390   00FB87  20                 	db	32
   391   00FB88  76                 	db	118	;'v'
   392   00FB89  6F                 	db	111	;'o'
   393   00FB8A  6C                 	db	108	;'l'
   394   00FB8B  74                 	db	116	;'t'
   395   00FB8C  61                 	db	97	;'a'
   396   00FB8D  67                 	db	103	;'g'
   397   00FB8E  65                 	db	101	;'e'
   398   00FB8F  20                 	db	32
   399   00FB90  0D                 	db	13
   400   00FB91  0A                 	db	10
   401   00FB92  00                 	db	0
   402   00FB93                     STR_88:
   403   00FB93  49                 	db	73	;'I'
   404   00FB94  6E                 	db	110	;'n'
   405   00FB95  76                 	db	118	;'v'
   406   00FB96  61                 	db	97	;'a'
   407   00FB97  6C                 	db	108	;'l'
   408   00FB98  69                 	db	105	;'i'
   409   00FB99  64                 	db	100	;'d'
   410   00FB9A  20                 	db	32
   411   00FB9B  69                 	db	105	;'i'
   412   00FB9C  6E                 	db	110	;'n'
   413   00FB9D  70                 	db	112	;'p'
   414   00FB9E  75                 	db	117	;'u'
   415   00FB9F  74                 	db	116	;'t'
   416   00FBA0  2E                 	db	46
   417   00FBA1  20                 	db	32
   418   00FBA2  50                 	db	80	;'P'
   419   00FBA3  6C                 	db	108	;'l'
   420   00FBA4  65                 	db	101	;'e'
   421   00FBA5  61                 	db	97	;'a'
   422   00FBA6  73                 	db	115	;'s'
   423   00FBA7  65                 	db	101	;'e'
   424   00FBA8  20                 	db	32
   425   00FBA9  72                 	db	114	;'r'
   426   00FBAA  65                 	db	101	;'e'
   427   00FBAB  64                 	db	100	;'d'
   428   00FBAC  6F                 	db	111	;'o'
   429   00FBAD  20                 	db	32
   430   00FBAE  6E                 	db	110	;'n'
   431   00FBAF  75                 	db	117	;'u'
   432   00FBB0  6D                 	db	109	;'m'
   433   00FBB1  65                 	db	101	;'e'
   434   00FBB2  72                 	db	114	;'r'
   435   00FBB3  69                 	db	105	;'i'
   436   00FBB4  63                 	db	99	;'c'
   437   00FBB5  61                 	db	97	;'a'
   438   00FBB6  6C                 	db	108	;'l'
   439   00FBB7  20                 	db	32
   440   00FBB8  69                 	db	105	;'i'
   441   00FBB9  6E                 	db	110	;'n'
   442   00FBBA  70                 	db	112	;'p'
   443   00FBBB  75                 	db	117	;'u'
   444   00FBBC  74                 	db	116	;'t'
   445   00FBBD  2E                 	db	46
   446   00FBBE  20                 	db	32
   447   00FBBF  0D                 	db	13
   448   00FBC0  0A                 	db	10
   449   00FBC1  00                 	db	0
   450   00FBC2                     STR_38:
   451   00FBC2  09                 	db	9
   452   00FBC3  20                 	db	32
   453   00FBC4  50                 	db	80	;'P'
   454   00FBC5  6C                 	db	108	;'l'
   455   00FBC6  65                 	db	101	;'e'
   456   00FBC7  61                 	db	97	;'a'
   457   00FBC8  73                 	db	115	;'s'
   458   00FBC9  65                 	db	101	;'e'
   459   00FBCA  20                 	db	32
   460   00FBCB  65                 	db	101	;'e'
   461   00FBCC  6E                 	db	110	;'n'
   462   00FBCD  74                 	db	116	;'t'
   463   00FBCE  65                 	db	101	;'e'
   464   00FBCF  72                 	db	114	;'r'
   465   00FBD0  20                 	db	32
   466   00FBD1  74                 	db	116	;'t'
   467   00FBD2  68                 	db	104	;'h'
   468   00FBD3  65                 	db	101	;'e'
   469   00FBD4  20                 	db	32
   470   00FBD5  62                 	db	98	;'b'
   471   00FBD6  61                 	db	97	;'a'
   472   00FBD7  63                 	db	99	;'c'
   473   00FBD8  6B                 	db	107	;'k'
   474   00FBD9  77                 	db	119	;'w'
   475   00FBDA  61                 	db	97	;'a'
   476   00FBDB  72                 	db	114	;'r'
   477   00FBDC  64                 	db	100	;'d'
   478   00FBDD  20                 	db	32
   479   00FBDE  73                 	db	115	;'s'
   480   00FBDF  70                 	db	112	;'p'
   481   00FBE0  65                 	db	101	;'e'
   482   00FBE1  65                 	db	101	;'e'
   483   00FBE2  64                 	db	100	;'d'
   484   00FBE3  2C                 	db	44
   485   00FBE4  20                 	db	32
   486   00FBE5  30                 	db	48	;'0'
   487   00FBE6  20                 	db	32
   488   00FBE7  2D                 	db	45
   489   00FBE8  20                 	db	32
   490   00FBE9  31                 	db	49	;'1'
   491   00FBEA  32                 	db	50	;'2'
   492   00FBEB  37                 	db	55	;'7'
   493   00FBEC  20                 	db	32
   494   00FBED  0D                 	db	13
   495   00FBEE  0A                 	db	10
   496   00FBEF  00                 	db	0
   497   00FBF0                     STR_34:
   498   00FBF0  09                 	db	9
   499   00FBF1  20                 	db	32
   500   00FBF2  50                 	db	80	;'P'
   501   00FBF3  6C                 	db	108	;'l'
   502   00FBF4  65                 	db	101	;'e'
   503   00FBF5  61                 	db	97	;'a'
   504   00FBF6  73                 	db	115	;'s'
   505   00FBF7  65                 	db	101	;'e'
   506   00FBF8  20                 	db	32
   507   00FBF9  65                 	db	101	;'e'
   508   00FBFA  6E                 	db	110	;'n'
   509   00FBFB  74                 	db	116	;'t'
   510   00FBFC  65                 	db	101	;'e'
   511   00FBFD  72                 	db	114	;'r'
   512   00FBFE  20                 	db	32
   513   00FBFF  74                 	db	116	;'t'
   514   00FC00  68                 	db	104	;'h'
   515   00FC01  65                 	db	101	;'e'
   516   00FC02  20                 	db	32
   517   00FC03  66                 	db	102	;'f'
   518   00FC04  6F                 	db	111	;'o'
   519   00FC05  72                 	db	114	;'r'
   520   00FC06  77                 	db	119	;'w'
   521   00FC07  61                 	db	97	;'a'
   522   00FC08  72                 	db	114	;'r'
   523   00FC09  64                 	db	100	;'d'
   524   00FC0A  20                 	db	32
   525   00FC0B  73                 	db	115	;'s'
   526   00FC0C  70                 	db	112	;'p'
   527   00FC0D  65                 	db	101	;'e'
   528   00FC0E  65                 	db	101	;'e'
   529   00FC0F  64                 	db	100	;'d'
   530   00FC10  2C                 	db	44
   531   00FC11  20                 	db	32
   532   00FC12  30                 	db	48	;'0'
   533   00FC13  20                 	db	32
   534   00FC14  2D                 	db	45
   535   00FC15  20                 	db	32
   536   00FC16  31                 	db	49	;'1'
   537   00FC17  32                 	db	50	;'2'
   538   00FC18  37                 	db	55	;'7'
   539   00FC19  20                 	db	32
   540   00FC1A  0D                 	db	13
   541   00FC1B  0A                 	db	10
   542   00FC1C  00                 	db	0
   543   00FC1D                     STR_6:
   544   00FC1D  50                 	db	80	;'P'
   545   00FC1E  6C                 	db	108	;'l'
   546   00FC1F  61                 	db	97	;'a'
   547   00FC20  63                 	db	99	;'c'
   548   00FC21  65                 	db	101	;'e'
   549   00FC22  20                 	db	32
   550   00FC23  61                 	db	97	;'a'
   551   00FC24  6C                 	db	108	;'l'
   552   00FC25  6C                 	db	108	;'l'
   553   00FC26  20                 	db	32
   554   00FC27  66                 	db	102	;'f'
   555   00FC28  69                 	db	105	;'i'
   556   00FC29  76                 	db	118	;'v'
   557   00FC2A  65                 	db	101	;'e'
   558   00FC2B  20                 	db	32
   559   00FC2C  73                 	db	115	;'s'
   560   00FC2D  65                 	db	101	;'e'
   561   00FC2E  6E                 	db	110	;'n'
   562   00FC2F  73                 	db	115	;'s'
   563   00FC30  6F                 	db	111	;'o'
   564   00FC31  72                 	db	114	;'r'
   565   00FC32  73                 	db	115	;'s'
   566   00FC33  20                 	db	32
   567   00FC34  6F                 	db	111	;'o'
   568   00FC35  6E                 	db	110	;'n'
   569   00FC36  20                 	db	32
   570   00FC37  61                 	db	97	;'a'
   571   00FC38  20                 	db	32
   572   00FC39  77                 	db	119	;'w'
   573   00FC3A  68                 	db	104	;'h'
   574   00FC3B  69                 	db	105	;'i'
   575   00FC3C  74                 	db	116	;'t'
   576   00FC3D  65                 	db	101	;'e'
   577   00FC3E  20                 	db	32
   578   00FC3F  73                 	db	115	;'s'
   579   00FC40  75                 	db	117	;'u'
   580   00FC41  72                 	db	114	;'r'
   581   00FC42  66                 	db	102	;'f'
   582   00FC43  61                 	db	97	;'a'
   583   00FC44  63                 	db	99	;'c'
   584   00FC45  65                 	db	101	;'e'
   585   00FC46  20                 	db	32
   586   00FC47  0A                 	db	10
   587   00FC48  0D                 	db	13
   588   00FC49  00                 	db	0
   589   00FC4A                     STR_10:
   590   00FC4A  50                 	db	80	;'P'
   591   00FC4B  6C                 	db	108	;'l'
   592   00FC4C  61                 	db	97	;'a'
   593   00FC4D  63                 	db	99	;'c'
   594   00FC4E  65                 	db	101	;'e'
   595   00FC4F  20                 	db	32
   596   00FC50  61                 	db	97	;'a'
   597   00FC51  6C                 	db	108	;'l'
   598   00FC52  6C                 	db	108	;'l'
   599   00FC53  20                 	db	32
   600   00FC54  66                 	db	102	;'f'
   601   00FC55  69                 	db	105	;'i'
   602   00FC56  76                 	db	118	;'v'
   603   00FC57  65                 	db	101	;'e'
   604   00FC58  20                 	db	32
   605   00FC59  73                 	db	115	;'s'
   606   00FC5A  65                 	db	101	;'e'
   607   00FC5B  6E                 	db	110	;'n'
   608   00FC5C  73                 	db	115	;'s'
   609   00FC5D  6F                 	db	111	;'o'
   610   00FC5E  72                 	db	114	;'r'
   611   00FC5F  73                 	db	115	;'s'
   612   00FC60  20                 	db	32
   613   00FC61  6F                 	db	111	;'o'
   614   00FC62  6E                 	db	110	;'n'
   615   00FC63  20                 	db	32
   616   00FC64  61                 	db	97	;'a'
   617   00FC65  20                 	db	32
   618   00FC66  62                 	db	98	;'b'
   619   00FC67  6C                 	db	108	;'l'
   620   00FC68  61                 	db	97	;'a'
   621   00FC69  63                 	db	99	;'c'
   622   00FC6A  6B                 	db	107	;'k'
   623   00FC6B  20                 	db	32
   624   00FC6C  73                 	db	115	;'s'
   625   00FC6D  75                 	db	117	;'u'
   626   00FC6E  72                 	db	114	;'r'
   627   00FC6F  66                 	db	102	;'f'
   628   00FC70  61                 	db	97	;'a'
   629   00FC71  63                 	db	99	;'c'
   630   00FC72  65                 	db	101	;'e'
   631   00FC73  20                 	db	32
   632   00FC74  0A                 	db	10
   633   00FC75  0D                 	db	13
   634   00FC76  00                 	db	0
   635   00FC77                     STR_25:
   636   00FC77  49                 	db	73	;'I'
   637   00FC78  6E                 	db	110	;'n'
   638   00FC79  76                 	db	118	;'v'
   639   00FC7A  61                 	db	97	;'a'
   640   00FC7B  6C                 	db	108	;'l'
   641   00FC7C  69                 	db	105	;'i'
   642   00FC7D  64                 	db	100	;'d'
   643   00FC7E  20                 	db	32
   644   00FC7F  65                 	db	101	;'e'
   645   00FC80  6E                 	db	110	;'n'
   646   00FC81  74                 	db	116	;'t'
   647   00FC82  72                 	db	114	;'r'
   648   00FC83  79                 	db	121	;'y'
   649   00FC84  2E                 	db	46
   650   00FC85  20                 	db	32
   651   00FC86  20                 	db	32
   652   00FC87  45                 	db	69	;'E'
   653   00FC88  6E                 	db	110	;'n'
   654   00FC89  74                 	db	116	;'t'
   655   00FC8A  65                 	db	101	;'e'
   656   00FC8B  72                 	db	114	;'r'
   657   00FC8C  20                 	db	32
   658   00FC8D  73                 	db	115	;'s'
   659   00FC8E  65                 	db	101	;'e'
   660   00FC8F  6E                 	db	110	;'n'
   661   00FC90  73                 	db	115	;'s'
   662   00FC91  6F                 	db	111	;'o'
   663   00FC92  72                 	db	114	;'r'
   664   00FC93  20                 	db	32
   665   00FC94  6E                 	db	110	;'n'
   666   00FC95  75                 	db	117	;'u'
   667   00FC96  6D                 	db	109	;'m'
   668   00FC97  62                 	db	98	;'b'
   669   00FC98  65                 	db	101	;'e'
   670   00FC99  72                 	db	114	;'r'
   671   00FC9A  2C                 	db	44
   672   00FC9B  20                 	db	32
   673   00FC9C  30                 	db	48	;'0'
   674   00FC9D  2D                 	db	45
   675   00FC9E  34                 	db	52	;'4'
   676   00FC9F  20                 	db	32
   677   00FCA0  0A                 	db	10
   678   00FCA1  0D                 	db	13
   679   00FCA2  00                 	db	0
   680   00FCA3                     STR_73:
   681   00FCA3  20                 	db	32
   682   00FCA4  20                 	db	32
   683   00FCA5  72                 	db	114	;'r'
   684   00FCA6  20                 	db	32
   685   00FCA7  09                 	db	9
   686   00FCA8  09                 	db	9
   687   00FCA9  20                 	db	32
   688   00FCAA  28                 	db	40
   689   00FCAB  72                 	db	114	;'r'
   690   00FCAC  29                 	db	41
   691   00FCAD  65                 	db	101	;'e'
   692   00FCAE  61                 	db	97	;'a'
   693   00FCAF  64                 	db	100	;'d'
   694   00FCB0  20                 	db	32
   695   00FCB1  63                 	db	99	;'c'
   696   00FCB2  61                 	db	97	;'a'
   697   00FCB3  6C                 	db	108	;'l'
   698   00FCB4  69                 	db	105	;'i'
   699   00FCB5  62                 	db	98	;'b'
   700   00FCB6  72                 	db	114	;'r'
   701   00FCB7  61                 	db	97	;'a'
   702   00FCB8  74                 	db	116	;'t'
   703   00FCB9  65                 	db	101	;'e'
   704   00FCBA  64                 	db	100	;'d'
   705   00FCBB  20                 	db	32
   706   00FCBC  73                 	db	115	;'s'
   707   00FCBD  65                 	db	101	;'e'
   708   00FCBE  6E                 	db	110	;'n'
   709   00FCBF  73                 	db	115	;'s'
   710   00FCC0  6F                 	db	111	;'o'
   711   00FCC1  72                 	db	114	;'r'
   712   00FCC2  73                 	db	115	;'s'
   713   00FCC3  20                 	db	32
   714   00FCC4  0D                 	db	13
   715   00FCC5  0A                 	db	10
   716   00FCC6  00                 	db	0
   717   00FCC7                     STR_79:
   718   00FCC7  20                 	db	32
   719   00FCC8  20                 	db	32
   720   00FCC9  42                 	db	66	;'B'
   721   00FCCA  20                 	db	32
   722   00FCCB  09                 	db	9
   723   00FCCC  09                 	db	9
   724   00FCCD  20                 	db	32
   725   00FCCE  57                 	db	87	;'W'
   726   00FCCF  68                 	db	104	;'h'
   727   00FCD0  65                 	db	101	;'e'
   728   00FCD1  65                 	db	101	;'e'
   729   00FCD2  6C                 	db	108	;'l'
   730   00FCD3  73                 	db	115	;'s'
   731   00FCD4  20                 	db	32
   732   00FCD5  72                 	db	114	;'r'
   733   00FCD6  6F                 	db	111	;'o'
   734   00FCD7  74                 	db	116	;'t'
   735   00FCD8  61                 	db	97	;'a'
   736   00FCD9  74                 	db	116	;'t'
   737   00FCDA  65                 	db	101	;'e'
   738   00FCDB  20                 	db	32
   739   00FCDC  28                 	db	40
   740   00FCDD  42                 	db	66	;'B'
   741   00FCDE  29                 	db	41
   742   00FCDF  61                 	db	97	;'a'
   743   00FCE0  63                 	db	99	;'c'
   744   00FCE1  6B                 	db	107	;'k'
   745   00FCE2  77                 	db	119	;'w'
   746   00FCE3  61                 	db	97	;'a'
   747   00FCE4  72                 	db	114	;'r'
   748   00FCE5  64                 	db	100	;'d'
   749   00FCE6  20                 	db	32
   750   00FCE7  0D                 	db	13
   751   00FCE8  0A                 	db	10
   752   00FCE9  00                 	db	0
   753   00FCEA                     STR_74:
   754   00FCEA  20                 	db	32
   755   00FCEB  20                 	db	32
   756   00FCEC  64                 	db	100	;'d'
   757   00FCED  20                 	db	32
   758   00FCEE  09                 	db	9
   759   00FCEF  09                 	db	9
   760   00FCF0  20                 	db	32
   761   00FCF1  28                 	db	40
   762   00FCF2  64                 	db	100	;'d'
   763   00FCF3  29                 	db	41
   764   00FCF4  69                 	db	105	;'i'
   765   00FCF5  73                 	db	115	;'s'
   766   00FCF6  70                 	db	112	;'p'
   767   00FCF7  6C                 	db	108	;'l'
   768   00FCF8  61                 	db	97	;'a'
   769   00FCF9  79                 	db	121	;'y'
   770   00FCFA  20                 	db	32
   771   00FCFB  73                 	db	115	;'s'
   772   00FCFC  65                 	db	101	;'e'
   773   00FCFD  6E                 	db	110	;'n'
   774   00FCFE  73                 	db	115	;'s'
   775   00FCFF  6F                 	db	111	;'o'
   776   00FD00  72                 	db	114	;'r'
   777   00FD01  20                 	db	32
   778   00FD02  78                 	db	120	;'x'
   779   00FD03  20                 	db	32
   780   00FD04  76                 	db	118	;'v'
   781   00FD05  61                 	db	97	;'a'
   782   00FD06  6C                 	db	108	;'l'
   783   00FD07  75                 	db	117	;'u'
   784   00FD08  65                 	db	101	;'e'
   785   00FD09  20                 	db	32
   786   00FD0A  0D                 	db	13
   787   00FD0B  0A                 	db	10
   788   00FD0C  00                 	db	0
   789   00FD0D                     STR_78:
   790   00FD0D  20                 	db	32
   791   00FD0E  20                 	db	32
   792   00FD0F  46                 	db	70	;'F'
   793   00FD10  20                 	db	32
   794   00FD11  09                 	db	9
   795   00FD12  09                 	db	9
   796   00FD13  20                 	db	32
   797   00FD14  57                 	db	87	;'W'
   798   00FD15  68                 	db	104	;'h'
   799   00FD16  65                 	db	101	;'e'
   800   00FD17  65                 	db	101	;'e'
   801   00FD18  6C                 	db	108	;'l'
   802   00FD19  73                 	db	115	;'s'
   803   00FD1A  20                 	db	32
   804   00FD1B  72                 	db	114	;'r'
   805   00FD1C  6F                 	db	111	;'o'
   806   00FD1D  74                 	db	116	;'t'
   807   00FD1E  61                 	db	97	;'a'
   808   00FD1F  74                 	db	116	;'t'
   809   00FD20  65                 	db	101	;'e'
   810   00FD21  20                 	db	32
   811   00FD22  28                 	db	40
   812   00FD23  46                 	db	70	;'F'
   813   00FD24  29                 	db	41
   814   00FD25  6F                 	db	111	;'o'
   815   00FD26  72                 	db	114	;'r'
   816   00FD27  77                 	db	119	;'w'
   817   00FD28  61                 	db	97	;'a'
   818   00FD29  72                 	db	114	;'r'
   819   00FD2A  64                 	db	100	;'d'
   820   00FD2B  20                 	db	32
   821   00FD2C  0D                 	db	13
   822   00FD2D  0A                 	db	10
   823   00FD2E  00                 	db	0
   824   00FD2F                     STR_65:
   825   00FD2F  09                 	db	9
   826   00FD30  2A                 	db	42
   827   00FD31  20                 	db	32
   828   00FD32  20                 	db	32
   829   00FD33  20                 	db	32
   830   00FD34  20                 	db	32
   831   00FD35  20                 	db	32
   832   00FD36  20                 	db	32
   833   00FD37  20                 	db	32
   834   00FD38  20                 	db	32
   835   00FD39  20                 	db	32
   836   00FD3A  20                 	db	32
   837   00FD3B  20                 	db	32
   838   00FD3C  20                 	db	32
   839   00FD3D  20                 	db	32
   840   00FD3E  20                 	db	32
   841   00FD3F  20                 	db	32
   842   00FD40  20                 	db	32
   843   00FD41  20                 	db	32
   844   00FD42  20                 	db	32
   845   00FD43  20                 	db	32
   846   00FD44  20                 	db	32
   847   00FD45  20                 	db	32
   848   00FD46  20                 	db	32
   849   00FD47  20                 	db	32
   850   00FD48  20                 	db	32
   851   00FD49  20                 	db	32
   852   00FD4A  20                 	db	32
   853   00FD4B  20                 	db	32
   854   00FD4C  20                 	db	32
   855   00FD4D  2A                 	db	42
   856   00FD4E  0D                 	db	13
   857   00FD4F  0A                 	db	10
   858   00FD50  00                 	db	0
   859   00FD51                     STR_67:
   860   00FD51  09                 	db	9
   861   00FD52  2A                 	db	42
   862   00FD53  20                 	db	32
   863   00FD54  20                 	db	32
   864   00FD55  20                 	db	32
   865   00FD56  20                 	db	32
   866   00FD57  20                 	db	32
   867   00FD58  20                 	db	32
   868   00FD59  44                 	db	68	;'D'
   869   00FD5A  69                 	db	105	;'i'
   870   00FD5B  61                 	db	97	;'a'
   871   00FD5C  67                 	db	103	;'g'
   872   00FD5D  6E                 	db	110	;'n'
   873   00FD5E  6F                 	db	111	;'o'
   874   00FD5F  73                 	db	115	;'s'
   875   00FD60  74                 	db	116	;'t'
   876   00FD61  69                 	db	105	;'i'
   877   00FD62  63                 	db	99	;'c'
   878   00FD63  20                 	db	32
   879   00FD64  4D                 	db	77	;'M'
   880   00FD65  65                 	db	101	;'e'
   881   00FD66  6E                 	db	110	;'n'
   882   00FD67  75                 	db	117	;'u'
   883   00FD68  20                 	db	32
   884   00FD69  20                 	db	32
   885   00FD6A  20                 	db	32
   886   00FD6B  20                 	db	32
   887   00FD6C  20                 	db	32
   888   00FD6D  20                 	db	32
   889   00FD6E  20                 	db	32
   890   00FD6F  2A                 	db	42
   891   00FD70  0D                 	db	13
   892   00FD71  0A                 	db	10
   893   00FD72  00                 	db	0
   894   00FD73                     STR_66:
   895   00FD73  09                 	db	9
   896   00FD74  2A                 	db	42
   897   00FD75  20                 	db	32
   898   00FD76  20                 	db	32
   899   00FD77  20                 	db	32
   900   00FD78  41                 	db	65	;'A'
   901   00FD79  50                 	db	80	;'P'
   902   00FD7A  53                 	db	83	;'S'
   903   00FD7B  43                 	db	67	;'C'
   904   00FD7C  20                 	db	32
   905   00FD7D  31                 	db	49	;'1'
   906   00FD7E  32                 	db	50	;'2'
   907   00FD7F  39                 	db	57	;'9'
   908   00FD80  39                 	db	57	;'9'
   909   00FD81  20                 	db	32
   910   00FD82  2D                 	db	45
   911   00FD83  20                 	db	32
   912   00FD84  50                 	db	80	;'P'
   913   00FD85  6F                 	db	111	;'o'
   914   00FD86  6C                 	db	108	;'l'
   915   00FD87  6F                 	db	111	;'o'
   916   00FD88  6C                 	db	108	;'l'
   917   00FD89  75                 	db	117	;'u'
   918   00FD8A  20                 	db	32
   919   00FD8B  33                 	db	51	;'3'
   920   00FD8C  70                 	db	112	;'p'
   921   00FD8D  69                 	db	105	;'i'
   922   00FD8E  20                 	db	32
   923   00FD8F  20                 	db	32
   924   00FD90  20                 	db	32
   925   00FD91  2A                 	db	42
   926   00FD92  0D                 	db	13
   927   00FD93  0A                 	db	10
   928   00FD94  00                 	db	0
   929   00FD95                     STR_64:
   930   00FD95  09                 	db	9
   931   00FD96  2A                 	db	42
   932   00FD97  2A                 	db	42
   933   00FD98  2A                 	db	42
   934   00FD99  2A                 	db	42
   935   00FD9A  2A                 	db	42
   936   00FD9B  2A                 	db	42
   937   00FD9C  2A                 	db	42
   938   00FD9D  2A                 	db	42
   939   00FD9E  2A                 	db	42
   940   00FD9F  2A                 	db	42
   941   00FDA0  2A                 	db	42
   942   00FDA1  2A                 	db	42
   943   00FDA2  2A                 	db	42
   944   00FDA3  2A                 	db	42
   945   00FDA4  2A                 	db	42
   946   00FDA5  2A                 	db	42
   947   00FDA6  2A                 	db	42
   948   00FDA7  2A                 	db	42
   949   00FDA8  2A                 	db	42
   950   00FDA9  2A                 	db	42
   951   00FDAA  2A                 	db	42
   952   00FDAB  2A                 	db	42
   953   00FDAC  2A                 	db	42
   954   00FDAD  2A                 	db	42
   955   00FDAE  2A                 	db	42
   956   00FDAF  2A                 	db	42
   957   00FDB0  2A                 	db	42
   958   00FDB1  2A                 	db	42
   959   00FDB2  2A                 	db	42
   960   00FDB3  2A                 	db	42
   961   00FDB4  0D                 	db	13
   962   00FDB5  0A                 	db	10
   963   00FDB6  00                 	db	0
   964   00FDB7                     STR_72:
   965   00FDB7  20                 	db	32
   966   00FDB8  20                 	db	32
   967   00FDB9  63                 	db	99	;'c'
   968   00FDBA  20                 	db	32
   969   00FDBB  09                 	db	9
   970   00FDBC  09                 	db	9
   971   00FDBD  20                 	db	32
   972   00FDBE  28                 	db	40
   973   00FDBF  63                 	db	99	;'c'
   974   00FDC0  29                 	db	41
   975   00FDC1  61                 	db	97	;'a'
   976   00FDC2  6C                 	db	108	;'l'
   977   00FDC3  69                 	db	105	;'i'
   978   00FDC4  62                 	db	98	;'b'
   979   00FDC5  72                 	db	114	;'r'
   980   00FDC6  61                 	db	97	;'a'
   981   00FDC7  74                 	db	116	;'t'
   982   00FDC8  65                 	db	101	;'e'
   983   00FDC9  20                 	db	32
   984   00FDCA  73                 	db	115	;'s'
   985   00FDCB  65                 	db	101	;'e'
   986   00FDCC  6E                 	db	110	;'n'
   987   00FDCD  73                 	db	115	;'s'
   988   00FDCE  6F                 	db	111	;'o'
   989   00FDCF  72                 	db	114	;'r'
   990   00FDD0  73                 	db	115	;'s'
   991   00FDD1  20                 	db	32
   992   00FDD2  0D                 	db	13
   993   00FDD3  0A                 	db	10
   994   00FDD4  00                 	db	0
   995   00FDD5                     STR_9:
   996   00FDD5  57                 	db	87	;'W'
   997   00FDD6  68                 	db	104	;'h'
   998   00FDD7  69                 	db	105	;'i'
   999   00FDD8  74                 	db	116	;'t'
  1000   00FDD9  65                 	db	101	;'e'
  1001   00FDDA  20                 	db	32
  1002   00FDDB  63                 	db	99	;'c'
  1003   00FDDC  61                 	db	97	;'a'
  1004   00FDDD  6C                 	db	108	;'l'
  1005   00FDDE  69                 	db	105	;'i'
  1006   00FDDF  62                 	db	98	;'b'
  1007   00FDE0  72                 	db	114	;'r'
  1008   00FDE1  61                 	db	97	;'a'
  1009   00FDE2  74                 	db	116	;'t'
  1010   00FDE3  69                 	db	105	;'i'
  1011   00FDE4  6F                 	db	111	;'o'
  1012   00FDE5  6E                 	db	110	;'n'
  1013   00FDE6  20                 	db	32
  1014   00FDE7  63                 	db	99	;'c'
  1015   00FDE8  6F                 	db	111	;'o'
  1016   00FDE9  6D                 	db	109	;'m'
  1017   00FDEA  70                 	db	112	;'p'
  1018   00FDEB  6C                 	db	108	;'l'
  1019   00FDEC  65                 	db	101	;'e'
  1020   00FDED  74                 	db	116	;'t'
  1021   00FDEE  65                 	db	101	;'e'
  1022   00FDEF  20                 	db	32
  1023   00FDF0  0A                 	db	10
  1024   00FDF1  0D                 	db	13
  1025   00FDF2  00                 	db	0
  1026   00FDF3                     STR_13:
  1027   00FDF3  42                 	db	66	;'B'
  1028   00FDF4  6C                 	db	108	;'l'
  1029   00FDF5  61                 	db	97	;'a'
  1030   00FDF6  63                 	db	99	;'c'
  1031   00FDF7  6B                 	db	107	;'k'
  1032   00FDF8  20                 	db	32
  1033   00FDF9  63                 	db	99	;'c'
  1034   00FDFA  61                 	db	97	;'a'
  1035   00FDFB  6C                 	db	108	;'l'
  1036   00FDFC  69                 	db	105	;'i'
  1037   00FDFD  62                 	db	98	;'b'
  1038   00FDFE  72                 	db	114	;'r'
  1039   00FDFF  61                 	db	97	;'a'
  1040   00FE00  74                 	db	116	;'t'
  1041   00FE01  69                 	db	105	;'i'
  1042   00FE02  6F                 	db	111	;'o'
  1043   00FE03  6E                 	db	110	;'n'
  1044   00FE04  20                 	db	32
  1045   00FE05  63                 	db	99	;'c'
  1046   00FE06  6F                 	db	111	;'o'
  1047   00FE07  6D                 	db	109	;'m'
  1048   00FE08  70                 	db	112	;'p'
  1049   00FE09  6C                 	db	108	;'l'
  1050   00FE0A  65                 	db	101	;'e'
  1051   00FE0B  74                 	db	116	;'t'
  1052   00FE0C  65                 	db	101	;'e'
  1053   00FE0D  20                 	db	32
  1054   00FE0E  0A                 	db	10
  1055   00FE0F  0D                 	db	13
  1056   00FE10  00                 	db	0
  1057   00FE11                     STR_71:
  1058   00FE11  43                 	db	67	;'C'
  1059   00FE12  6F                 	db	111	;'o'
  1060   00FE13  6D                 	db	109	;'m'
  1061   00FE14  6D                 	db	109	;'m'
  1062   00FE15  61                 	db	97	;'a'
  1063   00FE16  6E                 	db	110	;'n'
  1064   00FE17  64                 	db	100	;'d'
  1065   00FE18  20                 	db	32
  1066   00FE19  4B                 	db	75	;'K'
  1067   00FE1A  65                 	db	101	;'e'
  1068   00FE1B  79                 	db	121	;'y'
  1069   00FE1C  20                 	db	32
  1070   00FE1D  09                 	db	9
  1071   00FE1E  20                 	db	32
  1072   00FE1F  44                 	db	68	;'D'
  1073   00FE20  65                 	db	101	;'e'
  1074   00FE21  73                 	db	115	;'s'
  1075   00FE22  63                 	db	99	;'c'
  1076   00FE23  72                 	db	114	;'r'
  1077   00FE24  69                 	db	105	;'i'
  1078   00FE25  70                 	db	112	;'p'
  1079   00FE26  74                 	db	116	;'t'
  1080   00FE27  69                 	db	105	;'i'
  1081   00FE28  6F                 	db	111	;'o'
  1082   00FE29  6E                 	db	110	;'n'
  1083   00FE2A  20                 	db	32
  1084   00FE2B  0D                 	db	13
  1085   00FE2C  0A                 	db	10
  1086   00FE2D  00                 	db	0
  1087   00FE2E                     STR_7:
  1088   00FE2E  50                 	db	80	;'P'
  1089   00FE2F  72                 	db	114	;'r'
  1090   00FE30  65                 	db	101	;'e'
  1091   00FE31  73                 	db	115	;'s'
  1092   00FE32  73                 	db	115	;'s'
  1093   00FE33  20                 	db	32
  1094   00FE34  61                 	db	97	;'a'
  1095   00FE35  6E                 	db	110	;'n'
  1096   00FE36  79                 	db	121	;'y'
  1097   00FE37  20                 	db	32
  1098   00FE38  6B                 	db	107	;'k'
  1099   00FE39  65                 	db	101	;'e'
  1100   00FE3A  79                 	db	121	;'y'
  1101   00FE3B  20                 	db	32
  1102   00FE3C  74                 	db	116	;'t'
  1103   00FE3D  6F                 	db	111	;'o'
  1104   00FE3E  20                 	db	32
  1105   00FE3F  63                 	db	99	;'c'
  1106   00FE40  6F                 	db	111	;'o'
  1107   00FE41  6E                 	db	110	;'n'
  1108   00FE42  74                 	db	116	;'t'
  1109   00FE43  69                 	db	105	;'i'
  1110   00FE44  6E                 	db	110	;'n'
  1111   00FE45  75                 	db	117	;'u'
  1112   00FE46  65                 	db	101	;'e'
  1113   00FE47  20                 	db	32
  1114   00FE48  0A                 	db	10
  1115   00FE49  0D                 	db	13
  1116   00FE4A  00                 	db	0
  1117   00FE4B                     STR_83:
  1118   00FE4B  20                 	db	32
  1119   00FE4C  20                 	db	32
  1120   00FE4D  54                 	db	84	;'T'
  1121   00FE4E  20                 	db	32
  1122   00FE4F  09                 	db	9
  1123   00FE50  09                 	db	9
  1124   00FE51  20                 	db	32
  1125   00FE52  28                 	db	40
  1126   00FE53  54                 	db	84	;'T'
  1127   00FE54  29                 	db	41
  1128   00FE55  65                 	db	101	;'e'
  1129   00FE56  73                 	db	115	;'s'
  1130   00FE57  74                 	db	116	;'t'
  1131   00FE58  20                 	db	32
  1132   00FE59  73                 	db	115	;'s'
  1133   00FE5A  65                 	db	101	;'e'
  1134   00FE5B  6E                 	db	110	;'n'
  1135   00FE5C  73                 	db	115	;'s'
  1136   00FE5D  6F                 	db	111	;'o'
  1137   00FE5E  72                 	db	114	;'r'
  1138   00FE5F  20                 	db	32
  1139   00FE60  72                 	db	114	;'r'
  1140   00FE61  75                 	db	117	;'u'
  1141   00FE62  6E                 	db	110	;'n'
  1142   00FE63  20                 	db	32
  1143   00FE64  0D                 	db	13
  1144   00FE65  0A                 	db	10
  1145   00FE66  00                 	db	0
  1146   00FE67                     STR_85:
  1147   00FE67  20                 	db	32
  1148   00FE68  20                 	db	32
  1149   00FE69  6D                 	db	109	;'m'
  1150   00FE6A  20                 	db	32
  1151   00FE6B  09                 	db	9
  1152   00FE6C  09                 	db	9
  1153   00FE6D  20                 	db	32
  1154   00FE6E  52                 	db	82	;'R'
  1155   00FE6F  65                 	db	101	;'e'
  1156   00FE70  66                 	db	102	;'f'
  1157   00FE71  72                 	db	114	;'r'
  1158   00FE72  65                 	db	101	;'e'
  1159   00FE73  73                 	db	115	;'s'
  1160   00FE74  68                 	db	104	;'h'
  1161   00FE75  20                 	db	32
  1162   00FE76  28                 	db	40
  1163   00FE77  6D                 	db	109	;'m'
  1164   00FE78  29                 	db	41
  1165   00FE79  65                 	db	101	;'e'
  1166   00FE7A  6E                 	db	110	;'n'
  1167   00FE7B  75                 	db	117	;'u'
  1168   00FE7C  20                 	db	32
  1169   00FE7D  0D                 	db	13
  1170   00FE7E  0A                 	db	10
  1171   00FE7F  00                 	db	0
  1172   00FE80                     STR_14:
  1173   00FE80  43                 	db	67	;'C'
  1174   00FE81  61                 	db	97	;'a'
  1175   00FE82  6C                 	db	108	;'l'
  1176   00FE83  69                 	db	105	;'i'
  1177   00FE84  62                 	db	98	;'b'
  1178   00FE85  72                 	db	114	;'r'
  1179   00FE86  61                 	db	97	;'a'
  1180   00FE87  74                 	db	116	;'t'
  1181   00FE88  69                 	db	105	;'i'
  1182   00FE89  6F                 	db	111	;'o'
  1183   00FE8A  6E                 	db	110	;'n'
  1184   00FE8B  20                 	db	32
  1185   00FE8C  63                 	db	99	;'c'
  1186   00FE8D  6F                 	db	111	;'o'
  1187   00FE8E  6D                 	db	109	;'m'
  1188   00FE8F  70                 	db	112	;'p'
  1189   00FE90  6C                 	db	108	;'l'
  1190   00FE91  65                 	db	101	;'e'
  1191   00FE92  74                 	db	116	;'t'
  1192   00FE93  65                 	db	101	;'e'
  1193   00FE94  20                 	db	32
  1194   00FE95  0A                 	db	10
  1195   00FE96  0D                 	db	13
  1196   00FE97  00                 	db	0
  1197   00FE98                     STR_31:
  1198   00FE98  42                 	db	66	;'B'
  1199   00FE99  61                 	db	97	;'a'
  1200   00FE9A  74                 	db	116	;'t'
  1201   00FE9B  74                 	db	116	;'t'
  1202   00FE9C  65                 	db	101	;'e'
  1203   00FE9D  72                 	db	114	;'r'
  1204   00FE9E  79                 	db	121	;'y'
  1205   00FE9F  20                 	db	32
  1206   00FEA0  76                 	db	118	;'v'
  1207   00FEA1  6F                 	db	111	;'o'
  1208   00FEA2  6C                 	db	108	;'l'
  1209   00FEA3  74                 	db	116	;'t'
  1210   00FEA4  61                 	db	97	;'a'
  1211   00FEA5  67                 	db	103	;'g'
  1212   00FEA6  65                 	db	101	;'e'
  1213   00FEA7  20                 	db	32
  1214   00FEA8  3D                 	db	61	;'='
  1215   00FEA9  20                 	db	32
  1216   00FEAA  25                 	db	37
  1217   00FEAB  75                 	db	117	;'u'
  1218   00FEAC  20                 	db	32
  1219   00FEAD  0A                 	db	10
  1220   00FEAE  0D                 	db	13
  1221   00FEAF  00                 	db	0
  1222   00FEB0                     STR_81:
  1223   00FEB0  20                 	db	32
  1224   00FEB1  20                 	db	32
  1225   00FEB2  52                 	db	82	;'R'
  1226   00FEB3  20                 	db	32
  1227   00FEB4  09                 	db	9
  1228   00FEB5  09                 	db	9
  1229   00FEB6  20                 	db	32
  1230   00FEB7  28                 	db	40
  1231   00FEB8  52                 	db	82	;'R'
  1232   00FEB9  29                 	db	41
  1233   00FEBA  69                 	db	105	;'i'
  1234   00FEBB  67                 	db	103	;'g'
  1235   00FEBC  68                 	db	104	;'h'
  1236   00FEBD  74                 	db	116	;'t'
  1237   00FEBE  20                 	db	32
  1238   00FEBF  74                 	db	116	;'t'
  1239   00FEC0  75                 	db	117	;'u'
  1240   00FEC1  72                 	db	114	;'r'
  1241   00FEC2  6E                 	db	110	;'n'
  1242   00FEC3  20                 	db	32
  1243   00FEC4  0D                 	db	13
  1244   00FEC5  0A                 	db	10
  1245   00FEC6  00                 	db	0
  1246   00FEC7                     STR_82:
  1247   00FEC7  20                 	db	32
  1248   00FEC8  20                 	db	32
  1249   00FEC9  53                 	db	83	;'S'
  1250   00FECA  20                 	db	32
  1251   00FECB  09                 	db	9
  1252   00FECC  09                 	db	9
  1253   00FECD  20                 	db	32
  1254   00FECE  28                 	db	40
  1255   00FECF  53                 	db	83	;'S'
  1256   00FED0  29                 	db	41
  1257   00FED1  74                 	db	116	;'t'
  1258   00FED2  6F                 	db	111	;'o'
  1259   00FED3  70                 	db	112	;'p'
  1260   00FED4  20                 	db	32
  1261   00FED5  6D                 	db	109	;'m'
  1262   00FED6  6F                 	db	111	;'o'
  1263   00FED7  74                 	db	116	;'t'
  1264   00FED8  6F                 	db	111	;'o'
  1265   00FED9  72                 	db	114	;'r'
  1266   00FEDA  20                 	db	32
  1267   00FEDB  0D                 	db	13
  1268   00FEDC  0A                 	db	10
  1269   00FEDD  00                 	db	0
  1270   00FEDE                     STR_80:
  1271   00FEDE  20                 	db	32
  1272   00FEDF  20                 	db	32
  1273   00FEE0  4C                 	db	76	;'L'
  1274   00FEE1  20                 	db	32
  1275   00FEE2  09                 	db	9
  1276   00FEE3  09                 	db	9
  1277   00FEE4  20                 	db	32
  1278   00FEE5  28                 	db	40
  1279   00FEE6  4C                 	db	76	;'L'
  1280   00FEE7  29                 	db	41
  1281   00FEE8  65                 	db	101	;'e'
  1282   00FEE9  66                 	db	102	;'f'
  1283   00FEEA  74                 	db	116	;'t'
  1284   00FEEB  20                 	db	32
  1285   00FEEC  74                 	db	116	;'t'
  1286   00FEED  75                 	db	117	;'u'
  1287   00FEEE  72                 	db	114	;'r'
  1288   00FEEF  6E                 	db	110	;'n'
  1289   00FEF0  20                 	db	32
  1290   00FEF1  0D                 	db	13
  1291   00FEF2  0A                 	db	10
  1292   00FEF3  00                 	db	0
  1293   00FEF4                     STR_26:
  1294   00FEF4  0A                 	db	10
  1295   00FEF5  53                 	db	83	;'S'
  1296   00FEF6  65                 	db	101	;'e'
  1297   00FEF7  6E                 	db	110	;'n'
  1298   00FEF8  73                 	db	115	;'s'
  1299   00FEF9  6F                 	db	111	;'o'
  1300   00FEFA  72                 	db	114	;'r'
  1301   00FEFB  20                 	db	32
  1302   00FEFC  25                 	db	37
  1303   00FEFD  64                 	db	100	;'d'
  1304   00FEFE  20                 	db	32
  1305   00FEFF  3D                 	db	61	;'='
  1306   00FF00  20                 	db	32
  1307   00FF01  25                 	db	37
  1308   00FF02  75                 	db	117	;'u'
  1309   00FF03  20                 	db	32
  1310   00FF04  0A                 	db	10
  1311   00FF05  0D                 	db	13
  1312   00FF06  00                 	db	0
  1313   00FF07                     STR_54:
  1314   00FF07  0A                 	db	10
  1315   00FF08  53                 	db	83	;'S'
  1316   00FF09  65                 	db	101	;'e'
  1317   00FF0A  6E                 	db	110	;'n'
  1318   00FF0B  73                 	db	115	;'s'
  1319   00FF0C  6F                 	db	111	;'o'
  1320   00FF0D  72                 	db	114	;'r'
  1321   00FF0E  20                 	db	32
  1322   00FF0F  25                 	db	37
  1323   00FF10  75                 	db	117	;'u'
  1324   00FF11  20                 	db	32
  1325   00FF12  3D                 	db	61	;'='
  1326   00FF13  20                 	db	32
  1327   00FF14  25                 	db	37
  1328   00FF15  75                 	db	117	;'u'
  1329   00FF16  20                 	db	32
  1330   00FF17  0A                 	db	10
  1331   00FF18  0D                 	db	13
  1332   00FF19  00                 	db	0
  1333   00FF1A                     STR_3:
  1334   00FF1A  43                 	db	67	;'C'
  1335   00FF1B  61                 	db	97	;'a'
  1336   00FF1C  6C                 	db	108	;'l'
  1337   00FF1D  69                 	db	105	;'i'
  1338   00FF1E  62                 	db	98	;'b'
  1339   00FF1F  72                 	db	114	;'r'
  1340   00FF20  61                 	db	97	;'a'
  1341   00FF21  74                 	db	116	;'t'
  1342   00FF22  65                 	db	101	;'e'
  1343   00FF23  00                 	db	0
  1344   00FF24                     STR_91:
  1345   00FF24  20                 	db	32
  1346   00FF25  20                 	db	32
  1347   00FF26  20                 	db	32
  1348   00FF27  47                 	db	71	;'G'
  1349   00FF28  4F                 	db	79	;'O'
  1350   00FF29  20                 	db	32
  1351   00FF2A  20                 	db	32
  1352   00FF2B  20                 	db	32
  1353   00FF2C  00                 	db	0
  1354   00FF2D                     STR_92:
  1355   00FF2D  20                 	db	32
  1356   00FF2E  20                 	db	32
  1357   00FF2F  53                 	db	83	;'S'
  1358   00FF30  45                 	db	69	;'E'
  1359   00FF31  54                 	db	84	;'T'
  1360   00FF32  20                 	db	32
  1361   00FF33  20                 	db	32
  1362   00FF34  20                 	db	32
  1363   00FF35  00                 	db	0
  1364   00FF36                     STR_58:
  1365   00FF36  20                 	db	32
  1366   00FF37  20                 	db	32
  1367   00FF38  52                 	db	82	;'R'
  1368   00FF39  75                 	db	117	;'u'
  1369   00FF3A  6E                 	db	110	;'n'
  1370   00FF3B  20                 	db	32
  1371   00FF3C  20                 	db	32
  1372   00FF3D  20                 	db	32
  1373   00FF3E  00                 	db	0
  1374   00FF3F                     STR_93:
  1375   00FF3F  20                 	db	32
  1376   00FF40  52                 	db	82	;'R'
  1377   00FF41  45                 	db	69	;'E'
  1378   00FF42  41                 	db	65	;'A'
  1379   00FF43  44                 	db	68	;'D'
  1380   00FF44  59                 	db	89	;'Y'
  1381   00FF45  20                 	db	32
  1382   00FF46  20                 	db	32
  1383   00FF47  00                 	db	0
  1384   00FF48                     STR_16:
  1385   00FF48  20                 	db	32
  1386   00FF49  20                 	db	32
  1387   00FF4A  52                 	db	82	;'R'
  1388   00FF4B  65                 	db	101	;'e'
  1389   00FF4C  61                 	db	97	;'a'
  1390   00FF4D  64                 	db	100	;'d'
  1391   00FF4E  20                 	db	32
  1392   00FF4F  20                 	db	32
  1393   00FF50  00                 	db	0
  1394   00FF51                     STR_61:
  1395   00FF51  20                 	db	32
  1396   00FF52  20                 	db	32
  1397   00FF53  64                 	db	100	;'d'
  1398   00FF54  6F                 	db	111	;'o'
  1399   00FF55  6E                 	db	110	;'n'
  1400   00FF56  65                 	db	101	;'e'
  1401   00FF57  20                 	db	32
  1402   00FF58  20                 	db	32
  1403   00FF59  00                 	db	0
  1404   00FF5A                     STR_50:
  1405   00FF5A  20                 	db	32
  1406   00FF5B  20                 	db	32
  1407   00FF5C  53                 	db	83	;'S'
  1408   00FF5D  74                 	db	116	;'t'
  1409   00FF5E  6F                 	db	111	;'o'
  1410   00FF5F  70                 	db	112	;'p'
  1411   00FF60  20                 	db	32
  1412   00FF61  20                 	db	32
  1413   00FF62  00                 	db	0
  1414   00FF63                     STR_90:
  1415   00FF63  20                 	db	32
  1416   00FF64  20                 	db	32
  1417   00FF65  25                 	db	37
  1418   00FF66  75                 	db	117	;'u'
  1419   00FF67  20                 	db	32
  1420   00FF68  73                 	db	115	;'s'
  1421   00FF69  20                 	db	32
  1422   00FF6A  20                 	db	32
  1423   00FF6B  00                 	db	0
  1424   00FF6C                     STR_40:
  1425   00FF6C  20                 	db	32
  1426   00FF6D  20                 	db	32
  1427   00FF6E  4C                 	db	76	;'L'
  1428   00FF6F  65                 	db	101	;'e'
  1429   00FF70  66                 	db	102	;'f'
  1430   00FF71  74                 	db	116	;'t'
  1431   00FF72  20                 	db	32
  1432   00FF73  20                 	db	32
  1433   00FF74  00                 	db	0
  1434   00FF75                     STR_45:
  1435   00FF75  20                 	db	32
  1436   00FF76  52                 	db	82	;'R'
  1437   00FF77  69                 	db	105	;'i'
  1438   00FF78  67                 	db	103	;'g'
  1439   00FF79  68                 	db	104	;'h'
  1440   00FF7A  74                 	db	116	;'t'
  1441   00FF7B  20                 	db	32
  1442   00FF7C  20                 	db	32
  1443   00FF7D  00                 	db	0
  1444   00FF7E                     STR_32:
  1445   00FF7E  46                 	db	70	;'F'
  1446   00FF7F  6F                 	db	111	;'o'
  1447   00FF80  72                 	db	114	;'r'
  1448   00FF81  77                 	db	119	;'w'
  1449   00FF82  61                 	db	97	;'a'
  1450   00FF83  72                 	db	114	;'r'
  1451   00FF84  64                 	db	100	;'d'
  1452   00FF85  20                 	db	32
  1453   00FF86  00                 	db	0
  1454   00FF87                     STR_4:
  1455   00FF87  53                 	db	83	;'S'
  1456   00FF88  65                 	db	101	;'e'
  1457   00FF89  6E                 	db	110	;'n'
  1458   00FF8A  73                 	db	115	;'s'
  1459   00FF8B  6F                 	db	111	;'o'
  1460   00FF8C  72                 	db	114	;'r'
  1461   00FF8D  73                 	db	115	;'s'
  1462   00FF8E  20                 	db	32
  1463   00FF8F  00                 	db	0
  1464   00FF90                     STR_28:
  1465   00FF90  42                 	db	66	;'B'
  1466   00FF91  61                 	db	97	;'a'
  1467   00FF92  74                 	db	116	;'t'
  1468   00FF93  74                 	db	116	;'t'
  1469   00FF94  65                 	db	101	;'e'
  1470   00FF95  72                 	db	114	;'r'
  1471   00FF96  79                 	db	121	;'y'
  1472   00FF97  20                 	db	32
  1473   00FF98  00                 	db	0
  1474   00FF99                     STR_36:
  1475   00FF99  42                 	db	66	;'B'
  1476   00FF9A  61                 	db	97	;'a'
  1477   00FF9B  63                 	db	99	;'c'
  1478   00FF9C  6B                 	db	107	;'k'
  1479   00FF9D  77                 	db	119	;'w'
  1480   00FF9E  61                 	db	97	;'a'
  1481   00FF9F  72                 	db	114	;'r'
  1482   00FFA0  64                 	db	100	;'d'
  1483   00FFA1  00                 	db	0
  1484   00FFA2                     STR_1:
  1485   00FFA2  44                 	db	68	;'D'
  1486   00FFA3  69                 	db	105	;'i'
  1487   00FFA4  61                 	db	97	;'a'
  1488   00FFA5  67                 	db	103	;'g'
  1489   00FFA6  6E                 	db	110	;'n'
  1490   00FFA7  6F                 	db	111	;'o'
  1491   00FFA8  73                 	db	115	;'s'
  1492   00FFA9  65                 	db	101	;'e'
  1493   00FFAA  00                 	db	0
  1494   00FFAB                     STR_15:
  1495   00FFAB  43                 	db	67	;'C'
  1496   00FFAC  6F                 	db	111	;'o'
  1497   00FFAD  6D                 	db	109	;'m'
  1498   00FFAE  70                 	db	112	;'p'
  1499   00FFAF  6C                 	db	108	;'l'
  1500   00FFB0  65                 	db	101	;'e'
  1501   00FFB1  74                 	db	116	;'t'
  1502   00FFB2  65                 	db	101	;'e'
  1503   00FFB3  00                 	db	0
  1504   00FFB4                     STR_89:
  1505   00FFB4  43                 	db	67	;'C'
  1506   00FFB5  6F                 	db	111	;'o'
  1507   00FFB6  75                 	db	117	;'u'
  1508   00FFB7  6E                 	db	110	;'n'
  1509   00FFB8  74                 	db	116	;'t'
  1510   00FFB9  69                 	db	105	;'i'
  1511   00FFBA  6E                 	db	110	;'n'
  1512   00FFBB  67                 	db	103	;'g'
  1513   00FFBC  00                 	db	0
  1514   00FFBD                     STR_60:
  1515   00FFBD  41                 	db	65	;'A'
  1516   00FFBE  75                 	db	117	;'u'
  1517   00FFBF  74                 	db	116	;'t'
  1518   00FFC0  6F                 	db	111	;'o'
  1519   00FFC1  20                 	db	32
  1520   00FFC2  43                 	db	67	;'C'
  1521   00FFC3  61                 	db	97	;'a'
  1522   00FFC4  6C                 	db	108	;'l'
  1523   00FFC5  00                 	db	0
  1524   00FFC6                     STR_20:
  1525   00FFC6  53                 	db	83	;'S'
  1526   00FFC7  65                 	db	101	;'e'
  1527   00FFC8  6E                 	db	110	;'n'
  1528   00FFC9  73                 	db	115	;'s'
  1529   00FFCA  6F                 	db	111	;'o'
  1530   00FFCB  72                 	db	114	;'r'
  1531   00FFCC  20                 	db	32
  1532   00FFCD  00                 	db	0
  1533   00FFCE                     STR_52:
  1534   00FFCE  54                 	db	84	;'T'
  1535   00FFCF  53                 	db	83	;'S'
  1536   00FFD0  65                 	db	101	;'e'
  1537   00FFD1  6E                 	db	110	;'n'
  1538   00FFD2  73                 	db	115	;'s'
  1539   00FFD3  6F                 	db	111	;'o'
  1540   00FFD4  72                 	db	114	;'r'
  1541   00FFD5  00                 	db	0
  1542   00FFD6                     STR_17:
  1543   00FFD6  53                 	db	83	;'S'
  1544   00FFD7  65                 	db	101	;'e'
  1545   00FFD8  6E                 	db	110	;'n'
  1546   00FFD9  73                 	db	115	;'s'
  1547   00FFDA  6F                 	db	111	;'o'
  1548   00FFDB  72                 	db	114	;'r'
  1549   00FFDC  73                 	db	115	;'s'
  1550   00FFDD  00                 	db	0
  1551   00FFDE                     STR_27:
  1552   00FFDE  20                 	db	32
  1553   00FFDF  20                 	db	32
  1554   00FFE0  25                 	db	37
  1555   00FFE1  75                 	db	117	;'u'
  1556   00FFE2  20                 	db	32
  1557   00FFE3  20                 	db	32
  1558   00FFE4  00                 	db	0
  1559   00FFE5                     STR_2:
  1560   00FFE5  25                 	db	37
  1561   00FFE6  75                 	db	117	;'u'
  1562   00FFE7  20                 	db	32
  1563   00FFE8  6D                 	db	109	;'m'
  1564   00FFE9  56                 	db	86	;'V'
  1565   00FFEA  00                 	db	0
  1566   00FFEB                     STR_44:
  1567   00FFEB  25                 	db	37
  1568   00FFEC  75                 	db	117	;'u'
  1569   00FFED  20                 	db	32
  1570   00FFEE  25                 	db	37
  1571   00FFEF  75                 	db	117	;'u'
  1572   00FFF0  00                 	db	0
  1573   00FFF1                     STR_35:
  1574   00FFF1  20                 	db	32
  1575   00FFF2  25                 	db	37
  1576   00FFF3  75                 	db	117	;'u'
  1577   00FFF4  20                 	db	32
  1578   00FFF5  00                 	db	0
  1579   00FFF6                     STR_53:
  1580   00FFF6  52                 	db	82	;'R'
  1581   00FFF7  75                 	db	117	;'u'
  1582   00FFF8  6E                 	db	110	;'n'
  1583   00FFF9  00                 	db	0
  1584   00FFFA  00                 	db	0	; dummy byte at the end
  1585   000000                     
  1586                           ; #config settings
  1587                           
  1588                           	psect	cinit
  1589   00DC76                     __pcinit:
  1590                           	callstack 0
  1591   00DC76                     start_initialization:
  1592                           	callstack 0
  1593   00DC76                     __initialization:
  1594                           	callstack 0
  1595                           
  1596                           ; Clear objects allocated to BANK0 (42 bytes)
  1597   00DC76  EE00  F060         	lfsr	0,__pbssBANK0
  1598   00DC7A  0E2A               	movlw	42
  1599   00DC7C                     clear_0:
  1600   00DC7C  6AEE               	clrf	postinc0,c
  1601   00DC7E  06E8               	decf	wreg,f,c
  1602   00DC80  E1FD               	bnz	clear_0
  1603                           
  1604                           ; Clear objects allocated to COMRAM (9 bytes)
  1605   00DC82  EE00  F051         	lfsr	0,__pbssCOMRAM
  1606   00DC86  0E09               	movlw	9
  1607   00DC88                     clear_1:
  1608   00DC88  6AEE               	clrf	postinc0,c
  1609   00DC8A  06E8               	decf	wreg,f,c
  1610   00DC8C  E1FD               	bnz	clear_1
  1611   00DC8E                     end_of_initialization:
  1612                           	callstack 0
  1613   00DC8E                     __end_of__initialization:
  1614                           	callstack 0
  1615   00DC8E  0100               	movlb	0
  1616   00DC90  EFFF  F077         	goto	_main	;jump to C main() function
  1617                           
  1618                           	psect	bssCOMRAM
  1619   000051                     __pbssCOMRAM:
  1620                           	callstack 0
  1621   000051                     _nout:
  1622                           	callstack 0
  1623   000051                     	ds	2
  1624   000053                     _width:
  1625                           	callstack 0
  1626   000053                     	ds	2
  1627   000055                     _prec:
  1628                           	callstack 0
  1629   000055                     	ds	2
  1630   000057                     _flags:
  1631                           	callstack 0
  1632   000057                     	ds	1
  1633   000058                     _uart2RxLastError:
  1634                           	callstack 0
  1635   000058                     	ds	1
  1636   000059                     _uart1RxLastError:
  1637                           	callstack 0
  1638   000059                     	ds	1
  1639                           
  1640                           	psect	bssBANK0
  1641   000060                     __pbssBANK0:
  1642                           	callstack 0
  1643   000060                     _dbuf:
  1644                           	callstack 0
  1645   000060                     	ds	32
  1646   000080                     Calibrate_Sensors@values:
  1647                           	callstack 0
  1648   000080                     	ds	10
  1649                           
  1650                           	psect	cstackBANK0
  1651   00008A                     __pcstackBANK0:
  1652                           	callstack 0
  1653   00008A                     main@any:
  1654                           	callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x0
  1657   00008A                     	ds	1
  1658   00008B                     main@key:
  1659                           	callstack 0
  1660                           
  1661                           ; 1 bytes @ 0x1
  1662   00008B                     	ds	1
  1663   00008C                     main@white:
  1664                           	callstack 0
  1665                           
  1666                           ; 1 bytes @ 0x2
  1667   00008C                     	ds	1
  1668   00008D                     main@black:
  1669                           	callstack 0
  1670                           
  1671                           ; 1 bytes @ 0x3
  1672   00008D                     	ds	1
  1673   00008E                     main@msg:
  1674                           	callstack 0
  1675                           
  1676                           ; 9 bytes @ 0x4
  1677   00008E                     	ds	9
  1678   000097                     main@input:
  1679                           	callstack 0
  1680                           
  1681                           ; 1 bytes @ 0xD
  1682   000097                     	ds	1
  1683   000098                     main@differential:
  1684                           	callstack 0
  1685                           
  1686                           ; 1 bytes @ 0xE
  1687   000098                     	ds	1
  1688   000099                     main@battery:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0xF
  1692   000099                     	ds	2
  1693   00009B                     main@sensor:
  1694                           	callstack 0
  1695                           
  1696                           ; 1 bytes @ 0x11
  1697   00009B                     	ds	1
  1698   00009C                     main@sum:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x12
  1702   00009C                     	ds	2
  1703   00009E                     main@speed:
  1704                           	callstack 0
  1705                           
  1706                           ; 1 bytes @ 0x14
  1707   00009E                     	ds	1
  1708   00009F                     main@length:
  1709                           	callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x15
  1712   00009F                     	ds	1
  1713   0000A0                     main@sensor_value:
  1714                           	callstack 0
  1715                           
  1716                           ; 1 bytes @ 0x16
  1717   0000A0                     	ds	1
  1718   0000A1                     main@i:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x17
  1722   0000A1                     	ds	1
  1723                           
  1724                           	psect	cstackCOMRAM
  1725   000001                     __pcstackCOMRAM:
  1726                           	callstack 0
  1727   000001                     ?_TMR0_Read16BitTimer:
  1728                           	callstack 0
  1729   000001                     ?___awdiv:
  1730                           	callstack 0
  1731   000001                     ?___awmod:
  1732                           	callstack 0
  1733   000001                     ?___lwdiv:
  1734                           	callstack 0
  1735   000001                     ?___lwmod:
  1736                           	callstack 0
  1737   000001                     ?_Read_Calibrated_Sensors:
  1738   000001                     _UART1_is_tx_ready$664:
  1739                           	callstack 0
  1740   000001                     UART1_Write@txData:
  1741                           	callstack 0
  1742   000001                     TMR0_Initialize@TMR0control_1:
  1743                           	callstack 0
  1744   000001                     _UART2_is_tx_ready$1035:
  1745                           	callstack 0
  1746   000001                     UART2_Write@txData:
  1747                           	callstack 0
  1748   000001                     UART1_SetFramingErrorHandler@interruptHandler:
  1749                           	callstack 0
  1750   000001                     UART1_SetOverrunErrorHandler@interruptHandler:
  1751                           	callstack 0
  1752   000001                     UART1_SetErrorHandler@interruptHandler:
  1753                           	callstack 0
  1754   000001                     TMR0_Write16BitTimer@timerVal:
  1755                           	callstack 0
  1756   000001                     UART2_SetFramingErrorHandler@interruptHandler:
  1757                           	callstack 0
  1758   000001                     UART2_SetOverrunErrorHandler@interruptHandler:
  1759                           	callstack 0
  1760   000001                     UART2_SetErrorHandler@interruptHandler:
  1761                           	callstack 0
  1762   000001                     ___awdiv@dividend:
  1763                           	callstack 0
  1764   000001                     ___awmod@dividend:
  1765                           	callstack 0
  1766   000001                     ___lwdiv@dividend:
  1767                           	callstack 0
  1768   000001                     ___lwmod@dividend:
  1769                           	callstack 0
  1770                           
  1771                           ; 2 bytes @ 0x0
  1772   000001                     	ds	1
  1773   000002                     ?_Read_Battery_Voltage:
  1774                           	callstack 0
  1775   000002                     Get_Key@rxdata:
  1776                           	callstack 0
  1777   000002                     LCD_PrintCharacter@byte:
  1778                           	callstack 0
  1779   000002                     LCD_Position@y:
  1780                           	callstack 0
  1781   000002                     Forward@speed:
  1782                           	callstack 0
  1783   000002                     Backward@speed:
  1784                           	callstack 0
  1785   000002                     Left_Turn@differential:
  1786                           	callstack 0
  1787   000002                     Right_Turn@differential:
  1788                           	callstack 0
  1789   000002                     TMR0_Initialize@TMR0control_0:
  1790                           	callstack 0
  1791   000002                     putch@txData:
  1792                           	callstack 0
  1793   000002                     LCD_Print@str:
  1794                           	callstack 0
  1795                           
  1796                           ; 2 bytes @ 0x1
  1797   000002                     	ds	1
  1798   000003                     ??_TMR0_Read16BitTimer:
  1799   000003                     LCD_Position@x:
  1800                           	callstack 0
  1801   000003                     Left_Turn@speed:
  1802                           	callstack 0
  1803   000003                     Right_Turn@speed:
  1804                           	callstack 0
  1805   000003                     ___awdiv@divisor:
  1806                           	callstack 0
  1807   000003                     ___awmod@divisor:
  1808                           	callstack 0
  1809   000003                     ___lwdiv@divisor:
  1810                           	callstack 0
  1811   000003                     ___lwmod@divisor:
  1812                           	callstack 0
  1813   000003                     fputc@c:
  1814                           	callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x2
  1817   000003                     	ds	1
  1818   000004                     ??_Read_Battery_Voltage:
  1819   000004                     ??_Calibrate_Sensors:
  1820   000004                     LCD_Print@length:
  1821                           	callstack 0
  1822                           
  1823                           ; 1 bytes @ 0x3
  1824   000004                     	ds	1
  1825   000005                     ??_LCD_Print:
  1826   000005                     ___awdiv@counter:
  1827                           	callstack 0
  1828   000005                     ___awmod@counter:
  1829                           	callstack 0
  1830   000005                     ___lwmod@counter:
  1831                           	callstack 0
  1832   000005                     TMR0_Read16BitTimer@readVal:
  1833                           	callstack 0
  1834   000005                     ___lwdiv@quotient:
  1835                           	callstack 0
  1836   000005                     fputc@fp:
  1837                           	callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x4
  1840   000005                     	ds	1
  1841   000006                     Read_Battery_Voltage@lbyte:
  1842                           	callstack 0
  1843   000006                     ___awdiv@sign:
  1844                           	callstack 0
  1845   000006                     ___awmod@sign:
  1846                           	callstack 0
  1847                           
  1848                           ; 1 bytes @ 0x5
  1849   000006                     	ds	1
  1850   000007                     ??_fputc:
  1851   000007                     ?_abs:
  1852                           	callstack 0
  1853   000007                     Read_Battery_Voltage@ubyte:
  1854                           	callstack 0
  1855   000007                     LCD_Print@i:
  1856                           	callstack 0
  1857   000007                     TMR0_Read16BitTimer@readValLow:
  1858                           	callstack 0
  1859   000007                     ___lwdiv@counter:
  1860                           	callstack 0
  1861   000007                     ___awdiv@quotient:
  1862                           	callstack 0
  1863   000007                     abs@a:
  1864                           	callstack 0
  1865                           
  1866                           ; 2 bytes @ 0x6
  1867   000007                     	ds	1
  1868   000008                     TMR0_Read16BitTimer@readValHigh:
  1869                           	callstack 0
  1870   000008                     Calibrate_Sensors@lbyte:
  1871                           	callstack 0
  1872                           
  1873                           ; 5 bytes @ 0x7
  1874   000008                     	ds	1
  1875   000009                     ??_abs:
  1876                           
  1877                           ; 1 bytes @ 0x8
  1878   000009                     	ds	3
  1879   00000C                     ?_vfpfcnvrt:
  1880                           	callstack 0
  1881   00000C                     vfpfcnvrt@fp:
  1882                           	callstack 0
  1883                           
  1884                           ; 2 bytes @ 0xB
  1885   00000C                     	ds	1
  1886   00000D                     Calibrate_Sensors@ubyte:
  1887                           	callstack 0
  1888                           
  1889                           ; 5 bytes @ 0xC
  1890   00000D                     	ds	1
  1891   00000E                     vfpfcnvrt@fmt:
  1892                           	callstack 0
  1893                           
  1894                           ; 1 bytes @ 0xD
  1895   00000E                     	ds	1
  1896   00000F                     vfpfcnvrt@ap:
  1897                           	callstack 0
  1898                           
  1899                           ; 1 bytes @ 0xE
  1900   00000F                     	ds	1
  1901   000010                     ??_vfpfcnvrt:
  1902                           
  1903                           ; 1 bytes @ 0xF
  1904   000010                     	ds	2
  1905   000012                     Calibrate_Sensors@i:
  1906                           	callstack 0
  1907   000012                     vfpfcnvrt@done:
  1908                           	callstack 0
  1909                           
  1910                           ; 1 bytes @ 0x11
  1911   000012                     	ds	1
  1912   000013                     vfpfcnvrt@cnt:
  1913                           	callstack 0
  1914                           
  1915                           ; 2 bytes @ 0x12
  1916   000013                     	ds	2
  1917   000015                     vfpfcnvrt@cp:
  1918                           	callstack 0
  1919                           
  1920                           ; 2 bytes @ 0x14
  1921   000015                     	ds	2
  1922   000017                     vfpfcnvrt@convarg:
  1923                           	callstack 0
  1924                           
  1925                           ; 4 bytes @ 0x16
  1926   000017                     	ds	4
  1927   00001B                     vfpfcnvrt@c:
  1928                           	callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x1A
  1931   00001B                     	ds	1
  1932   00001C                     ?_vfprintf:
  1933                           	callstack 0
  1934   00001C                     vfprintf@fp:
  1935                           	callstack 0
  1936                           
  1937                           ; 2 bytes @ 0x1B
  1938   00001C                     	ds	2
  1939   00001E                     vfprintf@fmt:
  1940                           	callstack 0
  1941                           
  1942                           ; 2 bytes @ 0x1D
  1943   00001E                     	ds	2
  1944   000020                     vfprintf@ap:
  1945                           	callstack 0
  1946                           
  1947                           ; 1 bytes @ 0x1F
  1948   000020                     	ds	1
  1949   000021                     vfprintf@cfmt:
  1950                           	callstack 0
  1951                           
  1952                           ; 2 bytes @ 0x20
  1953   000021                     	ds	2
  1954   000023                     ?_sprintf:
  1955                           	callstack 0
  1956   000023                     ?_printf:
  1957                           	callstack 0
  1958   000023                     sprintf@s:
  1959                           	callstack 0
  1960   000023                     printf@fmt:
  1961                           	callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x22
  1964   000023                     	ds	1
  1965   000024                     sprintf@fmt:
  1966                           	callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x23
  1969   000024                     	ds	5
  1970   000029                     printf@ap:
  1971                           	callstack 0
  1972                           
  1973                           ; 1 bytes @ 0x28
  1974   000029                     	ds	1
  1975   00002A                     Get_Number@value:
  1976                           	callstack 0
  1977   00002A                     sprintf@ret:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x29
  1981   00002A                     	ds	1
  1982   00002B                     Get_Number@digit:
  1983                           	callstack 0
  1984                           
  1985                           ; 1 bytes @ 0x2A
  1986   00002B                     	ds	1
  1987   00002C                     sprintf@ap:
  1988                           	callstack 0
  1989                           
  1990                           ; 1 bytes @ 0x2B
  1991   00002C                     	ds	1
  1992   00002D                     sprintf@f:
  1993                           	callstack 0
  1994                           
  1995                           ; 12 bytes @ 0x2C
  1996   00002D                     	ds	12
  1997   000039                     ??_Countdown:
  1998                           
  1999                           ; 1 bytes @ 0x38
  2000   000039                     	ds	2
  2001   00003B                     Countdown@msg:
  2002                           	callstack 0
  2003                           
  2004                           ; 9 bytes @ 0x3A
  2005   00003B                     	ds	9
  2006   000044                     Countdown@counts:
  2007                           	callstack 0
  2008                           
  2009                           ; 2 bytes @ 0x43
  2010   000044                     	ds	2
  2011   000046                     Countdown@time:
  2012                           	callstack 0
  2013                           
  2014                           ; 1 bytes @ 0x45
  2015   000046                     	ds	1
  2016   000047                     Countdown@length:
  2017                           	callstack 0
  2018                           
  2019                           ; 1 bytes @ 0x46
  2020   000047                     	ds	1
  2021   000048                     Countdown@i:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x47
  2025   000048                     	ds	1
  2026   000049                     ??_main:
  2027                           
  2028                           ; 1 bytes @ 0x48
  2029   000049                     	ds	8
  2030                           
  2031 ;;
  2032 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  2033 ;;
  2034 ;; *************** function _main *****************
  2035 ;; Defined at:
  2036 ;;		line 40 in file "robotmain.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  input           1   13[BANK0 ] unsigned char 
  2041 ;;  msg             9    4[BANK0 ] unsigned char [9]
  2042 ;;  sum             2   18[BANK0 ] unsigned int 
  2043 ;;  battery         2   15[BANK0 ] unsigned int 
  2044 ;;  i               1   23[BANK0 ] unsigned char 
  2045 ;;  sensor_value    1   22[BANK0 ] PTR unsigned int 
  2046 ;;		 -> Calibrate_Sensors@values(10), 
  2047 ;;  length          1   21[BANK0 ] unsigned char 
  2048 ;;  speed           1   20[BANK0 ] unsigned char 
  2049 ;;  sensor          1   17[BANK0 ] unsigned char 
  2050 ;;  differential    1   14[BANK0 ] unsigned char 
  2051 ;;  black           1    3[BANK0 ] _Bool 
  2052 ;;  white           1    2[BANK0 ] _Bool 
  2053 ;;  key             1    1[BANK0 ] unsigned char 
  2054 ;;  any             1    0[BANK0 ] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:       32 bytes
  2069 ;; Hardware stack levels required when called: 7
  2070 ;; This function calls:
  2071 ;;		_Auto_Calibrate
  2072 ;;		_Backward
  2073 ;;		_Calibrate_Sensors
  2074 ;;		_Countdown
  2075 ;;		_Diagnostic_Menu
  2076 ;;		_Forward
  2077 ;;		_Get_Key
  2078 ;;		_Get_Number
  2079 ;;		_LCD_Clear
  2080 ;;		_LCD_Position
  2081 ;;		_LCD_Print
  2082 ;;		_LCD_PrintCharacter
  2083 ;;		_Left_Turn
  2084 ;;		_PIN_MANAGER_Initialize
  2085 ;;		_Read_Battery_Voltage
  2086 ;;		_Read_Calibrated_Sensors
  2087 ;;		_Right_Turn
  2088 ;;		_SYSTEM_Initialize
  2089 ;;		_Stop
  2090 ;;		_TMR0_HasOverflowOccured
  2091 ;;		_TMR0_Initialize
  2092 ;;		_TMR0_StartTimer
  2093 ;;		_TMR0_StopTimer
  2094 ;;		_TMR0_Write16BitTimer
  2095 ;;		_Turn_PD_ON
  2096 ;;		_UART1_Initialize
  2097 ;;		_UART1_Write
  2098 ;;		_UART1_is_tx_ready
  2099 ;;		_UART2_Initialize
  2100 ;;		_UART2_Read
  2101 ;;		_UART2_is_rx_ready
  2102 ;;		_printf
  2103 ;;		_sprintf
  2104 ;; This function is called by:
  2105 ;;		Startup code after reset
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text0
  2110   00EFFE                     __ptext0:
  2111                           	callstack 0
  2112   00EFFE                     _main:
  2113                           	callstack 24
  2114   00EFFE                     
  2115                           ;robotmain.c: 42:     SYSTEM_Initialize();
  2116   00EFFE  ECC5  F06D         	call	_SYSTEM_Initialize	;wreg free
  2117                           
  2118                           ;robotmain.c: 43:     PIN_MANAGER_Initialize();
  2119   00F002  ECA5  F074         	call	_PIN_MANAGER_Initialize	;wreg free
  2120   00F006                     
  2121                           ;robotmain.c: 44:     UART1_Initialize();
  2122   00F006  EC17  F070         	call	_UART1_Initialize	;wreg free
  2123   00F00A                     
  2124                           ;robotmain.c: 45:     UART2_Initialize();
  2125   00F00A  EC86  F06F         	call	_UART2_Initialize	;wreg free
  2126   00F00E                     
  2127                           ;robotmain.c: 48:     TRISBbits.TRISB5 = 1;
  2128   00F00E  8AC3               	bsf	195,5,c	;volatile
  2129   00F010                     
  2130                           ;robotmain.c: 49:     ANSELBbits.ANSELB5 = 0;
  2131   00F010  013A               	movlb	58	; () banked
  2132   00F012  9B50               	bcf	80,5,b	;volatile
  2133   00F014                     
  2134                           ; BSR set to: 58
  2135                           ;robotmain.c: 52:     char key, speed, differential;;robotmain.c: 53:     char i, length
      +                          , any, sensor;;robotmain.c: 54:     char msg[9];;robotmain.c: 55:     unsigned int sum, 
      +                          battery;;robotmain.c: 56:     unsigned int* sensor_value;;robotmain.c: 57:     _Bool whi
      +                          te, black;;robotmain.c: 60:     if (PORTBbits.RB5 == 0)
  2136   00F014  BACB               	btfsc	203,5,c	;volatile
  2137   00F016  EF0F  F078         	goto	u2611
  2138   00F01A  EF11  F078         	goto	u2610
  2139   00F01E                     u2611:
  2140   00F01E  EF92  F07C         	goto	l85
  2141   00F022                     u2610:
  2142   00F022                     
  2143                           ; BSR set to: 58
  2144                           ;robotmain.c: 61:     {;robotmain.c: 62:         Diagnostic_Menu();
  2145   00F022  EC0B  F075         	call	_Diagnostic_Menu	;wreg free
  2146   00F026                     
  2147                           ;robotmain.c: 63:         LCD_Clear();
  2148   00F026  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2149   00F02A                     
  2150                           ;robotmain.c: 64:         LCD_Position(0,0);
  2151   00F02A  0E00               	movlw	0
  2152   00F02C  6E02               	movwf	LCD_Position@y^0,c
  2153   00F02E  0E00               	movlw	0
  2154   00F030  ECD8  F06E         	call	_LCD_Position
  2155   00F034                     
  2156                           ;robotmain.c: 65:         LCD_Print("Diagnose", 8);
  2157   00F034  0EA2               	movlw	low STR_1
  2158   00F036  6E02               	movwf	LCD_Print@str^0,c
  2159   00F038  0EFF               	movlw	high STR_1
  2160   00F03A  6E03               	movwf	(LCD_Print@str+1)^0,c
  2161   00F03C  0E08               	movlw	8
  2162   00F03E  6E04               	movwf	LCD_Print@length^0,c
  2163   00F040  ECE0  F072         	call	_LCD_Print	;wreg free
  2164   00F044                     
  2165                           ;robotmain.c: 66:         battery = Read_Battery_Voltage();
  2166   00F044  ECB4  F06F         	call	_Read_Battery_Voltage	;wreg free
  2167   00F048  C002  F099         	movff	?_Read_Battery_Voltage,main@battery
  2168   00F04C  C003  F09A         	movff	?_Read_Battery_Voltage+1,main@battery+1
  2169   00F050                     
  2170                           ;robotmain.c: 67:         length = sprintf(msg, "%u mV", battery);
  2171   00F050  0E8E               	movlw	low main@msg
  2172   00F052  6E23               	movwf	sprintf@s^0,c
  2173   00F054  0EE5               	movlw	low STR_2
  2174   00F056  6E24               	movwf	sprintf@fmt^0,c
  2175   00F058  0EFF               	movlw	high STR_2
  2176   00F05A  6E25               	movwf	(sprintf@fmt+1)^0,c
  2177   00F05C  C099  F026         	movff	main@battery,?_sprintf+3
  2178   00F060  C09A  F027         	movff	main@battery+1,?_sprintf+4
  2179   00F064  ECB3  F06E         	call	_sprintf	;wreg free
  2180   00F068  5023               	movf	?_sprintf^0,w,c
  2181   00F06A  0100               	movlb	0	; () banked
  2182   00F06C  6F9F               	movwf	main@length& (0+255),b
  2183   00F06E                     
  2184                           ; BSR set to: 0
  2185                           ;robotmain.c: 68:         LCD_Position(0,1);
  2186   00F06E  0E01               	movlw	1
  2187   00F070  6E02               	movwf	LCD_Position@y^0,c
  2188   00F072  0E00               	movlw	0
  2189   00F074  ECD8  F06E         	call	_LCD_Position
  2190   00F078                     l3745:
  2191                           
  2192                           ;robotmain.c: 69:         LCD_Print(msg, length);
  2193   00F078  0E8E               	movlw	low main@msg
  2194   00F07A  6E02               	movwf	LCD_Print@str^0,c
  2195   00F07C  6A03               	clrf	(LCD_Print@str+1)^0,c
  2196   00F07E  C09F  F004         	movff	main@length,LCD_Print@length
  2197   00F082  ECE0  F072         	call	_LCD_Print	;wreg free
  2198   00F086                     l3747:
  2199                           
  2200                           ;robotmain.c: 71:         {;robotmain.c: 72:             key = Get_Key();
  2201   00F086  ECB2  F071         	call	_Get_Key	;wreg free
  2202   00F08A  0100               	movlb	0	; () banked
  2203   00F08C  6F8B               	movwf	main@key& (0+255),b
  2204                           
  2205                           ;robotmain.c: 73:             switch (key)
  2206   00F08E  EF55  F07C         	goto	l4049
  2207   00F092                     l3749:
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;robotmain.c: 80:                     Countdown(6);
  2211   00F092  0E06               	movlw	6
  2212   00F094  EC9C  F075         	call	_Countdown
  2213   00F098                     
  2214                           ;robotmain.c: 81:                     Forward(20);
  2215   00F098  0E14               	movlw	20
  2216   00F09A  EC29  F071         	call	_Forward
  2217   00F09E                     
  2218                           ;robotmain.c: 82:                     TMR0_Initialize(0x9F & 0x90, 0xF9 & 0xEF & 0x5F);
  2219   00F09E  0E49               	movlw	73
  2220   00F0A0  6E01               	movwf	TMR0_Initialize@TMR0control_1^0,c
  2221   00F0A2  0E90               	movlw	144
  2222   00F0A4  ECD7  F06D         	call	_TMR0_Initialize
  2223   00F0A8                     
  2224                           ;robotmain.c: 83:                     TMR0_Write16BitTimer(6940);
  2225   00F0A8  0E1B               	movlw	27
  2226   00F0AA  6E02               	movwf	(TMR0_Write16BitTimer@timerVal+1)^0,c
  2227   00F0AC  0E1C               	movlw	28
  2228   00F0AE  6E01               	movwf	TMR0_Write16BitTimer@timerVal^0,c
  2229   00F0B0  ECBF  F06D         	call	_TMR0_Write16BitTimer	;wreg free
  2230   00F0B4                     
  2231                           ;robotmain.c: 84:                     TMR0_StartTimer();
  2232   00F0B4  EC94  F06D         	call	_TMR0_StartTimer	;wreg free
  2233   00F0B8                     l3759:
  2234                           
  2235                           ;robotmain.c: 86:                     {;robotmain.c: 87:                         if (TMR
      +                          0_HasOverflowOccured())
  2236   00F0B8  ECED  F06D         	call	_TMR0_HasOverflowOccured	;wreg free
  2237   00F0BC  0900               	iorlw	0
  2238   00F0BE  B4D8               	btfsc	status,2,c
  2239   00F0C0  EF64  F078         	goto	u2621
  2240   00F0C4  EF66  F078         	goto	u2620
  2241   00F0C8                     u2621:
  2242   00F0C8  EF5C  F078         	goto	l3759
  2243   00F0CC                     u2620:
  2244   00F0CC                     
  2245                           ;robotmain.c: 88:                         {;robotmain.c: 89:                            
      +                           TMR0_StopTimer();
  2246   00F0CC  EC96  F06D         	call	_TMR0_StopTimer	;wreg free
  2247   00F0D0                     
  2248                           ;robotmain.c: 90:                             Forward(0);
  2249   00F0D0  0E00               	movlw	0
  2250   00F0D2  EC29  F071         	call	_Forward
  2251                           
  2252                           ;robotmain.c: 91:                          break;
  2253   00F0D6  EF43  F078         	goto	l3747
  2254   00F0DA                     l3765:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;robotmain.c: 97:                     LCD_Clear();
  2258   00F0DA  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2259                           
  2260                           ;robotmain.c: 98:                     LCD_Position(0,0);
  2261   00F0DE  0E00               	movlw	0
  2262   00F0E0  6E02               	movwf	LCD_Position@y^0,c
  2263   00F0E2  0E00               	movlw	0
  2264   00F0E4  ECD8  F06E         	call	_LCD_Position
  2265   00F0E8                     
  2266                           ;robotmain.c: 99:                     LCD_Print("Calibrate", 8);
  2267   00F0E8  0E1A               	movlw	low STR_3
  2268   00F0EA  6E02               	movwf	LCD_Print@str^0,c
  2269   00F0EC  0EFF               	movlw	high STR_3
  2270   00F0EE  6E03               	movwf	(LCD_Print@str+1)^0,c
  2271   00F0F0  0E08               	movlw	8
  2272   00F0F2  6E04               	movwf	LCD_Print@length^0,c
  2273   00F0F4  ECE0  F072         	call	_LCD_Print	;wreg free
  2274   00F0F8                     
  2275                           ;robotmain.c: 100:                     LCD_Position(0,1);
  2276   00F0F8  0E01               	movlw	1
  2277   00F0FA  6E02               	movwf	LCD_Position@y^0,c
  2278   00F0FC  0E00               	movlw	0
  2279   00F0FE  ECD8  F06E         	call	_LCD_Position
  2280                           
  2281                           ;robotmain.c: 101:                     LCD_Print("Sensors ", 8);
  2282   00F102  0E87               	movlw	low STR_4
  2283   00F104  6E02               	movwf	LCD_Print@str^0,c
  2284   00F106  0EFF               	movlw	high STR_4
  2285   00F108  6E03               	movwf	(LCD_Print@str+1)^0,c
  2286   00F10A  0E08               	movlw	8
  2287   00F10C  6E04               	movwf	LCD_Print@length^0,c
  2288   00F10E  ECE0  F072         	call	_LCD_Print	;wreg free
  2289   00F112                     
  2290                           ;robotmain.c: 102:                     printf("\n\r");
  2291   00F112  0EA0               	movlw	low (STR_25+41)
  2292   00F114  6E23               	movwf	printf@fmt^0,c
  2293   00F116  0EFC               	movlw	high (STR_25+41)
  2294   00F118  6E24               	movwf	(printf@fmt+1)^0,c
  2295   00F11A  EC2C  F06E         	call	_printf	;wreg free
  2296   00F11E                     
  2297                           ;robotmain.c: 103:                     white = 0;
  2298   00F11E  0E00               	movlw	0
  2299   00F120  0100               	movlb	0	; () banked
  2300   00F122  6F8C               	movwf	main@white& (0+255),b
  2301                           
  2302                           ;robotmain.c: 104:                     while (!white)
  2303   00F124  EFF4  F078         	goto	l3803
  2304   00F128                     l3775:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;robotmain.c: 105:                     {;robotmain.c: 106:                         print
      +                          f("Place all five sensors on a white surface \n\r");
  2308   00F128  0E1D               	movlw	low STR_6
  2309   00F12A  6E23               	movwf	printf@fmt^0,c
  2310   00F12C  0EFC               	movlw	high STR_6
  2311   00F12E  6E24               	movwf	(printf@fmt+1)^0,c
  2312   00F130  EC2C  F06E         	call	_printf	;wreg free
  2313                           
  2314                           ;robotmain.c: 107:                         printf("Press any key to continue \n\r");
  2315   00F134  0E2E               	movlw	low STR_7
  2316   00F136  6E23               	movwf	printf@fmt^0,c
  2317   00F138  0EFE               	movlw	high STR_7
  2318   00F13A  6E24               	movwf	(printf@fmt+1)^0,c
  2319   00F13C  EC2C  F06E         	call	_printf	;wreg free
  2320   00F140                     
  2321                           ;robotmain.c: 108:                         any = Get_Key();
  2322   00F140  ECB2  F071         	call	_Get_Key	;wreg free
  2323   00F144  0100               	movlb	0	; () banked
  2324   00F146  6F8A               	movwf	main@any& (0+255),b
  2325   00F148                     
  2326                           ; BSR set to: 0
  2327                           ;robotmain.c: 109:                         sensor_value = Calibrate_Sensors();
  2328   00F148  EC88  F073         	call	_Calibrate_Sensors	;wreg free
  2329   00F14C  0100               	movlb	0	; () banked
  2330   00F14E  6FA0               	movwf	main@sensor_value& (0+255),b
  2331   00F150                     
  2332                           ; BSR set to: 0
  2333                           ;robotmain.c: 110:                         sum = 0;
  2334   00F150  0E00               	movlw	0
  2335   00F152  6F9D               	movwf	(main@sum+1)& (0+255),b
  2336   00F154  0E00               	movlw	0
  2337   00F156  6F9C               	movwf	main@sum& (0+255),b
  2338   00F158                     
  2339                           ; BSR set to: 0
  2340                           ;robotmain.c: 111:                         for (i=0; i<5; i++)
  2341   00F158  0E00               	movlw	0
  2342   00F15A  6FA1               	movwf	main@i& (0+255),b
  2343   00F15C                     l3785:
  2344                           
  2345                           ; BSR set to: 0
  2346   00F15C  0E04               	movlw	4
  2347   00F15E  65A1               	cpfsgt	main@i& (0+255),b
  2348   00F160  EFB4  F078         	goto	u2631
  2349   00F164  EFB6  F078         	goto	u2630
  2350   00F168                     u2631:
  2351   00F168  EFB8  F078         	goto	l3789
  2352   00F16C                     u2630:
  2353   00F16C  EFE3  F078         	goto	l3797
  2354   00F170                     l3789:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;robotmain.c: 112:                         {;robotmain.c: 113:                          
      +                             sum = sum + sensor_value[i];
  2358   00F170  51A1               	movf	main@i& (0+255),w,b
  2359   00F172  0D02               	mullw	2
  2360   00F174  51A0               	movf	main@sensor_value& (0+255),w,b
  2361   00F176  24F3               	addwf	243,w,c
  2362   00F178  6ED9               	movwf	fsr2l,c
  2363   00F17A  6ADA               	clrf	fsr2h,c
  2364   00F17C  006F FF78  F049    	movff	postinc2,??_main
  2365   00F182  006F FF74  F04A    	movff	postdec2,??_main+1
  2366   00F188  519C               	movf	main@sum& (0+255),w,b
  2367   00F18A  2449               	addwf	??_main^0,w,c
  2368   00F18C  6F9C               	movwf	main@sum& (0+255),b
  2369   00F18E  519D               	movf	(main@sum+1)& (0+255),w,b
  2370   00F190  204A               	addwfc	(??_main+1)^0,w,c
  2371   00F192  6F9D               	movwf	(main@sum+1)& (0+255),b
  2372   00F194                     
  2373                           ; BSR set to: 0
  2374                           ;robotmain.c: 114:                             printf("Sensor %u = %u \n\r", i, sensor_v
      +                          alue[i]);
  2375   00F194  0E08               	movlw	low (STR_54+1)
  2376   00F196  6E23               	movwf	printf@fmt^0,c
  2377   00F198  0EFF               	movlw	high (STR_54+1)
  2378   00F19A  6E24               	movwf	(printf@fmt+1)^0,c
  2379   00F19C  C0A1  F025         	movff	main@i,?_printf+2
  2380   00F1A0  6A26               	clrf	(?_printf+3)^0,c
  2381   00F1A2  51A1               	movf	main@i& (0+255),w,b
  2382   00F1A4  0D02               	mullw	2
  2383   00F1A6  51A0               	movf	main@sensor_value& (0+255),w,b
  2384   00F1A8  24F3               	addwf	243,w,c
  2385   00F1AA  6ED9               	movwf	fsr2l,c
  2386   00F1AC  6ADA               	clrf	fsr2h,c
  2387   00F1AE  006F FF78  F027    	movff	postinc2,?_printf+4
  2388   00F1B4  006F FF74  F028    	movff	postdec2,?_printf+5
  2389   00F1BA  EC2C  F06E         	call	_printf	;wreg free
  2390   00F1BE                     
  2391                           ;robotmain.c: 115:                         }
  2392   00F1BE  0100               	movlb	0	; () banked
  2393   00F1C0  2BA1               	incf	main@i& (0+255),f,b
  2394   00F1C2  EFAE  F078         	goto	l3785
  2395   00F1C6                     l3797:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;robotmain.c: 116:                         if (sum == 0)
  2399   00F1C6  519C               	movf	main@sum& (0+255),w,b
  2400   00F1C8  119D               	iorwf	(main@sum+1)& (0+255),w,b
  2401   00F1CA  A4D8               	btfss	status,2,c
  2402   00F1CC  EFEA  F078         	goto	u2641
  2403   00F1D0  EFEC  F078         	goto	u2640
  2404   00F1D4                     u2641:
  2405   00F1D4  EFF4  F078         	goto	l3803
  2406   00F1D8                     u2640:
  2407   00F1D8                     
  2408                           ; BSR set to: 0
  2409                           ;robotmain.c: 117:                         {;robotmain.c: 118:                          
      +                             white = 1;
  2410   00F1D8  0E01               	movlw	1
  2411   00F1DA  6F8C               	movwf	main@white& (0+255),b
  2412   00F1DC                     
  2413                           ; BSR set to: 0
  2414                           ;robotmain.c: 119:                             printf("White calibration complete \n\r")
      +                          ;
  2415   00F1DC  0ED5               	movlw	low STR_9
  2416   00F1DE  6E23               	movwf	printf@fmt^0,c
  2417   00F1E0  0EFD               	movlw	high STR_9
  2418   00F1E2  6E24               	movwf	(printf@fmt+1)^0,c
  2419   00F1E4  EC2C  F06E         	call	_printf	;wreg free
  2420   00F1E8                     l3803:
  2421                           
  2422                           ;robotmain.c: 104:                     while (!white)
  2423   00F1E8  0100               	movlb	0	; () banked
  2424   00F1EA  518C               	movf	main@white& (0+255),w,b
  2425   00F1EC  B4D8               	btfsc	status,2,c
  2426   00F1EE  EFFB  F078         	goto	u2651
  2427   00F1F2  EFFD  F078         	goto	u2650
  2428   00F1F6                     u2651:
  2429   00F1F6  EF94  F078         	goto	l3775
  2430   00F1FA                     u2650:
  2431   00F1FA                     
  2432                           ; BSR set to: 0
  2433                           ;robotmain.c: 122:                     black = 0;
  2434   00F1FA  0E00               	movlw	0
  2435   00F1FC  6F8D               	movwf	main@black& (0+255),b
  2436                           
  2437                           ;robotmain.c: 123:                     while (!black)
  2438   00F1FE  EF77  F079         	goto	l3841
  2439   00F202                     l3807:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;robotmain.c: 124:                     {;robotmain.c: 125:                         print
      +                          f("Place all five sensors on a black surface \n\r");
  2443   00F202  0E4A               	movlw	low STR_10
  2444   00F204  6E23               	movwf	printf@fmt^0,c
  2445   00F206  0EFC               	movlw	high STR_10
  2446   00F208  6E24               	movwf	(printf@fmt+1)^0,c
  2447   00F20A  EC2C  F06E         	call	_printf	;wreg free
  2448                           
  2449                           ;robotmain.c: 126:                         printf("Press any key to continue \n\r");
  2450   00F20E  0E2E               	movlw	low STR_7
  2451   00F210  6E23               	movwf	printf@fmt^0,c
  2452   00F212  0EFE               	movlw	high STR_7
  2453   00F214  6E24               	movwf	(printf@fmt+1)^0,c
  2454   00F216  EC2C  F06E         	call	_printf	;wreg free
  2455   00F21A                     
  2456                           ;robotmain.c: 127:                         any = Get_Key();
  2457   00F21A  ECB2  F071         	call	_Get_Key	;wreg free
  2458   00F21E  0100               	movlb	0	; () banked
  2459   00F220  6F8A               	movwf	main@any& (0+255),b
  2460   00F222                     
  2461                           ; BSR set to: 0
  2462                           ;robotmain.c: 128:                         sensor_value = Calibrate_Sensors();
  2463   00F222  EC88  F073         	call	_Calibrate_Sensors	;wreg free
  2464   00F226  0100               	movlb	0	; () banked
  2465   00F228  6FA0               	movwf	main@sensor_value& (0+255),b
  2466   00F22A                     
  2467                           ; BSR set to: 0
  2468                           ;robotmain.c: 129:                         sum = 0;
  2469   00F22A  0E00               	movlw	0
  2470   00F22C  6F9D               	movwf	(main@sum+1)& (0+255),b
  2471   00F22E  0E00               	movlw	0
  2472   00F230  6F9C               	movwf	main@sum& (0+255),b
  2473   00F232                     
  2474                           ; BSR set to: 0
  2475                           ;robotmain.c: 130:                         for (i=0; i<5; i++)
  2476   00F232  0E00               	movlw	0
  2477   00F234  6FA1               	movwf	main@i& (0+255),b
  2478   00F236                     l3817:
  2479                           
  2480                           ; BSR set to: 0
  2481   00F236  0E04               	movlw	4
  2482   00F238  65A1               	cpfsgt	main@i& (0+255),b
  2483   00F23A  EF21  F079         	goto	u2661
  2484   00F23E  EF23  F079         	goto	u2660
  2485   00F242                     u2661:
  2486   00F242  EF25  F079         	goto	l3821
  2487   00F246                     u2660:
  2488   00F246  EF50  F079         	goto	l3829
  2489   00F24A                     l3821:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;robotmain.c: 131:                         {;robotmain.c: 132:                          
      +                             sum = sum + sensor_value[i];
  2493   00F24A  51A1               	movf	main@i& (0+255),w,b
  2494   00F24C  0D02               	mullw	2
  2495   00F24E  51A0               	movf	main@sensor_value& (0+255),w,b
  2496   00F250  24F3               	addwf	243,w,c
  2497   00F252  6ED9               	movwf	fsr2l,c
  2498   00F254  6ADA               	clrf	fsr2h,c
  2499   00F256  006F FF78  F049    	movff	postinc2,??_main
  2500   00F25C  006F FF74  F04A    	movff	postdec2,??_main+1
  2501   00F262  519C               	movf	main@sum& (0+255),w,b
  2502   00F264  2449               	addwf	??_main^0,w,c
  2503   00F266  6F9C               	movwf	main@sum& (0+255),b
  2504   00F268  519D               	movf	(main@sum+1)& (0+255),w,b
  2505   00F26A  204A               	addwfc	(??_main+1)^0,w,c
  2506   00F26C  6F9D               	movwf	(main@sum+1)& (0+255),b
  2507   00F26E                     
  2508                           ; BSR set to: 0
  2509                           ;robotmain.c: 133:                             printf("Sensor %u = %u \n\r", i, sensor_v
      +                          alue[i]);
  2510   00F26E  0E08               	movlw	low (STR_54+1)
  2511   00F270  6E23               	movwf	printf@fmt^0,c
  2512   00F272  0EFF               	movlw	high (STR_54+1)
  2513   00F274  6E24               	movwf	(printf@fmt+1)^0,c
  2514   00F276  C0A1  F025         	movff	main@i,?_printf+2
  2515   00F27A  6A26               	clrf	(?_printf+3)^0,c
  2516   00F27C  51A1               	movf	main@i& (0+255),w,b
  2517   00F27E  0D02               	mullw	2
  2518   00F280  51A0               	movf	main@sensor_value& (0+255),w,b
  2519   00F282  24F3               	addwf	243,w,c
  2520   00F284  6ED9               	movwf	fsr2l,c
  2521   00F286  6ADA               	clrf	fsr2h,c
  2522   00F288  006F FF78  F027    	movff	postinc2,?_printf+4
  2523   00F28E  006F FF74  F028    	movff	postdec2,?_printf+5
  2524   00F294  EC2C  F06E         	call	_printf	;wreg free
  2525   00F298                     
  2526                           ;robotmain.c: 134:                         }
  2527   00F298  0100               	movlb	0	; () banked
  2528   00F29A  2BA1               	incf	main@i& (0+255),f,b
  2529   00F29C  EF1B  F079         	goto	l3817
  2530   00F2A0                     l3829:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;robotmain.c: 135:                         if (sum == 5000)
  2534   00F2A0  0E88               	movlw	136
  2535   00F2A2  199C               	xorwf	main@sum& (0+255),w,b
  2536   00F2A4  E107               	bnz	u2671
  2537   00F2A6  0E13               	movlw	19
  2538   00F2A8  199D               	xorwf	(main@sum+1)& (0+255),w,b
  2539   00F2AA  A4D8               	btfss	status,2,c
  2540   00F2AC  EF5A  F079         	goto	u2671
  2541   00F2B0  EF5C  F079         	goto	u2670
  2542   00F2B4                     u2671:
  2543   00F2B4  EF77  F079         	goto	l3841
  2544   00F2B8                     u2670:
  2545   00F2B8                     
  2546                           ; BSR set to: 0
  2547                           ;robotmain.c: 136:                         {;robotmain.c: 137:                          
      +                             black = 1;
  2548   00F2B8  0E01               	movlw	1
  2549   00F2BA  6F8D               	movwf	main@black& (0+255),b
  2550   00F2BC                     
  2551                           ; BSR set to: 0
  2552                           ;robotmain.c: 138:                             printf("Black calibration complete \n\r")
      +                          ;
  2553   00F2BC  0EF3               	movlw	low STR_13
  2554   00F2BE  6E23               	movwf	printf@fmt^0,c
  2555   00F2C0  0EFD               	movlw	high STR_13
  2556   00F2C2  6E24               	movwf	(printf@fmt+1)^0,c
  2557   00F2C4  EC2C  F06E         	call	_printf	;wreg free
  2558   00F2C8                     
  2559                           ;robotmain.c: 139:                             printf("Calibration complete \n\r");
  2560   00F2C8  0E80               	movlw	low STR_14
  2561   00F2CA  6E23               	movwf	printf@fmt^0,c
  2562   00F2CC  0EFE               	movlw	high STR_14
  2563   00F2CE  6E24               	movwf	(printf@fmt+1)^0,c
  2564   00F2D0  EC2C  F06E         	call	_printf	;wreg free
  2565   00F2D4                     
  2566                           ;robotmain.c: 140:                             LCD_Position(0,1);
  2567   00F2D4  0E01               	movlw	1
  2568   00F2D6  6E02               	movwf	LCD_Position@y^0,c
  2569   00F2D8  0E00               	movlw	0
  2570   00F2DA  ECD8  F06E         	call	_LCD_Position
  2571   00F2DE                     
  2572                           ;robotmain.c: 141:                             LCD_Print("Complete", 8);
  2573   00F2DE  0EAB               	movlw	low STR_15
  2574   00F2E0  6E02               	movwf	LCD_Print@str^0,c
  2575   00F2E2  0EFF               	movlw	high STR_15
  2576   00F2E4  6E03               	movwf	(LCD_Print@str+1)^0,c
  2577   00F2E6  0E08               	movlw	8
  2578   00F2E8  6E04               	movwf	LCD_Print@length^0,c
  2579   00F2EA  ECE0  F072         	call	_LCD_Print	;wreg free
  2580   00F2EE                     l3841:
  2581                           
  2582                           ;robotmain.c: 123:                     while (!black)
  2583   00F2EE  0100               	movlb	0	; () banked
  2584   00F2F0  518D               	movf	main@black& (0+255),w,b
  2585   00F2F2  B4D8               	btfsc	status,2,c
  2586   00F2F4  EF7E  F079         	goto	u2681
  2587   00F2F8  EF80  F079         	goto	u2680
  2588   00F2FC                     u2681:
  2589   00F2FC  EF01  F079         	goto	l3807
  2590   00F300                     u2680:
  2591   00F300  EF43  F078         	goto	l3747
  2592   00F304                     l3843:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;robotmain.c: 146:                     LCD_Clear();
  2596   00F304  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2597                           
  2598                           ;robotmain.c: 147:                     LCD_Position(0,0);
  2599   00F308  0E00               	movlw	0
  2600   00F30A  6E02               	movwf	LCD_Position@y^0,c
  2601   00F30C  0E00               	movlw	0
  2602   00F30E  ECD8  F06E         	call	_LCD_Position
  2603   00F312                     
  2604                           ;robotmain.c: 148:                     LCD_Print("  Read  ", 8);
  2605   00F312  0E48               	movlw	low STR_16
  2606   00F314  6E02               	movwf	LCD_Print@str^0,c
  2607   00F316  0EFF               	movlw	high STR_16
  2608   00F318  6E03               	movwf	(LCD_Print@str+1)^0,c
  2609   00F31A  0E08               	movlw	8
  2610   00F31C  6E04               	movwf	LCD_Print@length^0,c
  2611   00F31E  ECE0  F072         	call	_LCD_Print	;wreg free
  2612   00F322                     
  2613                           ;robotmain.c: 149:                     LCD_Position(0,1);
  2614   00F322  0E01               	movlw	1
  2615   00F324  6E02               	movwf	LCD_Position@y^0,c
  2616   00F326  0E00               	movlw	0
  2617   00F328  ECD8  F06E         	call	_LCD_Position
  2618                           
  2619                           ;robotmain.c: 150:                     LCD_Print("Sensors", 8);
  2620   00F32C  0ED6               	movlw	low STR_17
  2621   00F32E  6E02               	movwf	LCD_Print@str^0,c
  2622   00F330  0EFF               	movlw	high STR_17
  2623   00F332  6E03               	movwf	(LCD_Print@str+1)^0,c
  2624   00F334  0E08               	movlw	8
  2625   00F336  6E04               	movwf	LCD_Print@length^0,c
  2626   00F338  ECE0  F072         	call	_LCD_Print	;wreg free
  2627   00F33C                     
  2628                           ;robotmain.c: 151:                     printf("\n\r");
  2629   00F33C  0EA0               	movlw	low (STR_25+41)
  2630   00F33E  6E23               	movwf	printf@fmt^0,c
  2631   00F340  0EFC               	movlw	high (STR_25+41)
  2632   00F342  6E24               	movwf	(printf@fmt+1)^0,c
  2633   00F344  EC2C  F06E         	call	_printf	;wreg free
  2634   00F348                     
  2635                           ;robotmain.c: 154:                     sensor_value = Calibrate_Sensors();
  2636   00F348  EC88  F073         	call	_Calibrate_Sensors	;wreg free
  2637   00F34C  0100               	movlb	0	; () banked
  2638   00F34E  6FA0               	movwf	main@sensor_value& (0+255),b
  2639   00F350                     
  2640                           ; BSR set to: 0
  2641                           ;robotmain.c: 156:                         for (i=0; i<5; i++)
  2642   00F350  0E00               	movlw	0
  2643   00F352  6FA1               	movwf	main@i& (0+255),b
  2644   00F354                     l3855:
  2645                           
  2646                           ; BSR set to: 0
  2647   00F354  0E04               	movlw	4
  2648   00F356  65A1               	cpfsgt	main@i& (0+255),b
  2649   00F358  EFB0  F079         	goto	u2691
  2650   00F35C  EFB2  F079         	goto	u2690
  2651   00F360                     u2691:
  2652   00F360  EFB4  F079         	goto	l3859
  2653   00F364                     u2690:
  2654   00F364  EF43  F078         	goto	l3747
  2655   00F368                     l3859:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;robotmain.c: 157:                         {;robotmain.c: 158:                          
      +                             printf("Sensor %u = %u \n\r", i, sensor_value[i]);
  2659   00F368  0E08               	movlw	low (STR_54+1)
  2660   00F36A  6E23               	movwf	printf@fmt^0,c
  2661   00F36C  0EFF               	movlw	high (STR_54+1)
  2662   00F36E  6E24               	movwf	(printf@fmt+1)^0,c
  2663   00F370  C0A1  F025         	movff	main@i,?_printf+2
  2664   00F374  6A26               	clrf	(?_printf+3)^0,c
  2665   00F376  51A1               	movf	main@i& (0+255),w,b
  2666   00F378  0D02               	mullw	2
  2667   00F37A  51A0               	movf	main@sensor_value& (0+255),w,b
  2668   00F37C  24F3               	addwf	243,w,c
  2669   00F37E  6ED9               	movwf	fsr2l,c
  2670   00F380  6ADA               	clrf	fsr2h,c
  2671   00F382  006F FF78  F027    	movff	postinc2,?_printf+4
  2672   00F388  006F FF74  F028    	movff	postdec2,?_printf+5
  2673   00F38E  EC2C  F06E         	call	_printf	;wreg free
  2674   00F392                     
  2675                           ;robotmain.c: 159:                         }
  2676   00F392  0100               	movlb	0	; () banked
  2677   00F394  2BA1               	incf	main@i& (0+255),f,b
  2678   00F396  EFAA  F079         	goto	l3855
  2679   00F39A                     l3865:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;robotmain.c: 166:                     LCD_Clear();
  2683   00F39A  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2684                           
  2685                           ;robotmain.c: 167:                     LCD_Position(0,0);
  2686   00F39E  0E00               	movlw	0
  2687   00F3A0  6E02               	movwf	LCD_Position@y^0,c
  2688   00F3A2  0E00               	movlw	0
  2689   00F3A4  ECD8  F06E         	call	_LCD_Position
  2690   00F3A8                     
  2691                           ;robotmain.c: 168:                     LCD_Print("Sensor ", 7);
  2692   00F3A8  0EC6               	movlw	low STR_20
  2693   00F3AA  6E02               	movwf	LCD_Print@str^0,c
  2694   00F3AC  0EFF               	movlw	high STR_20
  2695   00F3AE  6E03               	movwf	(LCD_Print@str+1)^0,c
  2696   00F3B0  0E07               	movlw	7
  2697   00F3B2  6E04               	movwf	LCD_Print@length^0,c
  2698   00F3B4  ECE0  F072         	call	_LCD_Print	;wreg free
  2699   00F3B8                     
  2700                           ;robotmain.c: 169:                     printf("\n\r");
  2701   00F3B8  0EA0               	movlw	low (STR_25+41)
  2702   00F3BA  6E23               	movwf	printf@fmt^0,c
  2703   00F3BC  0EFC               	movlw	high (STR_25+41)
  2704   00F3BE  6E24               	movwf	(printf@fmt+1)^0,c
  2705   00F3C0  EC2C  F06E         	call	_printf	;wreg free
  2706   00F3C4                     
  2707                           ;robotmain.c: 170:                     printf("Enter sensor number, 0-4 \n\r");
  2708   00F3C4  0E87               	movlw	low (STR_25+16)
  2709   00F3C6  6E23               	movwf	printf@fmt^0,c
  2710   00F3C8  0EFC               	movlw	high (STR_25+16)
  2711   00F3CA  6E24               	movwf	(printf@fmt+1)^0,c
  2712   00F3CC  EC2C  F06E         	call	_printf	;wreg free
  2713   00F3D0                     
  2714                           ;robotmain.c: 171:                     sensor = Get_Number();
  2715   00F3D0  EC6D  F071         	call	_Get_Number	;wreg free
  2716   00F3D4  0100               	movlb	0	; () banked
  2717   00F3D6  6F9B               	movwf	main@sensor& (0+255),b
  2718   00F3D8                     
  2719                           ; BSR set to: 0
  2720                           ;robotmain.c: 172:                     printf("\n");
  2721   00F3D8  0EC0               	movlw	low (STR_88+45)
  2722   00F3DA  6E23               	movwf	printf@fmt^0,c
  2723   00F3DC  0EFB               	movlw	high (STR_88+45)
  2724   00F3DE  6E24               	movwf	(printf@fmt+1)^0,c
  2725   00F3E0  EC2C  F06E         	call	_printf	;wreg free
  2726                           
  2727                           ;robotmain.c: 174:                     while (sensor < '0' || sensor > '4')
  2728   00F3E4  EF04  F07A         	goto	l3881
  2729   00F3E8                     l3877:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;robotmain.c: 175:                     {;robotmain.c: 176:                     printf("\
      +                          n\r");
  2733   00F3E8  0EA0               	movlw	low (STR_25+41)
  2734   00F3EA  6E23               	movwf	printf@fmt^0,c
  2735   00F3EC  0EFC               	movlw	high (STR_25+41)
  2736   00F3EE  6E24               	movwf	(printf@fmt+1)^0,c
  2737   00F3F0  EC2C  F06E         	call	_printf	;wreg free
  2738                           
  2739                           ;robotmain.c: 177:                     printf("Invalid entry.  Enter sensor number, 0-4 
      +                          \n\r");
  2740   00F3F4  0E77               	movlw	low STR_25
  2741   00F3F6  6E23               	movwf	printf@fmt^0,c
  2742   00F3F8  0EFC               	movlw	high STR_25
  2743   00F3FA  6E24               	movwf	(printf@fmt+1)^0,c
  2744   00F3FC  EC2C  F06E         	call	_printf	;wreg free
  2745   00F400                     
  2746                           ;robotmain.c: 178:                     sensor = Get_Number();
  2747   00F400  EC6D  F071         	call	_Get_Number	;wreg free
  2748   00F404  0100               	movlb	0	; () banked
  2749   00F406  6F9B               	movwf	main@sensor& (0+255),b
  2750   00F408                     l3881:
  2751                           
  2752                           ;robotmain.c: 174:                     while (sensor < '0' || sensor > '4')
  2753   00F408  0E2F               	movlw	47
  2754   00F40A  0100               	movlb	0	; () banked
  2755   00F40C  659B               	cpfsgt	main@sensor& (0+255),b
  2756   00F40E  EF0B  F07A         	goto	u2701
  2757   00F412  EF0D  F07A         	goto	u2700
  2758   00F416                     u2701:
  2759   00F416  EFF4  F079         	goto	l3877
  2760   00F41A                     u2700:
  2761   00F41A                     
  2762                           ; BSR set to: 0
  2763   00F41A  0E35               	movlw	53
  2764   00F41C  619B               	cpfslt	main@sensor& (0+255),b
  2765   00F41E  EF13  F07A         	goto	u2711
  2766   00F422  EF15  F07A         	goto	u2710
  2767   00F426                     u2711:
  2768   00F426  EFF4  F079         	goto	l3877
  2769   00F42A                     u2710:
  2770   00F42A                     
  2771                           ; BSR set to: 0
  2772                           ;robotmain.c: 181:                     LCD_Position(7,0);
  2773   00F42A  0E00               	movlw	0
  2774   00F42C  6E02               	movwf	LCD_Position@y^0,c
  2775   00F42E  0E07               	movlw	7
  2776   00F430  ECD8  F06E         	call	_LCD_Position
  2777                           
  2778                           ;robotmain.c: 182:                     LCD_PrintCharacter(sensor);
  2779   00F434  0100               	movlb	0	; () banked
  2780   00F436  519B               	movf	main@sensor& (0+255),w,b
  2781   00F438  EC01  F06F         	call	_LCD_PrintCharacter
  2782   00F43C                     
  2783                           ;robotmain.c: 185:                     sensor_value = Calibrate_Sensors();
  2784   00F43C  EC88  F073         	call	_Calibrate_Sensors	;wreg free
  2785   00F440  0100               	movlb	0	; () banked
  2786   00F442  6FA0               	movwf	main@sensor_value& (0+255),b
  2787   00F444                     
  2788                           ; BSR set to: 0
  2789                           ;robotmain.c: 187:                     printf("\nSensor %d = %u \n\r", sensor, sensor_va
      +                          lue[sensor]);
  2790   00F444  0EF4               	movlw	low STR_26
  2791   00F446  6E23               	movwf	printf@fmt^0,c
  2792   00F448  0EFE               	movlw	high STR_26
  2793   00F44A  6E24               	movwf	(printf@fmt+1)^0,c
  2794   00F44C  C09B  F025         	movff	main@sensor,?_printf+2
  2795   00F450  6A26               	clrf	(?_printf+3)^0,c
  2796   00F452  519B               	movf	main@sensor& (0+255),w,b
  2797   00F454  0D02               	mullw	2
  2798   00F456  51A0               	movf	main@sensor_value& (0+255),w,b
  2799   00F458  24F3               	addwf	243,w,c
  2800   00F45A  6ED9               	movwf	fsr2l,c
  2801   00F45C  6ADA               	clrf	fsr2h,c
  2802   00F45E  006F FF78  F027    	movff	postinc2,?_printf+4
  2803   00F464  006F FF74  F028    	movff	postdec2,?_printf+5
  2804   00F46A  EC2C  F06E         	call	_printf	;wreg free
  2805   00F46E                     
  2806                           ;robotmain.c: 188:                     length = sprintf(msg,"  %u  ",sensor_value[sensor
      +                          ]);
  2807   00F46E  0E8E               	movlw	low main@msg
  2808   00F470  6E23               	movwf	sprintf@s^0,c
  2809   00F472  0EDE               	movlw	low STR_27
  2810   00F474  6E24               	movwf	sprintf@fmt^0,c
  2811   00F476  0EFF               	movlw	high STR_27
  2812   00F478  6E25               	movwf	(sprintf@fmt+1)^0,c
  2813   00F47A  0100               	movlb	0	; () banked
  2814   00F47C  519B               	movf	main@sensor& (0+255),w,b
  2815   00F47E  0D02               	mullw	2
  2816   00F480  51A0               	movf	main@sensor_value& (0+255),w,b
  2817   00F482  24F3               	addwf	243,w,c
  2818   00F484  6ED9               	movwf	fsr2l,c
  2819   00F486  6ADA               	clrf	fsr2h,c
  2820   00F488  006F FF78  F026    	movff	postinc2,?_sprintf+3
  2821   00F48E  006F FF74  F027    	movff	postdec2,?_sprintf+4
  2822   00F494  ECB3  F06E         	call	_sprintf	;wreg free
  2823   00F498  5023               	movf	?_sprintf^0,w,c
  2824   00F49A  0100               	movlb	0	; () banked
  2825   00F49C  6F9F               	movwf	main@length& (0+255),b
  2826   00F49E                     
  2827                           ; BSR set to: 0
  2828                           ;robotmain.c: 189:                     LCD_Position(0,1);
  2829   00F49E  0E01               	movlw	1
  2830   00F4A0  6E02               	movwf	LCD_Position@y^0,c
  2831   00F4A2  0E00               	movlw	0
  2832   00F4A4  ECD8  F06E         	call	_LCD_Position
  2833   00F4A8  EF3C  F078         	goto	l3745
  2834   00F4AC                     l3897:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;robotmain.c: 194:                     LCD_Clear();
  2838   00F4AC  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2839                           
  2840                           ;robotmain.c: 195:                     LCD_Position(0,0);
  2841   00F4B0  0E00               	movlw	0
  2842   00F4B2  6E02               	movwf	LCD_Position@y^0,c
  2843   00F4B4  0E00               	movlw	0
  2844   00F4B6  ECD8  F06E         	call	_LCD_Position
  2845   00F4BA                     
  2846                           ;robotmain.c: 196:                     LCD_Print("Battery ", 8);
  2847   00F4BA  0E90               	movlw	low STR_28
  2848   00F4BC  6E02               	movwf	LCD_Print@str^0,c
  2849   00F4BE  0EFF               	movlw	high STR_28
  2850   00F4C0  6E03               	movwf	(LCD_Print@str+1)^0,c
  2851   00F4C2  0E08               	movlw	8
  2852   00F4C4  6E04               	movwf	LCD_Print@length^0,c
  2853   00F4C6  ECE0  F072         	call	_LCD_Print	;wreg free
  2854   00F4CA                     
  2855                           ;robotmain.c: 197:                     printf("\n\r");
  2856   00F4CA  0EA0               	movlw	low (STR_25+41)
  2857   00F4CC  6E23               	movwf	printf@fmt^0,c
  2858   00F4CE  0EFC               	movlw	high (STR_25+41)
  2859   00F4D0  6E24               	movwf	(printf@fmt+1)^0,c
  2860   00F4D2  EC2C  F06E         	call	_printf	;wreg free
  2861   00F4D6                     
  2862                           ;robotmain.c: 198:                     battery = Read_Battery_Voltage();
  2863   00F4D6  ECB4  F06F         	call	_Read_Battery_Voltage	;wreg free
  2864   00F4DA  C002  F099         	movff	?_Read_Battery_Voltage,main@battery
  2865   00F4DE  C003  F09A         	movff	?_Read_Battery_Voltage+1,main@battery+1
  2866   00F4E2                     
  2867                           ;robotmain.c: 199:                     length = sprintf(msg, "%u mV", battery);
  2868   00F4E2  0E8E               	movlw	low main@msg
  2869   00F4E4  6E23               	movwf	sprintf@s^0,c
  2870   00F4E6  0EE5               	movlw	low STR_2
  2871   00F4E8  6E24               	movwf	sprintf@fmt^0,c
  2872   00F4EA  0EFF               	movlw	high STR_2
  2873   00F4EC  6E25               	movwf	(sprintf@fmt+1)^0,c
  2874   00F4EE  C099  F026         	movff	main@battery,?_sprintf+3
  2875   00F4F2  C09A  F027         	movff	main@battery+1,?_sprintf+4
  2876   00F4F6  ECB3  F06E         	call	_sprintf	;wreg free
  2877   00F4FA  5023               	movf	?_sprintf^0,w,c
  2878   00F4FC  0100               	movlb	0	; () banked
  2879   00F4FE  6F9F               	movwf	main@length& (0+255),b
  2880   00F500                     
  2881                           ; BSR set to: 0
  2882                           ;robotmain.c: 200:                     LCD_Position(0,1);
  2883   00F500  0E01               	movlw	1
  2884   00F502  6E02               	movwf	LCD_Position@y^0,c
  2885   00F504  0E00               	movlw	0
  2886   00F506  ECD8  F06E         	call	_LCD_Position
  2887   00F50A                     
  2888                           ;robotmain.c: 201:                     LCD_Print(msg, length);
  2889   00F50A  0E8E               	movlw	low main@msg
  2890   00F50C  6E02               	movwf	LCD_Print@str^0,c
  2891   00F50E  6A03               	clrf	(LCD_Print@str+1)^0,c
  2892   00F510  C09F  F004         	movff	main@length,LCD_Print@length
  2893   00F514  ECE0  F072         	call	_LCD_Print	;wreg free
  2894   00F518                     
  2895                           ;robotmain.c: 202:                     printf("Battery voltage = %u \n\r", battery);
  2896   00F518  0E98               	movlw	low STR_31
  2897   00F51A  6E23               	movwf	printf@fmt^0,c
  2898   00F51C  0EFE               	movlw	high STR_31
  2899   00F51E  6E24               	movwf	(printf@fmt+1)^0,c
  2900   00F520  C099  F025         	movff	main@battery,?_printf+2
  2901   00F524  C09A  F026         	movff	main@battery+1,?_printf+3
  2902   00F528  EC2C  F06E         	call	_printf	;wreg free
  2903                           
  2904                           ;robotmain.c: 203:                     break;
  2905   00F52C  EF43  F078         	goto	l3747
  2906   00F530                     l3913:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;robotmain.c: 205:                     LCD_Clear();
  2910   00F530  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2911                           
  2912                           ;robotmain.c: 206:                     LCD_Position(0,0);
  2913   00F534  0E00               	movlw	0
  2914   00F536  6E02               	movwf	LCD_Position@y^0,c
  2915   00F538  0E00               	movlw	0
  2916   00F53A  ECD8  F06E         	call	_LCD_Position
  2917   00F53E                     
  2918                           ;robotmain.c: 207:                     LCD_Print("Forward ", 8);
  2919   00F53E  0E7E               	movlw	low STR_32
  2920   00F540  6E02               	movwf	LCD_Print@str^0,c
  2921   00F542  0EFF               	movlw	high STR_32
  2922   00F544  6E03               	movwf	(LCD_Print@str+1)^0,c
  2923   00F546  0E08               	movlw	8
  2924   00F548  6E04               	movwf	LCD_Print@length^0,c
  2925   00F54A  ECE0  F072         	call	_LCD_Print	;wreg free
  2926   00F54E                     
  2927                           ;robotmain.c: 208:                     printf("\n\r");
  2928   00F54E  0EA0               	movlw	low (STR_25+41)
  2929   00F550  6E23               	movwf	printf@fmt^0,c
  2930   00F552  0EFC               	movlw	high (STR_25+41)
  2931   00F554  6E24               	movwf	(printf@fmt+1)^0,c
  2932   00F556  EC2C  F06E         	call	_printf	;wreg free
  2933   00F55A                     
  2934                           ;robotmain.c: 209:                     printf("\t Please enter the forward speed, 0 - 12
      +                          7 \r\n");
  2935   00F55A  0EF0               	movlw	low STR_34
  2936   00F55C  6E23               	movwf	printf@fmt^0,c
  2937   00F55E  0EFB               	movlw	high STR_34
  2938   00F560  6E24               	movwf	(printf@fmt+1)^0,c
  2939   00F562  EC2C  F06E         	call	_printf	;wreg free
  2940   00F566                     
  2941                           ;robotmain.c: 210:                     speed = Get_Number();
  2942   00F566  EC6D  F071         	call	_Get_Number	;wreg free
  2943   00F56A  0100               	movlb	0	; () banked
  2944   00F56C  6F9E               	movwf	main@speed& (0+255),b
  2945   00F56E                     
  2946                           ; BSR set to: 0
  2947                           ;robotmain.c: 211:                     Forward(speed);
  2948   00F56E  519E               	movf	main@speed& (0+255),w,b
  2949   00F570  EC29  F071         	call	_Forward
  2950   00F574                     
  2951                           ;robotmain.c: 212:                     length = sprintf(msg, " %u ", speed);
  2952   00F574  0E8E               	movlw	low main@msg
  2953   00F576  6E23               	movwf	sprintf@s^0,c
  2954   00F578  0EF1               	movlw	low STR_35
  2955   00F57A  6E24               	movwf	sprintf@fmt^0,c
  2956   00F57C  0EFF               	movlw	high STR_35
  2957   00F57E  6E25               	movwf	(sprintf@fmt+1)^0,c
  2958   00F580  C09E  F026         	movff	main@speed,?_sprintf+3
  2959   00F584  6A27               	clrf	(?_sprintf+4)^0,c
  2960   00F586  ECB3  F06E         	call	_sprintf	;wreg free
  2961   00F58A  5023               	movf	?_sprintf^0,w,c
  2962   00F58C  0100               	movlb	0	; () banked
  2963   00F58E  6F9F               	movwf	main@length& (0+255),b
  2964   00F590                     
  2965                           ; BSR set to: 0
  2966                           ;robotmain.c: 213:                     LCD_Position(0,1);
  2967   00F590  0E01               	movlw	1
  2968   00F592  6E02               	movwf	LCD_Position@y^0,c
  2969   00F594  0E00               	movlw	0
  2970   00F596  ECD8  F06E         	call	_LCD_Position
  2971   00F59A  EF3C  F078         	goto	l3745
  2972   00F59E                     l3931:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;robotmain.c: 217:                     LCD_Clear();
  2976   00F59E  EC1E  F06E         	call	_LCD_Clear	;wreg free
  2977                           
  2978                           ;robotmain.c: 218:                     LCD_Position(0,0);
  2979   00F5A2  0E00               	movlw	0
  2980   00F5A4  6E02               	movwf	LCD_Position@y^0,c
  2981   00F5A6  0E00               	movlw	0
  2982   00F5A8  ECD8  F06E         	call	_LCD_Position
  2983   00F5AC                     
  2984                           ;robotmain.c: 219:                     LCD_Print("Backward", 8);
  2985   00F5AC  0E99               	movlw	low STR_36
  2986   00F5AE  6E02               	movwf	LCD_Print@str^0,c
  2987   00F5B0  0EFF               	movlw	high STR_36
  2988   00F5B2  6E03               	movwf	(LCD_Print@str+1)^0,c
  2989   00F5B4  0E08               	movlw	8
  2990   00F5B6  6E04               	movwf	LCD_Print@length^0,c
  2991   00F5B8  ECE0  F072         	call	_LCD_Print	;wreg free
  2992   00F5BC                     
  2993                           ;robotmain.c: 220:                     printf("\n\r");
  2994   00F5BC  0EA0               	movlw	low (STR_25+41)
  2995   00F5BE  6E23               	movwf	printf@fmt^0,c
  2996   00F5C0  0EFC               	movlw	high (STR_25+41)
  2997   00F5C2  6E24               	movwf	(printf@fmt+1)^0,c
  2998   00F5C4  EC2C  F06E         	call	_printf	;wreg free
  2999   00F5C8                     
  3000                           ;robotmain.c: 221:                     printf("\t Please enter the backward speed, 0 - 1
      +                          27 \r\n");
  3001   00F5C8  0EC2               	movlw	low STR_38
  3002   00F5CA  6E23               	movwf	printf@fmt^0,c
  3003   00F5CC  0EFB               	movlw	high STR_38
  3004   00F5CE  6E24               	movwf	(printf@fmt+1)^0,c
  3005   00F5D0  EC2C  F06E         	call	_printf	;wreg free
  3006   00F5D4                     
  3007                           ;robotmain.c: 222:                     speed = Get_Number();
  3008   00F5D4  EC6D  F071         	call	_Get_Number	;wreg free
  3009   00F5D8  0100               	movlb	0	; () banked
  3010   00F5DA  6F9E               	movwf	main@speed& (0+255),b
  3011   00F5DC                     
  3012                           ; BSR set to: 0
  3013                           ;robotmain.c: 223:                     Backward(speed);
  3014   00F5DC  519E               	movf	main@speed& (0+255),w,b
  3015   00F5DE  EC4B  F070         	call	_Backward
  3016   00F5E2                     
  3017                           ;robotmain.c: 224:                     length = sprintf(msg, " %u ", speed);
  3018   00F5E2  0E8E               	movlw	low main@msg
  3019   00F5E4  6E23               	movwf	sprintf@s^0,c
  3020   00F5E6  0EF1               	movlw	low STR_35
  3021   00F5E8  6E24               	movwf	sprintf@fmt^0,c
  3022   00F5EA  0EFF               	movlw	high STR_35
  3023   00F5EC  6E25               	movwf	(sprintf@fmt+1)^0,c
  3024   00F5EE  C09E  F026         	movff	main@speed,?_sprintf+3
  3025   00F5F2  6A27               	clrf	(?_sprintf+4)^0,c
  3026   00F5F4  ECB3  F06E         	call	_sprintf	;wreg free
  3027   00F5F8  5023               	movf	?_sprintf^0,w,c
  3028   00F5FA  0100               	movlb	0	; () banked
  3029   00F5FC  6F9F               	movwf	main@length& (0+255),b
  3030   00F5FE                     
  3031                           ; BSR set to: 0
  3032                           ;robotmain.c: 225:                     LCD_Position(0,1);
  3033   00F5FE  0E01               	movlw	1
  3034   00F600  6E02               	movwf	LCD_Position@y^0,c
  3035   00F602  0E00               	movlw	0
  3036   00F604  ECD8  F06E         	call	_LCD_Position
  3037   00F608  EF3C  F078         	goto	l3745
  3038   00F60C                     l3949:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;robotmain.c: 229:                     LCD_Clear();
  3042   00F60C  EC1E  F06E         	call	_LCD_Clear	;wreg free
  3043                           
  3044                           ;robotmain.c: 230:                     LCD_Position(0,0);
  3045   00F610  0E00               	movlw	0
  3046   00F612  6E02               	movwf	LCD_Position@y^0,c
  3047   00F614  0E00               	movlw	0
  3048   00F616  ECD8  F06E         	call	_LCD_Position
  3049   00F61A                     
  3050                           ;robotmain.c: 231:                     LCD_Print("  Left  ", 8);
  3051   00F61A  0E6C               	movlw	low STR_40
  3052   00F61C  6E02               	movwf	LCD_Print@str^0,c
  3053   00F61E  0EFF               	movlw	high STR_40
  3054   00F620  6E03               	movwf	(LCD_Print@str+1)^0,c
  3055   00F622  0E08               	movlw	8
  3056   00F624  6E04               	movwf	LCD_Print@length^0,c
  3057   00F626  ECE0  F072         	call	_LCD_Print	;wreg free
  3058   00F62A                     
  3059                           ;robotmain.c: 232:                     printf("\n\r");
  3060   00F62A  0EA0               	movlw	low (STR_25+41)
  3061   00F62C  6E23               	movwf	printf@fmt^0,c
  3062   00F62E  0EFC               	movlw	high (STR_25+41)
  3063   00F630  6E24               	movwf	(printf@fmt+1)^0,c
  3064   00F632  EC2C  F06E         	call	_printf	;wreg free
  3065   00F636                     
  3066                           ;robotmain.c: 233:                     printf("\t Please enter the forward speed, 0 - 12
      +                          7 \r\n");
  3067   00F636  0EF0               	movlw	low STR_34
  3068   00F638  6E23               	movwf	printf@fmt^0,c
  3069   00F63A  0EFB               	movlw	high STR_34
  3070   00F63C  6E24               	movwf	(printf@fmt+1)^0,c
  3071   00F63E  EC2C  F06E         	call	_printf	;wreg free
  3072   00F642                     
  3073                           ;robotmain.c: 234:                     speed = Get_Number();
  3074   00F642  EC6D  F071         	call	_Get_Number	;wreg free
  3075   00F646  0100               	movlb	0	; () banked
  3076   00F648  6F9E               	movwf	main@speed& (0+255),b
  3077   00F64A                     
  3078                           ; BSR set to: 0
  3079                           ;robotmain.c: 235:                     printf("\t Please enter the turning differential:
      +                           speed + differential < 127 \r\n");
  3080   00F64A  0E15               	movlw	low STR_43
  3081   00F64C  6E23               	movwf	printf@fmt^0,c
  3082   00F64E  0EFB               	movlw	high STR_43
  3083   00F650  6E24               	movwf	(printf@fmt+1)^0,c
  3084   00F652  EC2C  F06E         	call	_printf	;wreg free
  3085   00F656                     
  3086                           ;robotmain.c: 236:                     differential = Get_Number();
  3087   00F656  EC6D  F071         	call	_Get_Number	;wreg free
  3088   00F65A  0100               	movlb	0	; () banked
  3089   00F65C  6F98               	movwf	main@differential& (0+255),b
  3090   00F65E                     
  3091                           ; BSR set to: 0
  3092                           ;robotmain.c: 237:                     Left_Turn(speed, differential);
  3093   00F65E  C098  F002         	movff	main@differential,Left_Turn@differential
  3094   00F662  519E               	movf	main@speed& (0+255),w,b
  3095   00F664  EC81  F070         	call	_Left_Turn
  3096   00F668                     
  3097                           ;robotmain.c: 238:                     length = sprintf(msg, "%u %u", speed, differentia
      +                          l);
  3098   00F668  0E8E               	movlw	low main@msg
  3099   00F66A  6E23               	movwf	sprintf@s^0,c
  3100   00F66C  0EEB               	movlw	low STR_44
  3101   00F66E  6E24               	movwf	sprintf@fmt^0,c
  3102   00F670  0EFF               	movlw	high STR_44
  3103   00F672  6E25               	movwf	(sprintf@fmt+1)^0,c
  3104   00F674  C09E  F026         	movff	main@speed,?_sprintf+3
  3105   00F678  6A27               	clrf	(?_sprintf+4)^0,c
  3106   00F67A  C098  F028         	movff	main@differential,?_sprintf+5
  3107   00F67E  6A29               	clrf	(?_sprintf+6)^0,c
  3108   00F680  ECB3  F06E         	call	_sprintf	;wreg free
  3109   00F684  5023               	movf	?_sprintf^0,w,c
  3110   00F686  0100               	movlb	0	; () banked
  3111   00F688  6F9F               	movwf	main@length& (0+255),b
  3112   00F68A                     
  3113                           ; BSR set to: 0
  3114                           ;robotmain.c: 239:                     LCD_Position(0,1);
  3115   00F68A  0E01               	movlw	1
  3116   00F68C  6E02               	movwf	LCD_Position@y^0,c
  3117   00F68E  0E00               	movlw	0
  3118   00F690  ECD8  F06E         	call	_LCD_Position
  3119   00F694  EF3C  F078         	goto	l3745
  3120   00F698                     l3971:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;robotmain.c: 243:                     LCD_Clear();
  3124   00F698  EC1E  F06E         	call	_LCD_Clear	;wreg free
  3125                           
  3126                           ;robotmain.c: 244:                     LCD_Position(0,0);
  3127   00F69C  0E00               	movlw	0
  3128   00F69E  6E02               	movwf	LCD_Position@y^0,c
  3129   00F6A0  0E00               	movlw	0
  3130   00F6A2  ECD8  F06E         	call	_LCD_Position
  3131   00F6A6                     
  3132                           ;robotmain.c: 245:                     LCD_Print(" Right  ", 8);
  3133   00F6A6  0E75               	movlw	low STR_45
  3134   00F6A8  6E02               	movwf	LCD_Print@str^0,c
  3135   00F6AA  0EFF               	movlw	high STR_45
  3136   00F6AC  6E03               	movwf	(LCD_Print@str+1)^0,c
  3137   00F6AE  0E08               	movlw	8
  3138   00F6B0  6E04               	movwf	LCD_Print@length^0,c
  3139   00F6B2  ECE0  F072         	call	_LCD_Print	;wreg free
  3140   00F6B6                     
  3141                           ;robotmain.c: 246:                     printf("\n\r");
  3142   00F6B6  0EA0               	movlw	low (STR_25+41)
  3143   00F6B8  6E23               	movwf	printf@fmt^0,c
  3144   00F6BA  0EFC               	movlw	high (STR_25+41)
  3145   00F6BC  6E24               	movwf	(printf@fmt+1)^0,c
  3146   00F6BE  EC2C  F06E         	call	_printf	;wreg free
  3147   00F6C2                     
  3148                           ;robotmain.c: 247:                     printf("\t Please enter the forward speed, 0 - 12
      +                          7 \r\n");
  3149   00F6C2  0EF0               	movlw	low STR_34
  3150   00F6C4  6E23               	movwf	printf@fmt^0,c
  3151   00F6C6  0EFB               	movlw	high STR_34
  3152   00F6C8  6E24               	movwf	(printf@fmt+1)^0,c
  3153   00F6CA  EC2C  F06E         	call	_printf	;wreg free
  3154   00F6CE                     
  3155                           ;robotmain.c: 248:                     speed = Get_Number();
  3156   00F6CE  EC6D  F071         	call	_Get_Number	;wreg free
  3157   00F6D2  0100               	movlb	0	; () banked
  3158   00F6D4  6F9E               	movwf	main@speed& (0+255),b
  3159   00F6D6                     
  3160                           ; BSR set to: 0
  3161                           ;robotmain.c: 249:                     printf("\t Please enter the turning differential:
      +                           speed + differential < 127 \r\n");
  3162   00F6D6  0E15               	movlw	low STR_43
  3163   00F6D8  6E23               	movwf	printf@fmt^0,c
  3164   00F6DA  0EFB               	movlw	high STR_43
  3165   00F6DC  6E24               	movwf	(printf@fmt+1)^0,c
  3166   00F6DE  EC2C  F06E         	call	_printf	;wreg free
  3167   00F6E2                     
  3168                           ;robotmain.c: 250:                     differential = Get_Number();
  3169   00F6E2  EC6D  F071         	call	_Get_Number	;wreg free
  3170   00F6E6  0100               	movlb	0	; () banked
  3171   00F6E8  6F98               	movwf	main@differential& (0+255),b
  3172   00F6EA                     
  3173                           ; BSR set to: 0
  3174                           ;robotmain.c: 251:                     Right_Turn(speed, differential);
  3175   00F6EA  C098  F002         	movff	main@differential,Right_Turn@differential
  3176   00F6EE  519E               	movf	main@speed& (0+255),w,b
  3177   00F6F0  ECB8  F070         	call	_Right_Turn
  3178   00F6F4                     
  3179                           ;robotmain.c: 252:                     length = sprintf(msg, "%u %u", speed, differentia
      +                          l);
  3180   00F6F4  0E8E               	movlw	low main@msg
  3181   00F6F6  6E23               	movwf	sprintf@s^0,c
  3182   00F6F8  0EEB               	movlw	low STR_44
  3183   00F6FA  6E24               	movwf	sprintf@fmt^0,c
  3184   00F6FC  0EFF               	movlw	high STR_44
  3185   00F6FE  6E25               	movwf	(sprintf@fmt+1)^0,c
  3186   00F700  C09E  F026         	movff	main@speed,?_sprintf+3
  3187   00F704  6A27               	clrf	(?_sprintf+4)^0,c
  3188   00F706  C098  F028         	movff	main@differential,?_sprintf+5
  3189   00F70A  6A29               	clrf	(?_sprintf+6)^0,c
  3190   00F70C  ECB3  F06E         	call	_sprintf	;wreg free
  3191   00F710  5023               	movf	?_sprintf^0,w,c
  3192   00F712  0100               	movlb	0	; () banked
  3193   00F714  6F9F               	movwf	main@length& (0+255),b
  3194   00F716                     
  3195                           ; BSR set to: 0
  3196                           ;robotmain.c: 253:                     LCD_Position(0,1);
  3197   00F716  0E01               	movlw	1
  3198   00F718  6E02               	movwf	LCD_Position@y^0,c
  3199   00F71A  0E00               	movlw	0
  3200   00F71C  ECD8  F06E         	call	_LCD_Position
  3201   00F720  EF3C  F078         	goto	l3745
  3202   00F724                     l3993:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;robotmain.c: 257:                     LCD_Clear();
  3206   00F724  EC1E  F06E         	call	_LCD_Clear	;wreg free
  3207                           
  3208                           ;robotmain.c: 258:                     LCD_Position(0,0);
  3209   00F728  0E00               	movlw	0
  3210   00F72A  6E02               	movwf	LCD_Position@y^0,c
  3211   00F72C  0E00               	movlw	0
  3212   00F72E  ECD8  F06E         	call	_LCD_Position
  3213   00F732                     
  3214                           ;robotmain.c: 259:                     LCD_Print("  Stop  ", 8);
  3215   00F732  0E5A               	movlw	low STR_50
  3216   00F734  6E02               	movwf	LCD_Print@str^0,c
  3217   00F736  0EFF               	movlw	high STR_50
  3218   00F738  6E03               	movwf	(LCD_Print@str+1)^0,c
  3219   00F73A  0E08               	movlw	8
  3220   00F73C  6E04               	movwf	LCD_Print@length^0,c
  3221   00F73E  ECE0  F072         	call	_LCD_Print	;wreg free
  3222   00F742                     
  3223                           ;robotmain.c: 260:                     printf("\n\r");
  3224   00F742  0EA0               	movlw	low (STR_25+41)
  3225   00F744  6E23               	movwf	printf@fmt^0,c
  3226   00F746  0EFC               	movlw	high (STR_25+41)
  3227   00F748  6E24               	movwf	(printf@fmt+1)^0,c
  3228   00F74A  EC2C  F06E         	call	_printf	;wreg free
  3229   00F74E                     
  3230                           ;robotmain.c: 261:                     Stop();
  3231   00F74E  EC98  F06D         	call	_Stop	;wreg free
  3232                           
  3233                           ;robotmain.c: 262:                     break;
  3234   00F752  EF43  F078         	goto	l3747
  3235   00F756                     l4001:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;robotmain.c: 266:                     LCD_Clear();
  3239   00F756  EC1E  F06E         	call	_LCD_Clear	;wreg free
  3240                           
  3241                           ;robotmain.c: 267:                     LCD_Position(0, 0);
  3242   00F75A  0E00               	movlw	0
  3243   00F75C  6E02               	movwf	LCD_Position@y^0,c
  3244   00F75E  0E00               	movlw	0
  3245   00F760  ECD8  F06E         	call	_LCD_Position
  3246   00F764                     
  3247                           ;robotmain.c: 268:                     LCD_Print("TSensor",7);
  3248   00F764  0ECE               	movlw	low STR_52
  3249   00F766  6E02               	movwf	LCD_Print@str^0,c
  3250   00F768  0EFF               	movlw	high STR_52
  3251   00F76A  6E03               	movwf	(LCD_Print@str+1)^0,c
  3252   00F76C  0E07               	movlw	7
  3253   00F76E  6E04               	movwf	LCD_Print@length^0,c
  3254   00F770  ECE0  F072         	call	_LCD_Print	;wreg free
  3255   00F774                     
  3256                           ;robotmain.c: 269:                     LCD_Position (0,1);
  3257   00F774  0E01               	movlw	1
  3258   00F776  6E02               	movwf	LCD_Position@y^0,c
  3259   00F778  0E00               	movlw	0
  3260   00F77A  ECD8  F06E         	call	_LCD_Position
  3261                           
  3262                           ;robotmain.c: 270:                     LCD_Print("Run",3);
  3263   00F77E  0EF6               	movlw	low STR_53
  3264   00F780  6E02               	movwf	LCD_Print@str^0,c
  3265   00F782  0EFF               	movlw	high STR_53
  3266   00F784  6E03               	movwf	(LCD_Print@str+1)^0,c
  3267   00F786  0E03               	movlw	3
  3268   00F788  6E04               	movwf	LCD_Print@length^0,c
  3269   00F78A  ECE0  F072         	call	_LCD_Print	;wreg free
  3270   00F78E                     l4007:
  3271                           
  3272                           ;robotmain.c: 273:                     {;robotmain.c: 275:                     sensor_va
      +                          lue = Calibrate_Sensors();
  3273   00F78E  EC88  F073         	call	_Calibrate_Sensors	;wreg free
  3274   00F792  0100               	movlb	0	; () banked
  3275   00F794  6FA0               	movwf	main@sensor_value& (0+255),b
  3276   00F796                     
  3277                           ; BSR set to: 0
  3278                           ;robotmain.c: 277:                       for (i=0; i<5; i++)
  3279   00F796  0E00               	movlw	0
  3280   00F798  6FA1               	movwf	main@i& (0+255),b
  3281   00F79A                     l4011:
  3282                           
  3283                           ; BSR set to: 0
  3284   00F79A  0E04               	movlw	4
  3285   00F79C  65A1               	cpfsgt	main@i& (0+255),b
  3286   00F79E  EFD3  F07B         	goto	u2721
  3287   00F7A2  EFD5  F07B         	goto	u2720
  3288   00F7A6                     u2721:
  3289   00F7A6  EFD7  F07B         	goto	l4015
  3290   00F7AA                     u2720:
  3291   00F7AA  EFF0  F07B         	goto	l4021
  3292   00F7AE                     l4015:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;robotmain.c: 278:                       {;robotmain.c: 279:                          pr
      +                          intf("\nSensor %u = %u \n\r", i, sensor_value[i]);
  3296   00F7AE  0E07               	movlw	low STR_54
  3297   00F7B0  6E23               	movwf	printf@fmt^0,c
  3298   00F7B2  0EFF               	movlw	high STR_54
  3299   00F7B4  6E24               	movwf	(printf@fmt+1)^0,c
  3300   00F7B6  C0A1  F025         	movff	main@i,?_printf+2
  3301   00F7BA  6A26               	clrf	(?_printf+3)^0,c
  3302   00F7BC  51A1               	movf	main@i& (0+255),w,b
  3303   00F7BE  0D02               	mullw	2
  3304   00F7C0  51A0               	movf	main@sensor_value& (0+255),w,b
  3305   00F7C2  24F3               	addwf	243,w,c
  3306   00F7C4  6ED9               	movwf	fsr2l,c
  3307   00F7C6  6ADA               	clrf	fsr2h,c
  3308   00F7C8  006F FF78  F027    	movff	postinc2,?_printf+4
  3309   00F7CE  006F FF74  F028    	movff	postdec2,?_printf+5
  3310   00F7D4  EC2C  F06E         	call	_printf	;wreg free
  3311   00F7D8                     
  3312                           ;robotmain.c: 280:                       }
  3313   00F7D8  0100               	movlb	0	; () banked
  3314   00F7DA  2BA1               	incf	main@i& (0+255),f,b
  3315   00F7DC  EFCD  F07B         	goto	l4011
  3316   00F7E0                     l4021:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;robotmain.c: 281:                         printf("\n");
  3320   00F7E0  0EC0               	movlw	low (STR_88+45)
  3321   00F7E2  6E23               	movwf	printf@fmt^0,c
  3322   00F7E4  0EFB               	movlw	high (STR_88+45)
  3323   00F7E6  6E24               	movwf	(printf@fmt+1)^0,c
  3324   00F7E8  EC2C  F06E         	call	_printf	;wreg free
  3325   00F7EC                     
  3326                           ;robotmain.c: 282:                         _delay(10000000);
  3327   00F7EC  0E33               	movlw	51
  3328   00F7EE  6E4A               	movwf	(??_main+1)^0,c
  3329   00F7F0  0EBB               	movlw	187
  3330   00F7F2  6E49               	movwf	??_main^0,c
  3331   00F7F4  0EE0               	movlw	224
  3332   00F7F6                     u2807:
  3333   00F7F6  2EE8               	decfsz	wreg,f,c
  3334   00F7F8  D7FE               	bra	u2807
  3335   00F7FA  2E49               	decfsz	??_main^0,f,c
  3336   00F7FC  D7FC               	bra	u2807
  3337   00F7FE  2E4A               	decfsz	(??_main+1)^0,f,c
  3338   00F800  D7FA               	bra	u2807
  3339   00F802                     
  3340                           ;robotmain.c: 284:                         if (UART2_is_rx_ready())
  3341   00F802  ECE2  F06D         	call	_UART2_is_rx_ready	;wreg free
  3342   00F806  0900               	iorlw	0
  3343   00F808  B4D8               	btfsc	status,2,c
  3344   00F80A  EF09  F07C         	goto	u2731
  3345   00F80E  EF0B  F07C         	goto	u2730
  3346   00F812                     u2731:
  3347   00F812  EFC7  F07B         	goto	l4007
  3348   00F816                     u2730:
  3349   00F816                     
  3350                           ;robotmain.c: 285:                         {;robotmain.c: 286:                          
      +                             char input = UART2_Read();
  3351   00F816  EC43  F072         	call	_UART2_Read	;wreg free
  3352   00F81A  0100               	movlb	0	; () banked
  3353   00F81C  6F97               	movwf	main@input& (0+255),b
  3354   00F81E                     
  3355                           ; BSR set to: 0
  3356                           ;robotmain.c: 287:                             if (input == 'q' || input == 'Q') {
  3357   00F81E  0E71               	movlw	113
  3358   00F820  1997               	xorwf	main@input& (0+255),w,b
  3359   00F822  B4D8               	btfsc	status,2,c
  3360   00F824  EF16  F07C         	goto	u2741
  3361   00F828  EF18  F07C         	goto	u2740
  3362   00F82C                     u2741:
  3363   00F82C  EF21  F07C         	goto	l4033
  3364   00F830                     u2740:
  3365   00F830                     
  3366                           ; BSR set to: 0
  3367   00F830  0E51               	movlw	81
  3368   00F832  1997               	xorwf	main@input& (0+255),w,b
  3369   00F834  A4D8               	btfss	status,2,c
  3370   00F836  EF1F  F07C         	goto	u2751
  3371   00F83A  EF21  F07C         	goto	u2750
  3372   00F83E                     u2751:
  3373   00F83E  EFC7  F07B         	goto	l4007
  3374   00F842                     u2750:
  3375   00F842                     l4033:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;robotmain.c: 295:                     LCD_Clear();
  3379   00F842  EC1E  F06E         	call	_LCD_Clear	;wreg free
  3380                           
  3381                           ;robotmain.c: 296:                     LCD_Position(0,0);
  3382   00F846  0E00               	movlw	0
  3383   00F848  6E02               	movwf	LCD_Position@y^0,c
  3384   00F84A  0E00               	movlw	0
  3385   00F84C  ECD8  F06E         	call	_LCD_Position
  3386   00F850                     
  3387                           ;robotmain.c: 297:                     LCD_Print("Diagnose", 8);
  3388   00F850  0EA2               	movlw	low STR_1
  3389   00F852  6E02               	movwf	LCD_Print@str^0,c
  3390   00F854  0EFF               	movlw	high STR_1
  3391   00F856  6E03               	movwf	(LCD_Print@str+1)^0,c
  3392   00F858  0E08               	movlw	8
  3393   00F85A  6E04               	movwf	LCD_Print@length^0,c
  3394   00F85C  ECE0  F072         	call	_LCD_Print	;wreg free
  3395   00F860                     
  3396                           ;robotmain.c: 298:                     battery = Read_Battery_Voltage();
  3397   00F860  ECB4  F06F         	call	_Read_Battery_Voltage	;wreg free
  3398   00F864  C002  F099         	movff	?_Read_Battery_Voltage,main@battery
  3399   00F868  C003  F09A         	movff	?_Read_Battery_Voltage+1,main@battery+1
  3400   00F86C                     
  3401                           ;robotmain.c: 299:                     length = sprintf(msg, "%u mV", battery);
  3402   00F86C  0E8E               	movlw	low main@msg
  3403   00F86E  6E23               	movwf	sprintf@s^0,c
  3404   00F870  0EE5               	movlw	low STR_2
  3405   00F872  6E24               	movwf	sprintf@fmt^0,c
  3406   00F874  0EFF               	movlw	high STR_2
  3407   00F876  6E25               	movwf	(sprintf@fmt+1)^0,c
  3408   00F878  C099  F026         	movff	main@battery,?_sprintf+3
  3409   00F87C  C09A  F027         	movff	main@battery+1,?_sprintf+4
  3410   00F880  ECB3  F06E         	call	_sprintf	;wreg free
  3411   00F884  5023               	movf	?_sprintf^0,w,c
  3412   00F886  0100               	movlb	0	; () banked
  3413   00F888  6F9F               	movwf	main@length& (0+255),b
  3414   00F88A                     
  3415                           ; BSR set to: 0
  3416                           ;robotmain.c: 300:                     LCD_Position(0,1);
  3417   00F88A  0E01               	movlw	1
  3418   00F88C  6E02               	movwf	LCD_Position@y^0,c
  3419   00F88E  0E00               	movlw	0
  3420   00F890  ECD8  F06E         	call	_LCD_Position
  3421   00F894                     
  3422                           ;robotmain.c: 301:                     LCD_Print(msg, length);
  3423   00F894  0E8E               	movlw	low main@msg
  3424   00F896  6E02               	movwf	LCD_Print@str^0,c
  3425   00F898  6A03               	clrf	(LCD_Print@str+1)^0,c
  3426   00F89A  C09F  F004         	movff	main@length,LCD_Print@length
  3427   00F89E  ECE0  F072         	call	_LCD_Print	;wreg free
  3428   00F8A2                     
  3429                           ;robotmain.c: 302:                     Diagnostic_Menu();
  3430   00F8A2  EC0B  F075         	call	_Diagnostic_Menu	;wreg free
  3431                           
  3432                           ;robotmain.c: 303:                     break;
  3433   00F8A6  EF43  F078         	goto	l3747
  3434   00F8AA                     l4049:
  3435                           
  3436                           ; BSR set to: 0
  3437   00F8AA  518B               	movf	main@key& (0+255),w,b
  3438   00F8AC  6E49               	movwf	??_main^0,c
  3439   00F8AE  6A4A               	clrf	(??_main+1)^0,c
  3440                           
  3441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3442                           ; Switch size 1, requested type "simple"
  3443                           ; Number of cases is 1, Range of values is 0 to 0
  3444                           ; switch strategies available:
  3445                           ; Name         Instructions Cycles
  3446                           ; simple_byte            4     3 (average)
  3447                           ;	Chosen strategy is simple_byte
  3448   00F8B0  504A               	movf	(??_main+1)^0,w,c
  3449   00F8B2  0A00               	xorlw	0	; case 0
  3450   00F8B4  B4D8               	btfsc	status,2,c
  3451   00F8B6  EF5F  F07C         	goto	l4181
  3452   00F8BA  EF43  F078         	goto	l3747
  3453   00F8BE                     l4181:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ; Switch size 1, requested type "simple"
  3457                           ; Number of cases is 12, Range of values is 66 to 119
  3458                           ; switch strategies available:
  3459                           ; Name         Instructions Cycles
  3460                           ; simple_byte           37    19 (average)
  3461                           ;	Chosen strategy is simple_byte
  3462   00F8BE  5049               	movf	??_main^0,w,c
  3463   00F8C0  0A42               	xorlw	66	; case 66
  3464   00F8C2  B4D8               	btfsc	status,2,c
  3465   00F8C4  EFCF  F07A         	goto	l3931
  3466   00F8C8  0A04               	xorlw	4	; case 70
  3467   00F8CA  B4D8               	btfsc	status,2,c
  3468   00F8CC  EF98  F07A         	goto	l3913
  3469   00F8D0  0A0A               	xorlw	10	; case 76
  3470   00F8D2  B4D8               	btfsc	status,2,c
  3471   00F8D4  EF06  F07B         	goto	l3949
  3472   00F8D8  0A1E               	xorlw	30	; case 82
  3473   00F8DA  B4D8               	btfsc	status,2,c
  3474   00F8DC  EF4C  F07B         	goto	l3971
  3475   00F8E0  0A01               	xorlw	1	; case 83
  3476   00F8E2  B4D8               	btfsc	status,2,c
  3477   00F8E4  EF92  F07B         	goto	l3993
  3478   00F8E8  0A07               	xorlw	7	; case 84
  3479   00F8EA  B4D8               	btfsc	status,2,c
  3480   00F8EC  EFAB  F07B         	goto	l4001
  3481   00F8F0  0A37               	xorlw	55	; case 99
  3482   00F8F2  B4D8               	btfsc	status,2,c
  3483   00F8F4  EF6D  F078         	goto	l3765
  3484   00F8F8  0A07               	xorlw	7	; case 100
  3485   00F8FA  B4D8               	btfsc	status,2,c
  3486   00F8FC  EFCD  F079         	goto	l3865
  3487   00F900  0A09               	xorlw	9	; case 109
  3488   00F902  B4D8               	btfsc	status,2,c
  3489   00F904  EF21  F07C         	goto	l4033
  3490   00F908  0A1F               	xorlw	31	; case 114
  3491   00F90A  B4D8               	btfsc	status,2,c
  3492   00F90C  EF82  F079         	goto	l3843
  3493   00F910  0A04               	xorlw	4	; case 118
  3494   00F912  B4D8               	btfsc	status,2,c
  3495   00F914  EF56  F07A         	goto	l3897
  3496   00F918  0A01               	xorlw	1	; case 119
  3497   00F91A  B4D8               	btfsc	status,2,c
  3498   00F91C  EF49  F078         	goto	l3749
  3499   00F920  EF43  F078         	goto	l3747
  3500   00F924                     l85:
  3501                           
  3502                           ; BSR set to: 58
  3503                           ;robotmain.c: 308:     if (PORTBbits.RB5 == 1)
  3504   00F924  AACB               	btfss	203,5,c	;volatile
  3505   00F926  EF97  F07C         	goto	u2761
  3506   00F92A  EF99  F07C         	goto	u2760
  3507   00F92E                     u2761:
  3508   00F92E  EF88  F07D         	goto	l143
  3509   00F932                     u2760:
  3510   00F932                     
  3511                           ; BSR set to: 58
  3512                           ;robotmain.c: 309:     {;robotmain.c: 310:         Diagnostic_Menu();
  3513   00F932  EC0B  F075         	call	_Diagnostic_Menu	;wreg free
  3514   00F936                     
  3515                           ;robotmain.c: 311:         LCD_Clear();
  3516   00F936  EC1E  F06E         	call	_LCD_Clear	;wreg free
  3517   00F93A                     
  3518                           ;robotmain.c: 312:         LCD_Position(0,0);
  3519   00F93A  0E00               	movlw	0
  3520   00F93C  6E02               	movwf	LCD_Position@y^0,c
  3521   00F93E  0E00               	movlw	0
  3522   00F940  ECD8  F06E         	call	_LCD_Position
  3523   00F944                     
  3524                           ;robotmain.c: 313:         LCD_Print("  Run   ", 8);
  3525   00F944  0E36               	movlw	low STR_58
  3526   00F946  6E02               	movwf	LCD_Print@str^0,c
  3527   00F948  0EFF               	movlw	high STR_58
  3528   00F94A  6E03               	movwf	(LCD_Print@str+1)^0,c
  3529   00F94C  0E08               	movlw	8
  3530   00F94E  6E04               	movwf	LCD_Print@length^0,c
  3531   00F950  ECE0  F072         	call	_LCD_Print	;wreg free
  3532   00F954                     
  3533                           ;robotmain.c: 314:         battery = Read_Battery_Voltage();
  3534   00F954  ECB4  F06F         	call	_Read_Battery_Voltage	;wreg free
  3535   00F958  C002  F099         	movff	?_Read_Battery_Voltage,main@battery
  3536   00F95C  C003  F09A         	movff	?_Read_Battery_Voltage+1,main@battery+1
  3537   00F960                     
  3538                           ;robotmain.c: 315:         length = sprintf(msg, "%u mV", battery);
  3539   00F960  0E8E               	movlw	low main@msg
  3540   00F962  6E23               	movwf	sprintf@s^0,c
  3541   00F964  0EE5               	movlw	low STR_2
  3542   00F966  6E24               	movwf	sprintf@fmt^0,c
  3543   00F968  0EFF               	movlw	high STR_2
  3544   00F96A  6E25               	movwf	(sprintf@fmt+1)^0,c
  3545   00F96C  C099  F026         	movff	main@battery,?_sprintf+3
  3546   00F970  C09A  F027         	movff	main@battery+1,?_sprintf+4
  3547   00F974  ECB3  F06E         	call	_sprintf	;wreg free
  3548   00F978  5023               	movf	?_sprintf^0,w,c
  3549   00F97A  0100               	movlb	0	; () banked
  3550   00F97C  6F9F               	movwf	main@length& (0+255),b
  3551   00F97E                     
  3552                           ; BSR set to: 0
  3553                           ;robotmain.c: 316:         LCD_Position(0,1);
  3554   00F97E  0E01               	movlw	1
  3555   00F980  6E02               	movwf	LCD_Position@y^0,c
  3556   00F982  0E00               	movlw	0
  3557   00F984  ECD8  F06E         	call	_LCD_Position
  3558   00F988                     
  3559                           ;robotmain.c: 317:         LCD_Print(msg, length);
  3560   00F988  0E8E               	movlw	low main@msg
  3561   00F98A  6E02               	movwf	LCD_Print@str^0,c
  3562   00F98C  6A03               	clrf	(LCD_Print@str+1)^0,c
  3563   00F98E  C09F  F004         	movff	main@length,LCD_Print@length
  3564   00F992  ECE0  F072         	call	_LCD_Print	;wreg free
  3565   00F996                     
  3566                           ;robotmain.c: 318:         _delay((unsigned long)((1000)*(48000000/4000.0)));
  3567   00F996  0E3D               	movlw	61
  3568   00F998  6E4A               	movwf	(??_main+1)^0,c
  3569   00F99A  0EE1               	movlw	225
  3570   00F99C  6E49               	movwf	??_main^0,c
  3571   00F99E  0E40               	movlw	64
  3572   00F9A0                     u2817:
  3573   00F9A0  2EE8               	decfsz	wreg,f,c
  3574   00F9A2  D7FE               	bra	u2817
  3575   00F9A4  2E49               	decfsz	??_main^0,f,c
  3576   00F9A6  D7FC               	bra	u2817
  3577   00F9A8  2E4A               	decfsz	(??_main+1)^0,f,c
  3578   00F9AA  D7FA               	bra	u2817
  3579   00F9AC                     
  3580                           ;robotmain.c: 319:         LCD_Position(0,0);
  3581   00F9AC  0E00               	movlw	0
  3582   00F9AE  6E02               	movwf	LCD_Position@y^0,c
  3583   00F9B0  0E00               	movlw	0
  3584   00F9B2  ECD8  F06E         	call	_LCD_Position
  3585   00F9B6                     
  3586                           ;robotmain.c: 320:         LCD_Print("Auto Cal", 8);
  3587   00F9B6  0EBD               	movlw	low STR_60
  3588   00F9B8  6E02               	movwf	LCD_Print@str^0,c
  3589   00F9BA  0EFF               	movlw	high STR_60
  3590   00F9BC  6E03               	movwf	(LCD_Print@str+1)^0,c
  3591   00F9BE  0E08               	movlw	8
  3592   00F9C0  6E04               	movwf	LCD_Print@length^0,c
  3593   00F9C2  ECE0  F072         	call	_LCD_Print	;wreg free
  3594   00F9C6                     
  3595                           ;robotmain.c: 321:         Auto_Calibrate();
  3596   00F9C6  EC2A  F06F         	call	_Auto_Calibrate	;wreg free
  3597   00F9CA                     
  3598                           ;robotmain.c: 322:      LCD_Position(0,1);
  3599   00F9CA  0E01               	movlw	1
  3600   00F9CC  6E02               	movwf	LCD_Position@y^0,c
  3601   00F9CE  0E00               	movlw	0
  3602   00F9D0  ECD8  F06E         	call	_LCD_Position
  3603   00F9D4                     
  3604                           ;robotmain.c: 323:      LCD_Print("  done  ", 8);
  3605   00F9D4  0E51               	movlw	low STR_61
  3606   00F9D6  6E02               	movwf	LCD_Print@str^0,c
  3607   00F9D8  0EFF               	movlw	high STR_61
  3608   00F9DA  6E03               	movwf	(LCD_Print@str+1)^0,c
  3609   00F9DC  0E08               	movlw	8
  3610   00F9DE  6E04               	movwf	LCD_Print@length^0,c
  3611   00F9E0  ECE0  F072         	call	_LCD_Print	;wreg free
  3612   00F9E4                     
  3613                           ;robotmain.c: 324:         Countdown(6);
  3614   00F9E4  0E06               	movlw	6
  3615   00F9E6  EC9C  F075         	call	_Countdown
  3616   00F9EA                     
  3617                           ;robotmain.c: 325:         _delay((unsigned long)((1)*(48000000/4000.0)));
  3618   00F9EA  0E10               	movlw	16
  3619   00F9EC  6E49               	movwf	??_main^0,c
  3620   00F9EE  0E94               	movlw	148
  3621   00F9F0                     u2827:
  3622   00F9F0  2EE8               	decfsz	wreg,f,c
  3623   00F9F2  D7FE               	bra	u2827
  3624   00F9F4  2E49               	decfsz	??_main^0,f,c
  3625   00F9F6  D7FC               	bra	u2827
  3626   00F9F8  D000               	nop2	
  3627   00F9FA                     l4083:
  3628                           
  3629                           ;robotmain.c: 328:         Turn_PD_ON();
  3630   00F9FA  EC91  F072         	call	_Turn_PD_ON	;wreg free
  3631   00F9FE                     l4085:
  3632                           
  3633                           ;robotmain.c: 331:         {;robotmain.c: 332:             sensor_value = Read_Calibrate
      +                          d_Sensors();
  3634   00F9FE  EC93  F06D         	call	_Read_Calibrated_Sensors	;wreg free
  3635   00FA02  C001  F0A0         	movff	?_Read_Calibrated_Sensors,main@sensor_value
  3636   00FA06                     
  3637                           ;robotmain.c: 333:             sum = sensor_value[1]+sensor_value[2]+sensor_value[3];
  3638   00FA06  0100               	movlb	0	; () banked
  3639   00FA08  51A0               	movf	main@sensor_value& (0+255),w,b
  3640   00FA0A  6ED9               	movwf	fsr2l,c
  3641   00FA0C  6ADA               	clrf	fsr2h,c
  3642   00FA0E  0E06               	movlw	6
  3643   00FA10  26D9               	addwf	fsr2l,f,c
  3644   00FA12  006F FF78  F049    	movff	postinc2,??_main
  3645   00FA18  006F FF74  F04A    	movff	postdec2,??_main+1
  3646   00FA1E  51A0               	movf	main@sensor_value& (0+255),w,b
  3647   00FA20  6ED9               	movwf	fsr2l,c
  3648   00FA22  6ADA               	clrf	fsr2h,c
  3649   00FA24  0E04               	movlw	4
  3650   00FA26  26D9               	addwf	fsr2l,f,c
  3651   00FA28  006F FF78  F04B    	movff	postinc2,??_main+2
  3652   00FA2E  006F FF74  F04C    	movff	postdec2,??_main+3
  3653   00FA34  51A0               	movf	main@sensor_value& (0+255),w,b
  3654   00FA36  6ED9               	movwf	fsr2l,c
  3655   00FA38  6ADA               	clrf	fsr2h,c
  3656   00FA3A  0E02               	movlw	2
  3657   00FA3C  26D9               	addwf	fsr2l,f,c
  3658   00FA3E  006F FF78  F04D    	movff	postinc2,??_main+4
  3659   00FA44  006F FF74  F04E    	movff	postdec2,??_main+5
  3660   00FA4A  504B               	movf	(??_main+2)^0,w,c
  3661   00FA4C  244D               	addwf	(??_main+4)^0,w,c
  3662   00FA4E  6E4F               	movwf	(??_main+6)^0,c
  3663   00FA50  504C               	movf	(??_main+3)^0,w,c
  3664   00FA52  204E               	addwfc	(??_main+5)^0,w,c
  3665   00FA54  6E50               	movwf	(??_main+7)^0,c
  3666   00FA56  5049               	movf	??_main^0,w,c
  3667   00FA58  244F               	addwf	(??_main+6)^0,w,c
  3668   00FA5A  6F9C               	movwf	main@sum& (0+255),b
  3669   00FA5C  504A               	movf	(??_main+1)^0,w,c
  3670   00FA5E  2050               	addwfc	(??_main+7)^0,w,c
  3671   00FA60  6F9D               	movwf	(main@sum+1)& (0+255),b
  3672   00FA62                     
  3673                           ; BSR set to: 0
  3674                           ;robotmain.c: 335:             length = sprintf(msg, " %u ", sum);
  3675   00FA62  0E8E               	movlw	low main@msg
  3676   00FA64  6E23               	movwf	sprintf@s^0,c
  3677   00FA66  0EF1               	movlw	low STR_35
  3678   00FA68  6E24               	movwf	sprintf@fmt^0,c
  3679   00FA6A  0EFF               	movlw	high STR_35
  3680   00FA6C  6E25               	movwf	(sprintf@fmt+1)^0,c
  3681   00FA6E  C09C  F026         	movff	main@sum,?_sprintf+3
  3682   00FA72  C09D  F027         	movff	main@sum+1,?_sprintf+4
  3683   00FA76  ECB3  F06E         	call	_sprintf	;wreg free
  3684   00FA7A  5023               	movf	?_sprintf^0,w,c
  3685   00FA7C  0100               	movlb	0	; () banked
  3686   00FA7E  6F9F               	movwf	main@length& (0+255),b
  3687   00FA80                     
  3688                           ; BSR set to: 0
  3689                           ;robotmain.c: 336:             LCD_Position(0,1);
  3690   00FA80  0E01               	movlw	1
  3691   00FA82  6E02               	movwf	LCD_Position@y^0,c
  3692   00FA84  0E00               	movlw	0
  3693   00FA86  ECD8  F06E         	call	_LCD_Position
  3694   00FA8A                     
  3695                           ;robotmain.c: 337:             LCD_Print(msg, length);
  3696   00FA8A  0E8E               	movlw	low main@msg
  3697   00FA8C  6E02               	movwf	LCD_Print@str^0,c
  3698   00FA8E  6A03               	clrf	(LCD_Print@str+1)^0,c
  3699   00FA90  C09F  F004         	movff	main@length,LCD_Print@length
  3700   00FA94  ECE0  F072         	call	_LCD_Print	;wreg free
  3701   00FA98                     
  3702                           ;robotmain.c: 345:             if(sum == 0)
  3703   00FA98  0100               	movlb	0	; () banked
  3704   00FA9A  519C               	movf	main@sum& (0+255),w,b
  3705   00FA9C  119D               	iorwf	(main@sum+1)& (0+255),w,b
  3706   00FA9E  A4D8               	btfss	status,2,c
  3707   00FAA0  EF54  F07D         	goto	u2771
  3708   00FAA4  EF56  F07D         	goto	u2770
  3709   00FAA8                     u2771:
  3710   00FAA8  EF65  F07D         	goto	l4103
  3711   00FAAC                     u2770:
  3712   00FAAC                     l4099:
  3713   00FAAC  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  3714   00FAB0  0900               	iorlw	0
  3715   00FAB2  B4D8               	btfsc	status,2,c
  3716   00FAB4  EF5E  F07D         	goto	u2781
  3717   00FAB8  EF60  F07D         	goto	u2780
  3718   00FABC                     u2781:
  3719   00FABC  EF56  F07D         	goto	l4099
  3720   00FAC0                     u2780:
  3721   00FAC0                     
  3722                           ;robotmain.c: 348:                 UART1_Write(0xBC);
  3723   00FAC0  0EBC               	movlw	188
  3724   00FAC2  EC04  F06E         	call	_UART1_Write
  3725                           
  3726                           ;robotmain.c: 349:             }
  3727   00FAC6  EFFF  F07C         	goto	l4085
  3728   00FACA                     l4103:
  3729                           
  3730                           ; BSR set to: 0
  3731   00FACA  51A0               	movf	main@sensor_value& (0+255),w,b
  3732   00FACC  6ED9               	movwf	fsr2l,c
  3733   00FACE  6ADA               	clrf	fsr2h,c
  3734   00FAD0  0E04               	movlw	4
  3735   00FAD2  26D9               	addwf	fsr2l,f,c
  3736   00FAD4  0EE8               	movlw	232
  3737   00FAD6  5CDE               	subwf	postinc2,w,c
  3738   00FAD8  0E03               	movlw	3
  3739   00FADA  58DE               	subwfb	postinc2,w,c
  3740   00FADC  B0D8               	btfsc	status,0,c
  3741   00FADE  EF73  F07D         	goto	u2791
  3742   00FAE2  EF75  F07D         	goto	u2790
  3743   00FAE6                     u2791:
  3744   00FAE6  EFFF  F07C         	goto	l4085
  3745   00FAEA                     u2790:
  3746   00FAEA                     
  3747                           ; BSR set to: 0
  3748                           ;robotmain.c: 352:             {;robotmain.c: 353:                 UART1_Write(0xBC);
  3749   00FAEA  0EBC               	movlw	188
  3750   00FAEC  EC04  F06E         	call	_UART1_Write
  3751   00FAF0                     
  3752                           ;robotmain.c: 354:                 Forward(20);
  3753   00FAF0  0E14               	movlw	20
  3754   00FAF2  EC29  F071         	call	_Forward
  3755   00FAF6                     
  3756                           ;robotmain.c: 355:                 _delay((unsigned long)((1000)*(48000000/4000.0)));
  3757   00FAF6  0E3D               	movlw	61
  3758   00FAF8  6E4A               	movwf	(??_main+1)^0,c
  3759   00FAFA  0EE1               	movlw	225
  3760   00FAFC  6E49               	movwf	??_main^0,c
  3761   00FAFE  0E40               	movlw	64
  3762   00FB00                     u2837:
  3763   00FB00  2EE8               	decfsz	wreg,f,c
  3764   00FB02  D7FE               	bra	u2837
  3765   00FB04  2E49               	decfsz	??_main^0,f,c
  3766   00FB06  D7FC               	bra	u2837
  3767   00FB08  2E4A               	decfsz	(??_main+1)^0,f,c
  3768   00FB0A  D7FA               	bra	u2837
  3769   00FB0C  EFFD  F07C         	goto	l4083
  3770   00FB10                     l143:
  3771                           
  3772                           ; BSR set to: 58
  3773   00FB10  EFFE  F07F         	goto	start
  3774   00FB14                     __end_of_main:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _UART2_Initialize *****************
  3778 ;; Defined at:
  3779 ;;		line 24 in file "uart2.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		_UART2_SetErrorHandler
  3802 ;;		_UART2_SetFramingErrorHandler
  3803 ;;		_UART2_SetOverrunErrorHandler
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text1
  3810   00DF0C                     __ptext1:
  3811                           	callstack 0
  3812   00DF0C                     _UART2_Initialize:
  3813                           	callstack 29
  3814   00DF0C                     
  3815                           ;uart2.c: 31:     U2P1L = 0x00;
  3816   00DF0C  0E00               	movlw	0
  3817   00DF0E  013D               	movlb	61	; () banked
  3818   00DF10  6FD4               	movwf	212,b	;volatile
  3819                           
  3820                           ;uart2.c: 34:     U2P2L = 0x00;
  3821   00DF12  0E00               	movlw	0
  3822   00DF14  6FD6               	movwf	214,b	;volatile
  3823                           
  3824                           ;uart2.c: 37:     U2P3L = 0x00;
  3825   00DF16  0E00               	movlw	0
  3826   00DF18  6FD8               	movwf	216,b	;volatile
  3827                           
  3828                           ;uart2.c: 40:     U2CON0 = 0xB0;
  3829   00DF1A  0EB0               	movlw	176
  3830   00DF1C  6FDA               	movwf	218,b	;volatile
  3831                           
  3832                           ;uart2.c: 43:     U2CON1 = 0x80;
  3833   00DF1E  0E80               	movlw	128
  3834   00DF20  6FDB               	movwf	219,b	;volatile
  3835                           
  3836                           ;uart2.c: 46:     U2CON2 = 0x00;
  3837   00DF22  0E00               	movlw	0
  3838   00DF24  6FDC               	movwf	220,b	;volatile
  3839                           
  3840                           ;uart2.c: 49:     U2BRGL = 0xE1;
  3841   00DF26  0EE1               	movlw	225
  3842   00DF28  6FDD               	movwf	221,b	;volatile
  3843                           
  3844                           ;uart2.c: 52:     U2BRGH = 0x04;
  3845   00DF2A  0E04               	movlw	4
  3846   00DF2C  6FDE               	movwf	222,b	;volatile
  3847                           
  3848                           ;uart2.c: 55:     U2FIFO = 0x00;
  3849   00DF2E  0E00               	movlw	0
  3850   00DF30  6FDF               	movwf	223,b	;volatile
  3851                           
  3852                           ;uart2.c: 58:     U2UIR = 0x00;
  3853   00DF32  0E00               	movlw	0
  3854   00DF34  6FE0               	movwf	224,b	;volatile
  3855                           
  3856                           ;uart2.c: 61:     U2ERRIR = 0x00;
  3857   00DF36  0E00               	movlw	0
  3858   00DF38  6FE1               	movwf	225,b	;volatile
  3859                           
  3860                           ;uart2.c: 64:     U2ERRIE = 0x00;
  3861   00DF3A  0E00               	movlw	0
  3862   00DF3C  6FE2               	movwf	226,b	;volatile
  3863   00DF3E                     
  3864                           ; BSR set to: 61
  3865                           ;uart2.c: 66:     UART2_SetFramingErrorHandler(UART2_DefaultFramingErrorHandler);
  3866   00DF3E  0E22               	movlw	low _UART2_DefaultFramingErrorHandler
  3867   00DF40  6E01               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  3868   00DF42  0EDB               	movlw	high _UART2_DefaultFramingErrorHandler
  3869   00DF44  6E02               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3870   00DF46  ECB5  F06D         	call	_UART2_SetFramingErrorHandler	;wreg free
  3871   00DF4A                     
  3872                           ;uart2.c: 67:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrunErrorHandler);
  3873   00DF4A  0E24               	movlw	low _UART2_DefaultOverrunErrorHandler
  3874   00DF4C  6E01               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  3875   00DF4E  0EDB               	movlw	high _UART2_DefaultOverrunErrorHandler
  3876   00DF50  6E02               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3877   00DF52  ECBA  F06D         	call	_UART2_SetOverrunErrorHandler	;wreg free
  3878   00DF56                     
  3879                           ;uart2.c: 68:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  3880   00DF56  0E20               	movlw	low _UART2_DefaultErrorHandler
  3881   00DF58  6E01               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  3882   00DF5A  0EDB               	movlw	high _UART2_DefaultErrorHandler
  3883   00DF5C  6E02               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  3884   00DF5E  ECB0  F06D         	call	_UART2_SetErrorHandler	;wreg free
  3885   00DF62                     
  3886                           ;uart2.c: 70:     uart2RxLastError.status = 0;
  3887   00DF62  0E00               	movlw	0
  3888   00DF64  6E58               	movwf	_uart2RxLastError^0,c	;volatile
  3889   00DF66  0012               	return		;funcret
  3890   00DF68                     __end_of_UART2_Initialize:
  3891                           	callstack 0
  3892                           
  3893 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  3894 ;; Defined at:
  3895 ;;		line 144 in file "uart2.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3898 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;Total ram usage:        2 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_UART2_Initialize
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text2
  3924   00DB74                     __ptext2:
  3925                           	callstack 0
  3926   00DB74                     _UART2_SetOverrunErrorHandler:
  3927                           	callstack 29
  3928   00DB74                     
  3929                           ;uart2.c: 145:     UART2_OverrunErrorHandler = interruptHandler;
  3930   00DB74  C001  F0A4         	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  3931   00DB78  C002  F0A5         	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  3932   00DB7C  0012               	return		;funcret
  3933   00DB7E                     __end_of_UART2_SetOverrunErrorHandler:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _UART2_SetFramingErrorHandler *****************
  3937 ;; Defined at:
  3938 ;;		line 140 in file "uart2.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3941 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_UART2_Initialize
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text3
  3967   00DB6A                     __ptext3:
  3968                           	callstack 0
  3969   00DB6A                     _UART2_SetFramingErrorHandler:
  3970                           	callstack 29
  3971   00DB6A                     
  3972                           ;uart2.c: 141:     UART2_FramingErrorHandler = interruptHandler;
  3973   00DB6A  C001  F0A6         	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  3974   00DB6E  C002  F0A7         	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  3975   00DB72  0012               	return		;funcret
  3976   00DB74                     __end_of_UART2_SetFramingErrorHandler:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _UART2_SetErrorHandler *****************
  3980 ;; Defined at:
  3981 ;;		line 148 in file "uart2.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3984 ;;		 -> UART2_DefaultErrorHandler(1), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_UART2_Initialize
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text4
  4010   00DB60                     __ptext4:
  4011                           	callstack 0
  4012   00DB60                     _UART2_SetErrorHandler:
  4013                           	callstack 29
  4014   00DB60                     
  4015                           ;uart2.c: 149:     UART2_ErrorHandler = interruptHandler;
  4016   00DB60  C001  F0A2         	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  4017   00DB64  C002  F0A3         	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  4018   00DB68  0012               	return		;funcret
  4019   00DB6A                     __end_of_UART2_SetErrorHandler:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _UART1_Initialize *****************
  4023 ;; Defined at:
  4024 ;;		line 27 in file "uart1.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 1
  4045 ;; This function calls:
  4046 ;;		_UART1_SetErrorHandler
  4047 ;;		_UART1_SetFramingErrorHandler
  4048 ;;		_UART1_SetOverrunErrorHandler
  4049 ;; This function is called by:
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text5
  4055   00E02E                     __ptext5:
  4056                           	callstack 0
  4057   00E02E                     _UART1_Initialize:
  4058                           	callstack 29
  4059   00E02E                     
  4060                           ;uart1.c: 34:     U1P1L = 0x00;
  4061   00E02E  0E00               	movlw	0
  4062   00E030  013D               	movlb	61	; () banked
  4063   00E032  6FEC               	movwf	236,b	;volatile
  4064                           
  4065                           ;uart1.c: 37:     U1P1H = 0x00;
  4066   00E034  0E00               	movlw	0
  4067   00E036  6FED               	movwf	237,b	;volatile
  4068                           
  4069                           ;uart1.c: 40:     U1P2L = 0x00;
  4070   00E038  0E00               	movlw	0
  4071   00E03A  6FEE               	movwf	238,b	;volatile
  4072                           
  4073                           ;uart1.c: 43:     U1P2H = 0x00;
  4074   00E03C  0E00               	movlw	0
  4075   00E03E  6FEF               	movwf	239,b	;volatile
  4076                           
  4077                           ;uart1.c: 46:     U1P3L = 0x00;
  4078   00E040  0E00               	movlw	0
  4079   00E042  6FF0               	movwf	240,b	;volatile
  4080                           
  4081                           ;uart1.c: 49:     U1P3H = 0x00;
  4082   00E044  0E00               	movlw	0
  4083   00E046  6FF1               	movwf	241,b	;volatile
  4084                           
  4085                           ;uart1.c: 52:     U1CON0 = 0xB0;
  4086   00E048  0EB0               	movlw	176
  4087   00E04A  6FF2               	movwf	242,b	;volatile
  4088                           
  4089                           ;uart1.c: 55:     U1CON1 = 0x80;
  4090   00E04C  0E80               	movlw	128
  4091   00E04E  6FF3               	movwf	243,b	;volatile
  4092                           
  4093                           ;uart1.c: 58:     U1CON2 = 0x00;
  4094   00E050  0E00               	movlw	0
  4095   00E052  6FF4               	movwf	244,b	;volatile
  4096                           
  4097                           ;uart1.c: 61:     U1BRGL = 0x67;
  4098   00E054  0E67               	movlw	103
  4099   00E056  6FF5               	movwf	245,b	;volatile
  4100                           
  4101                           ;uart1.c: 64:     U1BRGH = 0x00;
  4102   00E058  0E00               	movlw	0
  4103   00E05A  6FF6               	movwf	246,b	;volatile
  4104                           
  4105                           ;uart1.c: 67:     U1FIFO = 0x00;
  4106   00E05C  0E00               	movlw	0
  4107   00E05E  6FF7               	movwf	247,b	;volatile
  4108                           
  4109                           ;uart1.c: 70:     U1UIR = 0x00;
  4110   00E060  0E00               	movlw	0
  4111   00E062  6FF8               	movwf	248,b	;volatile
  4112                           
  4113                           ;uart1.c: 73:     U1ERRIR = 0x00;
  4114   00E064  0E00               	movlw	0
  4115   00E066  6FF9               	movwf	249,b	;volatile
  4116                           
  4117                           ;uart1.c: 76:     U1ERRIE = 0x00;
  4118   00E068  0E00               	movlw	0
  4119   00E06A  6FFA               	movwf	250,b	;volatile
  4120   00E06C                     
  4121                           ; BSR set to: 61
  4122                           ;uart1.c: 79:     UART1_SetFramingErrorHandler(UART1_DefaultFramingErrorHandler);
  4123   00E06C  0E1C               	movlw	low _UART1_DefaultFramingErrorHandler
  4124   00E06E  6E01               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  4125   00E070  0EDB               	movlw	high _UART1_DefaultFramingErrorHandler
  4126   00E072  6E02               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4127   00E074  ECA6  F06D         	call	_UART1_SetFramingErrorHandler	;wreg free
  4128   00E078                     
  4129                           ;uart1.c: 80:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrunErrorHandler);
  4130   00E078  0E1E               	movlw	low _UART1_DefaultOverrunErrorHandler
  4131   00E07A  6E01               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  4132   00E07C  0EDB               	movlw	high _UART1_DefaultOverrunErrorHandler
  4133   00E07E  6E02               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4134   00E080  ECAB  F06D         	call	_UART1_SetOverrunErrorHandler	;wreg free
  4135   00E084                     
  4136                           ;uart1.c: 81:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  4137   00E084  0E1A               	movlw	low _UART1_DefaultErrorHandler
  4138   00E086  6E01               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  4139   00E088  0EDB               	movlw	high _UART1_DefaultErrorHandler
  4140   00E08A  6E02               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  4141   00E08C  ECA1  F06D         	call	_UART1_SetErrorHandler	;wreg free
  4142   00E090                     
  4143                           ;uart1.c: 83:     uart1RxLastError.status = 0;
  4144   00E090  0E00               	movlw	0
  4145   00E092  6E59               	movwf	_uart1RxLastError^0,c	;volatile
  4146   00E094  0012               	return		;funcret
  4147   00E096                     __end_of_UART1_Initialize:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  4151 ;; Defined at:
  4152 ;;		line 155 in file "uart1.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4155 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;Total ram usage:        2 bytes
  4172 ;; Hardware stack levels used: 1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_UART1_Initialize
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text6
  4181   00DB56                     __ptext6:
  4182                           	callstack 0
  4183   00DB56                     _UART1_SetOverrunErrorHandler:
  4184                           	callstack 29
  4185   00DB56                     
  4186                           ;uart1.c: 156:     UART1_OverrunErrorHandler = interruptHandler;
  4187   00DB56  C001  F05C         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  4188   00DB5A  C002  F05D         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  4189   00DB5E  0012               	return		;funcret
  4190   00DB60                     __end_of_UART1_SetOverrunErrorHandler:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _UART1_SetFramingErrorHandler *****************
  4194 ;; Defined at:
  4195 ;;		line 151 in file "uart1.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4198 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        2 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_UART1_Initialize
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text7
  4224   00DB4C                     __ptext7:
  4225                           	callstack 0
  4226   00DB4C                     _UART1_SetFramingErrorHandler:
  4227                           	callstack 29
  4228   00DB4C                     
  4229                           ;uart1.c: 152:     UART1_FramingErrorHandler = interruptHandler;
  4230   00DB4C  C001  F05E         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  4231   00DB50  C002  F05F         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  4232   00DB54  0012               	return		;funcret
  4233   00DB56                     __end_of_UART1_SetFramingErrorHandler:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _UART1_SetErrorHandler *****************
  4237 ;; Defined at:
  4238 ;;		line 159 in file "uart1.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4241 ;;		 -> UART1_DefaultErrorHandler(1), 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        2 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_UART1_Initialize
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text8
  4267   00DB42                     __ptext8:
  4268                           	callstack 0
  4269   00DB42                     _UART1_SetErrorHandler:
  4270                           	callstack 29
  4271   00DB42                     
  4272                           ;uart1.c: 160:     UART1_ErrorHandler = interruptHandler;
  4273   00DB42  C001  F05A         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  4274   00DB46  C002  F05B         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  4275   00DB4A  0012               	return		;funcret
  4276   00DB4C                     __end_of_UART1_SetErrorHandler:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _Turn_PD_ON *****************
  4280 ;; Defined at:
  4281 ;;		line 179 in file "pololu_robot.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 1
  4302 ;; This function calls:
  4303 ;;		_UART1_Write
  4304 ;;		_UART1_is_tx_ready
  4305 ;; This function is called by:
  4306 ;;		_main
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text9
  4311   00E522                     __ptext9:
  4312                           	callstack 0
  4313   00E522                     _Turn_PD_ON:
  4314                           	callstack 29
  4315   00E522                     l3695:
  4316   00E522  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4317   00E526  0900               	iorlw	0
  4318   00E528  B4D8               	btfsc	status,2,c
  4319   00E52A  EF99  F072         	goto	u2551
  4320   00E52E  EF9B  F072         	goto	u2550
  4321   00E532                     u2551:
  4322   00E532  EF91  F072         	goto	l3695
  4323   00E536                     u2550:
  4324   00E536                     
  4325                           ;pololu_robot.c: 182:     UART1_Write(0xBB);
  4326   00E536  0EBB               	movlw	187
  4327   00E538  EC04  F06E         	call	_UART1_Write
  4328   00E53C                     l3699:
  4329   00E53C  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4330   00E540  0900               	iorlw	0
  4331   00E542  B4D8               	btfsc	status,2,c
  4332   00E544  EFA6  F072         	goto	u2561
  4333   00E548  EFA8  F072         	goto	u2560
  4334   00E54C                     u2561:
  4335   00E54C  EF9E  F072         	goto	l3699
  4336   00E550                     u2560:
  4337   00E550                     
  4338                           ;pololu_robot.c: 184:     UART1_Write(50);
  4339   00E550  0E32               	movlw	50
  4340   00E552  EC04  F06E         	call	_UART1_Write
  4341   00E556                     l3703:
  4342   00E556  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4343   00E55A  0900               	iorlw	0
  4344   00E55C  B4D8               	btfsc	status,2,c
  4345   00E55E  EFB3  F072         	goto	u2571
  4346   00E562  EFB5  F072         	goto	u2570
  4347   00E566                     u2571:
  4348   00E566  EFAB  F072         	goto	l3703
  4349   00E56A                     u2570:
  4350   00E56A                     
  4351                           ;pololu_robot.c: 186:     UART1_Write(1);
  4352   00E56A  0E01               	movlw	1
  4353   00E56C  EC04  F06E         	call	_UART1_Write
  4354   00E570                     l3707:
  4355   00E570  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4356   00E574  0900               	iorlw	0
  4357   00E576  B4D8               	btfsc	status,2,c
  4358   00E578  EFC0  F072         	goto	u2581
  4359   00E57C  EFC2  F072         	goto	u2580
  4360   00E580                     u2581:
  4361   00E580  EFB8  F072         	goto	l3707
  4362   00E584                     u2580:
  4363   00E584                     
  4364                           ;pololu_robot.c: 188:     UART1_Write(20);
  4365   00E584  0E14               	movlw	20
  4366   00E586  EC04  F06E         	call	_UART1_Write
  4367   00E58A                     l3711:
  4368   00E58A  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4369   00E58E  0900               	iorlw	0
  4370   00E590  B4D8               	btfsc	status,2,c
  4371   00E592  EFCD  F072         	goto	u2591
  4372   00E596  EFCF  F072         	goto	u2590
  4373   00E59A                     u2591:
  4374   00E59A  EFC5  F072         	goto	l3711
  4375   00E59E                     u2590:
  4376   00E59E                     
  4377                           ;pololu_robot.c: 190:     UART1_Write(3);
  4378   00E59E  0E03               	movlw	3
  4379   00E5A0  EC04  F06E         	call	_UART1_Write
  4380   00E5A4                     l3715:
  4381   00E5A4  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4382   00E5A8  0900               	iorlw	0
  4383   00E5AA  B4D8               	btfsc	status,2,c
  4384   00E5AC  EFDA  F072         	goto	u2601
  4385   00E5B0  EFDC  F072         	goto	u2600
  4386   00E5B4                     u2601:
  4387   00E5B4  EFD2  F072         	goto	l3715
  4388   00E5B8                     u2600:
  4389   00E5B8                     
  4390                           ;pololu_robot.c: 192:     UART1_Write(2);
  4391   00E5B8  0E02               	movlw	2
  4392   00E5BA  EC04  F06E         	call	_UART1_Write
  4393   00E5BE  0012               	return		;funcret
  4394   00E5C0                     __end_of_Turn_PD_ON:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _TMR0_HasOverflowOccured *****************
  4398 ;; Defined at:
  4399 ;;		line 92 in file "tmr0.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      _Bool 
  4406 ;; Registers used:
  4407 ;;		wreg
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text10
  4427   00DBDA                     __ptext10:
  4428                           	callstack 0
  4429   00DBDA                     _TMR0_HasOverflowOccured:
  4430                           	callstack 30
  4431   00DBDA                     
  4432                           ;tmr0.c: 95:     return(PIR3bits.TMR0IF);
  4433   00DBDA  0139               	movlb	57	; () banked
  4434   00DBDC  BFA3               	btfsc	163,7,b	;volatile
  4435   00DBDE  EFF3  F06D         	goto	u2271
  4436   00DBE2  EFF6  F06D         	goto	u2270
  4437   00DBE6                     u2271:
  4438   00DBE6  0E01               	movlw	1
  4439   00DBE8  EFF7  F06D         	goto	u2276
  4440   00DBEC                     u2270:
  4441   00DBEC  0E00               	movlw	0
  4442   00DBEE                     u2276:
  4443   00DBEE                     
  4444                           ; BSR set to: 57
  4445   00DBEE  0012               	return		;funcret
  4446   00DBF0                     __end_of_TMR0_HasOverflowOccured:
  4447                           	callstack 0
  4448                           
  4449 ;; *************** function _Stop *****************
  4450 ;; Defined at:
  4451 ;;		line 166 in file "pololu_robot.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 2
  4472 ;; This function calls:
  4473 ;;		_Forward
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text11
  4480   00DB30                     __ptext11:
  4481                           	callstack 0
  4482   00DB30                     _Stop:
  4483                           	callstack 28
  4484   00DB30                     
  4485                           ;pololu_robot.c: 168:     Forward(0);
  4486   00DB30  0E00               	movlw	0
  4487   00DB32  EC29  F071         	call	_Forward
  4488   00DB36  0012               	return		;funcret
  4489   00DB38                     __end_of_Stop:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function _Forward *****************
  4493 ;; Defined at:
  4494 ;;		line 108 in file "pololu_robot.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  speed           1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  speed           1    1[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;Total ram usage:        1 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 1
  4515 ;; This function calls:
  4516 ;;		_UART1_Write
  4517 ;;		_UART1_is_tx_ready
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;;		_Stop
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text12
  4525   00E252                     __ptext12:
  4526                           	callstack 0
  4527   00E252                     _Forward:
  4528                           	callstack 28
  4529                           
  4530                           ;incstack = 0
  4531                           ;Forward@speed stored from wreg
  4532   00E252  6E02               	movwf	Forward@speed^0,c
  4533   00E254                     l3359:
  4534   00E254  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4535   00E258  0900               	iorlw	0
  4536   00E25A  B4D8               	btfsc	status,2,c
  4537   00E25C  EF32  F071         	goto	u2091
  4538   00E260  EF34  F071         	goto	u2090
  4539   00E264                     u2091:
  4540   00E264  EF2A  F071         	goto	l3359
  4541   00E268                     u2090:
  4542   00E268                     
  4543                           ;pololu_robot.c: 113:    UART1_Write(0xC5);
  4544   00E268  0EC5               	movlw	197
  4545   00E26A  EC04  F06E         	call	_UART1_Write
  4546   00E26E                     l3363:
  4547   00E26E  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4548   00E272  0900               	iorlw	0
  4549   00E274  B4D8               	btfsc	status,2,c
  4550   00E276  EF3F  F071         	goto	u2101
  4551   00E27A  EF41  F071         	goto	u2100
  4552   00E27E                     u2101:
  4553   00E27E  EF37  F071         	goto	l3363
  4554   00E282                     u2100:
  4555   00E282                     
  4556                           ;pololu_robot.c: 115:    UART1_Write(speed);
  4557   00E282  5002               	movf	Forward@speed^0,w,c
  4558   00E284  EC04  F06E         	call	_UART1_Write
  4559   00E288                     l3367:
  4560   00E288  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4561   00E28C  0900               	iorlw	0
  4562   00E28E  B4D8               	btfsc	status,2,c
  4563   00E290  EF4C  F071         	goto	u2111
  4564   00E294  EF4E  F071         	goto	u2110
  4565   00E298                     u2111:
  4566   00E298  EF44  F071         	goto	l3367
  4567   00E29C                     u2110:
  4568   00E29C                     
  4569                           ;pololu_robot.c: 117:    UART1_Write(0xC1);
  4570   00E29C  0EC1               	movlw	193
  4571   00E29E  EC04  F06E         	call	_UART1_Write
  4572   00E2A2                     l3371:
  4573   00E2A2  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  4574   00E2A6  0900               	iorlw	0
  4575   00E2A8  B4D8               	btfsc	status,2,c
  4576   00E2AA  EF59  F071         	goto	u2121
  4577   00E2AE  EF5B  F071         	goto	u2120
  4578   00E2B2                     u2121:
  4579   00E2B2  EF51  F071         	goto	l3371
  4580   00E2B6                     u2120:
  4581   00E2B6                     
  4582                           ;pololu_robot.c: 119:    if (speed == 0)
  4583   00E2B6  5002               	movf	Forward@speed^0,w,c
  4584   00E2B8  A4D8               	btfss	status,2,c
  4585   00E2BA  EF61  F071         	goto	u2131
  4586   00E2BE  EF63  F071         	goto	u2130
  4587   00E2C2                     u2131:
  4588   00E2C2  EF68  F071         	goto	l3377
  4589   00E2C6                     u2130:
  4590   00E2C6                     
  4591                           ;pololu_robot.c: 120:    {;pololu_robot.c: 121:        UART1_Write(speed);
  4592   00E2C6  5002               	movf	Forward@speed^0,w,c
  4593   00E2C8  EC04  F06E         	call	_UART1_Write
  4594                           
  4595                           ;pololu_robot.c: 122:    }
  4596   00E2CC  EF6C  F071         	goto	l524
  4597   00E2D0                     l3377:
  4598                           
  4599                           ;pololu_robot.c: 124:    UART1_Write(speed+5);
  4600   00E2D0  5002               	movf	Forward@speed^0,w,c
  4601   00E2D2  0F05               	addlw	5
  4602   00E2D4  EC04  F06E         	call	_UART1_Write
  4603   00E2D8                     l524:
  4604   00E2D8  0012               	return		;funcret
  4605   00E2DA                     __end_of_Forward:
  4606                           	callstack 0
  4607                           
  4608 ;; *************** function _SYSTEM_Initialize *****************
  4609 ;; Defined at:
  4610 ;;		line 11 in file "initialize.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 1
  4631 ;; This function calls:
  4632 ;;		_OSCILLATOR_Initialize
  4633 ;;		_PIN_MANAGER_Initialize
  4634 ;;		_PMD_Initialize
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text13
  4641   00DB8A                     __ptext13:
  4642                           	callstack 0
  4643   00DB8A                     _SYSTEM_Initialize:
  4644                           	callstack 29
  4645   00DB8A                     
  4646                           ;initialize.c: 13:     PMD_Initialize();
  4647   00DB8A  EC5B  F06E         	call	_PMD_Initialize	;wreg free
  4648                           
  4649                           ;initialize.c: 14:     PIN_MANAGER_Initialize();
  4650   00DB8E  ECA5  F074         	call	_PIN_MANAGER_Initialize	;wreg free
  4651                           
  4652                           ;initialize.c: 15:     OSCILLATOR_Initialize();
  4653   00DB92  ECF8  F06D         	call	_OSCILLATOR_Initialize	;wreg free
  4654   00DB96  0012               	return		;funcret
  4655   00DB98                     __end_of_SYSTEM_Initialize:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _PMD_Initialize *****************
  4659 ;; Defined at:
  4660 ;;		line 32 in file "initialize.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_SYSTEM_Initialize
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text14
  4688   00DCB6                     __ptext14:
  4689                           	callstack 0
  4690   00DCB6                     _PMD_Initialize:
  4691                           	callstack 29
  4692   00DCB6                     
  4693                           ;initialize.c: 35:     PMD0 = 0x00;
  4694   00DCB6  0E00               	movlw	0
  4695   00DCB8  0139               	movlb	57	; () banked
  4696   00DCBA  6FC0               	movwf	192,b	;volatile
  4697                           
  4698                           ;initialize.c: 37:     PMD1 = 0x00;
  4699   00DCBC  0E00               	movlw	0
  4700   00DCBE  6FC1               	movwf	193,b	;volatile
  4701                           
  4702                           ;initialize.c: 39:     PMD2 = 0x00;
  4703   00DCC0  0E00               	movlw	0
  4704   00DCC2  6FC2               	movwf	194,b	;volatile
  4705                           
  4706                           ;initialize.c: 41:     PMD3 = 0x00;
  4707   00DCC4  0E00               	movlw	0
  4708   00DCC6  6FC3               	movwf	195,b	;volatile
  4709                           
  4710                           ;initialize.c: 43:     PMD4 = 0x00;
  4711   00DCC8  0E00               	movlw	0
  4712   00DCCA  6FC4               	movwf	196,b	;volatile
  4713                           
  4714                           ;initialize.c: 45:     PMD5 = 0x00;
  4715   00DCCC  0E00               	movlw	0
  4716   00DCCE  6FC5               	movwf	197,b	;volatile
  4717                           
  4718                           ;initialize.c: 47:     PMD6 = 0x00;
  4719   00DCD0  0E00               	movlw	0
  4720   00DCD2  6FC6               	movwf	198,b	;volatile
  4721                           
  4722                           ;initialize.c: 49:     PMD7 = 0x00;
  4723   00DCD4  0E00               	movlw	0
  4724   00DCD6  6FC7               	movwf	199,b	;volatile
  4725   00DCD8                     
  4726                           ; BSR set to: 57
  4727   00DCD8  0012               	return		;funcret
  4728   00DCDA                     __end_of_PMD_Initialize:
  4729                           	callstack 0
  4730                           
  4731 ;; *************** function _PIN_MANAGER_Initialize *****************
  4732 ;; Defined at:
  4733 ;;		line 45 in file "pin_manager.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;Total ram usage:        0 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;;		_SYSTEM_Initialize
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text15
  4762   00E94A                     __ptext15:
  4763                           	callstack 0
  4764   00E94A                     _PIN_MANAGER_Initialize:
  4765                           	callstack 29
  4766   00E94A                     
  4767                           ;pin_manager.c: 50:     LATE = 0x00;
  4768   00E94A  0E00               	movlw	0
  4769   00E94C  6EBE               	movwf	190,c	;volatile
  4770                           
  4771                           ;pin_manager.c: 51:     LATD = 0x00;
  4772   00E94E  0E00               	movlw	0
  4773   00E950  6EBD               	movwf	189,c	;volatile
  4774                           
  4775                           ;pin_manager.c: 52:     LATA = 0x00;
  4776   00E952  0E00               	movlw	0
  4777   00E954  6EBA               	movwf	186,c	;volatile
  4778                           
  4779                           ;pin_manager.c: 53:     LATB = 0x00;
  4780   00E956  0E00               	movlw	0
  4781   00E958  6EBB               	movwf	187,c	;volatile
  4782                           
  4783                           ;pin_manager.c: 54:     LATC = 0x00;
  4784   00E95A  0E00               	movlw	0
  4785   00E95C  6EBC               	movwf	188,c	;volatile
  4786                           
  4787                           ;pin_manager.c: 59:     TRISE = 0x07;
  4788   00E95E  0E07               	movlw	7
  4789   00E960  6EC6               	movwf	198,c	;volatile
  4790   00E962                     
  4791                           ;pin_manager.c: 60:     TRISA = 0xFF;
  4792   00E962  68C2               	setf	194,c	;volatile
  4793                           
  4794                           ;pin_manager.c: 61:     TRISB = 0xBF;
  4795   00E964  0EBF               	movlw	191
  4796   00E966  6EC3               	movwf	195,c	;volatile
  4797                           
  4798                           ;pin_manager.c: 62:     TRISC = 0x84;
  4799   00E968  0E84               	movlw	132
  4800   00E96A  6EC4               	movwf	196,c	;volatile
  4801   00E96C                     
  4802                           ;pin_manager.c: 63:     TRISD = 0xFF;
  4803   00E96C  68C5               	setf	197,c	;volatile
  4804                           
  4805                           ;pin_manager.c: 68:     ANSELD = 0x00;
  4806   00E96E  0E00               	movlw	0
  4807   00E970  013A               	movlb	58	; () banked
  4808   00E972  6F70               	movwf	112,b	;volatile
  4809                           
  4810                           ;pin_manager.c: 69:     ANSELC = 0x00;
  4811   00E974  0E00               	movlw	0
  4812   00E976  6F60               	movwf	96,b	;volatile
  4813                           
  4814                           ;pin_manager.c: 70:     ANSELB = 0x2F;
  4815   00E978  0E2F               	movlw	47
  4816   00E97A  6F50               	movwf	80,b	;volatile
  4817                           
  4818                           ;pin_manager.c: 71:     ANSELE = 0x07;
  4819   00E97C  0E07               	movlw	7
  4820   00E97E  6F80               	movwf	128,b	;volatile
  4821                           
  4822                           ;pin_manager.c: 72:     ANSELA = 0xEF;
  4823   00E980  0EEF               	movlw	239
  4824   00E982  6F40               	movwf	64,b	;volatile
  4825                           
  4826                           ;pin_manager.c: 77:     WPUD = 0x00;
  4827   00E984  0E00               	movlw	0
  4828   00E986  6F71               	movwf	113,b	;volatile
  4829                           
  4830                           ;pin_manager.c: 78:     WPUE = 0x00;
  4831   00E988  0E00               	movlw	0
  4832   00E98A  6F81               	movwf	129,b	;volatile
  4833                           
  4834                           ;pin_manager.c: 79:     WPUB = 0x00;
  4835   00E98C  0E00               	movlw	0
  4836   00E98E  6F51               	movwf	81,b	;volatile
  4837                           
  4838                           ;pin_manager.c: 80:     WPUA = 0x00;
  4839   00E990  0E00               	movlw	0
  4840   00E992  6F41               	movwf	65,b	;volatile
  4841                           
  4842                           ;pin_manager.c: 81:     WPUC = 0x00;
  4843   00E994  0E00               	movlw	0
  4844   00E996  6F61               	movwf	97,b	;volatile
  4845                           
  4846                           ;pin_manager.c: 86:     RB1I2C = 0x00;
  4847   00E998  0E00               	movlw	0
  4848   00E99A  6F5A               	movwf	90,b	;volatile
  4849                           
  4850                           ;pin_manager.c: 87:     RB2I2C = 0x00;
  4851   00E99C  0E00               	movlw	0
  4852   00E99E  6F5B               	movwf	91,b	;volatile
  4853                           
  4854                           ;pin_manager.c: 88:     RC3I2C = 0x00;
  4855   00E9A0  0E00               	movlw	0
  4856   00E9A2  6F6A               	movwf	106,b	;volatile
  4857                           
  4858                           ;pin_manager.c: 89:     RC4I2C = 0x00;
  4859   00E9A4  0E00               	movlw	0
  4860   00E9A6  6F6B               	movwf	107,b	;volatile
  4861                           
  4862                           ;pin_manager.c: 90:     RD0I2C = 0x00;
  4863   00E9A8  0E00               	movlw	0
  4864   00E9AA  6F7A               	movwf	122,b	;volatile
  4865                           
  4866                           ;pin_manager.c: 91:     RD1I2C = 0x00;
  4867   00E9AC  0E00               	movlw	0
  4868   00E9AE  6F7B               	movwf	123,b	;volatile
  4869                           
  4870                           ;pin_manager.c: 96:     ODCONE = 0x00;
  4871   00E9B0  0E00               	movlw	0
  4872   00E9B2  6F82               	movwf	130,b	;volatile
  4873                           
  4874                           ;pin_manager.c: 97:     ODCONA = 0x00;
  4875   00E9B4  0E00               	movlw	0
  4876   00E9B6  6F42               	movwf	66,b	;volatile
  4877                           
  4878                           ;pin_manager.c: 98:     ODCONB = 0x00;
  4879   00E9B8  0E00               	movlw	0
  4880   00E9BA  6F52               	movwf	82,b	;volatile
  4881                           
  4882                           ;pin_manager.c: 99:     ODCONC = 0x18;
  4883   00E9BC  0E18               	movlw	24
  4884   00E9BE  6F62               	movwf	98,b	;volatile
  4885                           
  4886                           ;pin_manager.c: 100:     ODCOND = 0x00;
  4887   00E9C0  0E00               	movlw	0
  4888   00E9C2  6F72               	movwf	114,b	;volatile
  4889   00E9C4                     
  4890                           ; BSR set to: 58
  4891                           ;pin_manager.c: 105:     SLRCONA = 0xFF;
  4892   00E9C4  6943               	setf	67,b	;volatile
  4893   00E9C6                     
  4894                           ; BSR set to: 58
  4895                           ;pin_manager.c: 106:     SLRCONB = 0xFF;
  4896   00E9C6  6953               	setf	83,b	;volatile
  4897   00E9C8                     
  4898                           ; BSR set to: 58
  4899                           ;pin_manager.c: 107:     SLRCONC = 0xFF;
  4900   00E9C8  6963               	setf	99,b	;volatile
  4901   00E9CA                     
  4902                           ; BSR set to: 58
  4903                           ;pin_manager.c: 108:     SLRCOND = 0xFF;
  4904   00E9CA  6973               	setf	115,b	;volatile
  4905                           
  4906                           ;pin_manager.c: 109:     SLRCONE = 0x07;
  4907   00E9CC  0E07               	movlw	7
  4908   00E9CE  6F83               	movwf	131,b	;volatile
  4909   00E9D0                     
  4910                           ; BSR set to: 58
  4911                           ;pin_manager.c: 114:     INLVLA = 0xFF;
  4912   00E9D0  6944               	setf	68,b	;volatile
  4913   00E9D2                     
  4914                           ; BSR set to: 58
  4915                           ;pin_manager.c: 115:     INLVLB = 0xFF;
  4916   00E9D2  6954               	setf	84,b	;volatile
  4917   00E9D4                     
  4918                           ; BSR set to: 58
  4919                           ;pin_manager.c: 116:     INLVLC = 0xFF;
  4920   00E9D4  6964               	setf	100,b	;volatile
  4921   00E9D6                     
  4922                           ; BSR set to: 58
  4923                           ;pin_manager.c: 117:     INLVLD = 0xFF;
  4924   00E9D6  6974               	setf	116,b	;volatile
  4925                           
  4926                           ;pin_manager.c: 118:     INLVLE = 0x0F;
  4927   00E9D8  0E0F               	movlw	15
  4928   00E9DA  6F84               	movwf	132,b	;volatile
  4929                           
  4930                           ;pin_manager.c: 121:     U2RXPPS = 0x0F;
  4931   00E9DC  0E0F               	movlw	15
  4932   00E9DE  6FE8               	movwf	232,b	;volatile
  4933                           
  4934                           ;pin_manager.c: 122:     RC0PPS = 0x25;
  4935   00E9E0  0E25               	movlw	37
  4936   00E9E2  6F10               	movwf	16,b	;volatile
  4937                           
  4938                           ;pin_manager.c: 123:     RB6PPS = 0x16;
  4939   00E9E4  0E16               	movlw	22
  4940   00E9E6  6F0E               	movwf	14,b	;volatile
  4941                           
  4942                           ;pin_manager.c: 124:     RC3PPS = 0x21;
  4943   00E9E8  0E21               	movlw	33
  4944   00E9EA  6F13               	movwf	19,b	;volatile
  4945                           
  4946                           ;pin_manager.c: 125:     RC1PPS = 0x0F;
  4947   00E9EC  0E0F               	movlw	15
  4948   00E9EE  6F11               	movwf	17,b	;volatile
  4949                           
  4950                           ;pin_manager.c: 126:     RC4PPS = 0x22;
  4951   00E9F0  0E22               	movlw	34
  4952   00E9F2  6F14               	movwf	20,b	;volatile
  4953                           
  4954                           ;pin_manager.c: 127:     U1RXPPS = 0x17;
  4955   00E9F4  0E17               	movlw	23
  4956   00E9F6  6FE5               	movwf	229,b	;volatile
  4957                           
  4958                           ;pin_manager.c: 128:     T0CKIPPS = 0x04;
  4959   00E9F8  0E04               	movlw	4
  4960   00E9FA  6FC3               	movwf	195,b	;volatile
  4961                           
  4962                           ;pin_manager.c: 129:     I2C1SCLPPS = 0x13;
  4963   00E9FC  0E13               	movlw	19
  4964   00E9FE  6FE1               	movwf	225,b	;volatile
  4965                           
  4966                           ;pin_manager.c: 130:     ADACTPPS = 0x0C;
  4967   00EA00  0E0C               	movlw	12
  4968   00EA02  6FDD               	movwf	221,b	;volatile
  4969                           
  4970                           ;pin_manager.c: 131:     I2C1SDAPPS = 0x14;
  4971   00EA04  0E14               	movlw	20
  4972   00EA06  6FE2               	movwf	226,b	;volatile
  4973                           
  4974                           ;pin_manager.c: 132:     T2INPPS = 0x12;
  4975   00EA08  0E12               	movlw	18
  4976   00EA0A  6FCA               	movwf	202,b	;volatile
  4977                           
  4978                           ;pin_manager.c: 133:     RC5PPS = 0x0D;
  4979   00EA0C  0E0D               	movlw	13
  4980   00EA0E  6F15               	movwf	21,b	;volatile
  4981                           
  4982                           ;pin_manager.c: 134:     RC6PPS = 0x13;
  4983   00EA10  0E13               	movlw	19
  4984   00EA12  6F16               	movwf	22,b	;volatile
  4985   00EA14                     
  4986                           ; BSR set to: 58
  4987   00EA14  0012               	return		;funcret
  4988   00EA16                     __end_of_PIN_MANAGER_Initialize:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _OSCILLATOR_Initialize *****************
  4992 ;; Defined at:
  4993 ;;		line 18 in file "initialize.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_SYSTEM_Initialize
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text16
  5021   00DBF0                     __ptext16:
  5022                           	callstack 0
  5023   00DBF0                     _OSCILLATOR_Initialize:
  5024                           	callstack 29
  5025   00DBF0                     
  5026                           ;initialize.c: 21:     OSCCON1 = 0x60;
  5027   00DBF0  0E60               	movlw	96
  5028   00DBF2  0139               	movlb	57	; () banked
  5029   00DBF4  6FD9               	movwf	217,b	;volatile
  5030                           
  5031                           ;initialize.c: 23:     OSCCON3 = 0x00;
  5032   00DBF6  0E00               	movlw	0
  5033   00DBF8  6FDB               	movwf	219,b	;volatile
  5034                           
  5035                           ;initialize.c: 25:     OSCEN = 0x00;
  5036   00DBFA  0E00               	movlw	0
  5037   00DBFC  6FDD               	movwf	221,b	;volatile
  5038                           
  5039                           ;initialize.c: 27:     OSCFRQ = 0x07;
  5040   00DBFE  0E07               	movlw	7
  5041   00DC00  6FDF               	movwf	223,b	;volatile
  5042                           
  5043                           ;initialize.c: 29:     OSCTUNE = 0x00;
  5044   00DC02  0E00               	movlw	0
  5045   00DC04  6FDE               	movwf	222,b	;volatile
  5046   00DC06                     
  5047                           ; BSR set to: 57
  5048   00DC06  0012               	return		;funcret
  5049   00DC08                     __end_of_OSCILLATOR_Initialize:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function _Right_Turn *****************
  5053 ;; Defined at:
  5054 ;;		line 153 in file "pololu_robot.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  speed           1    wreg     unsigned char 
  5057 ;;  differential    1    1[COMRAM] unsigned char 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  speed           1    2[COMRAM] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5069 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;Total ram usage:        2 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 1
  5076 ;; This function calls:
  5077 ;;		_UART1_Write
  5078 ;;		_UART1_is_tx_ready
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text17
  5085   00E170                     __ptext17:
  5086                           	callstack 0
  5087   00E170                     _Right_Turn:
  5088                           	callstack 29
  5089                           
  5090                           ; BSR set to: 57
  5091                           ;incstack = 0
  5092                           ;Right_Turn@speed stored from wreg
  5093   00E170  6E03               	movwf	Right_Turn@speed^0,c
  5094   00E172                     l3663:
  5095   00E172  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5096   00E176  0900               	iorlw	0
  5097   00E178  B4D8               	btfsc	status,2,c
  5098   00E17A  EFC1  F070         	goto	u2471
  5099   00E17E  EFC3  F070         	goto	u2470
  5100   00E182                     u2471:
  5101   00E182  EFB9  F070         	goto	l3663
  5102   00E186                     u2470:
  5103   00E186                     
  5104                           ;pololu_robot.c: 157:    UART1_Write(0xC1);
  5105   00E186  0EC1               	movlw	193
  5106   00E188  EC04  F06E         	call	_UART1_Write
  5107   00E18C                     l3667:
  5108   00E18C  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5109   00E190  0900               	iorlw	0
  5110   00E192  B4D8               	btfsc	status,2,c
  5111   00E194  EFCE  F070         	goto	u2481
  5112   00E198  EFD0  F070         	goto	u2480
  5113   00E19C                     u2481:
  5114   00E19C  EFC6  F070         	goto	l3667
  5115   00E1A0                     u2480:
  5116   00E1A0                     
  5117                           ;pololu_robot.c: 159:    UART1_Write(speed + differential);
  5118   00E1A0  5003               	movf	Right_Turn@speed^0,w,c
  5119   00E1A2  2402               	addwf	Right_Turn@differential^0,w,c
  5120   00E1A4  EC04  F06E         	call	_UART1_Write
  5121   00E1A8                     l3671:
  5122   00E1A8  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5123   00E1AC  0900               	iorlw	0
  5124   00E1AE  B4D8               	btfsc	status,2,c
  5125   00E1B0  EFDC  F070         	goto	u2491
  5126   00E1B4  EFDE  F070         	goto	u2490
  5127   00E1B8                     u2491:
  5128   00E1B8  EFD4  F070         	goto	l3671
  5129   00E1BC                     u2490:
  5130   00E1BC                     
  5131                           ;pololu_robot.c: 161:    UART1_Write(0xC5);
  5132   00E1BC  0EC5               	movlw	197
  5133   00E1BE  EC04  F06E         	call	_UART1_Write
  5134   00E1C2                     l3675:
  5135   00E1C2  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5136   00E1C6  0900               	iorlw	0
  5137   00E1C8  B4D8               	btfsc	status,2,c
  5138   00E1CA  EFE9  F070         	goto	u2501
  5139   00E1CE  EFEB  F070         	goto	u2500
  5140   00E1D2                     u2501:
  5141   00E1D2  EFE1  F070         	goto	l3675
  5142   00E1D6                     u2500:
  5143   00E1D6                     
  5144                           ;pololu_robot.c: 163:    UART1_Write(speed);
  5145   00E1D6  5003               	movf	Right_Turn@speed^0,w,c
  5146   00E1D8  EC04  F06E         	call	_UART1_Write
  5147   00E1DC  0012               	return		;funcret
  5148   00E1DE                     __end_of_Right_Turn:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _Read_Calibrated_Sensors *****************
  5152 ;; Defined at:
  5153 ;;		line 46 in file "pololu_robot.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  3    0[COMRAM] PTR unsigned int 
  5160 ;; Registers used:
  5161 ;;		None
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;Total ram usage:        2 bytes
  5172 ;; Hardware stack levels used: 1
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text18
  5181   00DB26                     __ptext18:
  5182                           	callstack 0
  5183   00DB26                     _Read_Calibrated_Sensors:
  5184                           	callstack 30
  5185   00DB26  0012               	return		;funcret
  5186   00DB28                     __end_of_Read_Calibrated_Sensors:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _Read_Battery_Voltage *****************
  5190 ;; Defined at:
  5191 ;;		line 51 in file "pololu_robot.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  ubyte           1    6[COMRAM] unsigned char 
  5196 ;;  lbyte           1    5[COMRAM] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2    1[COMRAM] unsigned int 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;Total ram usage:        6 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 2
  5213 ;; This function calls:
  5214 ;;		_UART1_Read
  5215 ;;		_UART1_Write
  5216 ;;		_UART1_is_rx_ready
  5217 ;;		_UART1_is_tx_ready
  5218 ;; This function is called by:
  5219 ;;		_main
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text19
  5224   00DF68                     __ptext19:
  5225                           	callstack 0
  5226   00DF68                     _Read_Battery_Voltage:
  5227                           	callstack 28
  5228   00DF68                     l3479:
  5229   00DF68  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5230   00DF6C  0900               	iorlw	0
  5231   00DF6E  B4D8               	btfsc	status,2,c
  5232   00DF70  EFBC  F06F         	goto	u2221
  5233   00DF74  EFBE  F06F         	goto	u2220
  5234   00DF78                     u2221:
  5235   00DF78  EFB4  F06F         	goto	l3479
  5236   00DF7C                     u2220:
  5237   00DF7C                     
  5238                           ;pololu_robot.c: 56:     UART1_Write(0xB1);
  5239   00DF7C  0EB1               	movlw	177
  5240   00DF7E  EC04  F06E         	call	_UART1_Write
  5241   00DF82                     l3483:
  5242   00DF82  ECCC  F06D         	call	_UART1_is_rx_ready	;wreg free
  5243   00DF86  0900               	iorlw	0
  5244   00DF88  B4D8               	btfsc	status,2,c
  5245   00DF8A  EFC9  F06F         	goto	u2231
  5246   00DF8E  EFCB  F06F         	goto	u2230
  5247   00DF92                     u2231:
  5248   00DF92  EFC1  F06F         	goto	l3483
  5249   00DF96                     u2230:
  5250   00DF96                     
  5251                           ;pololu_robot.c: 58:     lbyte = UART1_Read();
  5252   00DF96  ECF8  F071         	call	_UART1_Read	;wreg free
  5253   00DF9A  6E06               	movwf	Read_Battery_Voltage@lbyte^0,c
  5254   00DF9C                     l3487:
  5255   00DF9C  ECCC  F06D         	call	_UART1_is_rx_ready	;wreg free
  5256   00DFA0  0900               	iorlw	0
  5257   00DFA2  B4D8               	btfsc	status,2,c
  5258   00DFA4  EFD6  F06F         	goto	u2241
  5259   00DFA8  EFD8  F06F         	goto	u2240
  5260   00DFAC                     u2241:
  5261   00DFAC  EFCE  F06F         	goto	l3487
  5262   00DFB0                     u2240:
  5263   00DFB0                     
  5264                           ;pololu_robot.c: 60:     ubyte = UART1_Read();
  5265   00DFB0  ECF8  F071         	call	_UART1_Read	;wreg free
  5266   00DFB4  6E07               	movwf	Read_Battery_Voltage@ubyte^0,c
  5267   00DFB6                     
  5268                           ;pololu_robot.c: 61:     return (unsigned int)(ubyte*256 + lbyte);
  5269   00DFB6  5007               	movf	Read_Battery_Voltage@ubyte^0,w,c
  5270   00DFB8  6E05               	movwf	(??_Read_Battery_Voltage+1)^0,c
  5271   00DFBA  6A04               	clrf	??_Read_Battery_Voltage^0,c
  5272   00DFBC  5006               	movf	Read_Battery_Voltage@lbyte^0,w,c
  5273   00DFBE  2404               	addwf	??_Read_Battery_Voltage^0,w,c
  5274   00DFC0  6E02               	movwf	?_Read_Battery_Voltage^0,c
  5275   00DFC2  0E00               	movlw	0
  5276   00DFC4  2005               	addwfc	(??_Read_Battery_Voltage+1)^0,w,c
  5277   00DFC6  6E03               	movwf	(?_Read_Battery_Voltage+1)^0,c
  5278   00DFC8  0012               	return		;funcret
  5279   00DFCA                     __end_of_Read_Battery_Voltage:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _Left_Turn *****************
  5283 ;; Defined at:
  5284 ;;		line 141 in file "pololu_robot.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  speed           1    wreg     unsigned char 
  5287 ;;  differential    1    1[COMRAM] unsigned char 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  speed           1    2[COMRAM] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5299 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;Total ram usage:        2 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 1
  5306 ;; This function calls:
  5307 ;;		_UART1_Write
  5308 ;;		_UART1_is_tx_ready
  5309 ;; This function is called by:
  5310 ;;		_main
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text20
  5315   00E102                     __ptext20:
  5316                           	callstack 0
  5317   00E102                     _Left_Turn:
  5318                           	callstack 29
  5319                           
  5320                           ;incstack = 0
  5321                           ;Left_Turn@speed stored from wreg
  5322   00E102  6E03               	movwf	Left_Turn@speed^0,c
  5323   00E104                     l3645:
  5324   00E104  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5325   00E108  0900               	iorlw	0
  5326   00E10A  B4D8               	btfsc	status,2,c
  5327   00E10C  EF8A  F070         	goto	u2431
  5328   00E110  EF8C  F070         	goto	u2430
  5329   00E114                     u2431:
  5330   00E114  EF82  F070         	goto	l3645
  5331   00E118                     u2430:
  5332   00E118                     
  5333                           ;pololu_robot.c: 144:     UART1_Write(0xC1);
  5334   00E118  0EC1               	movlw	193
  5335   00E11A  EC04  F06E         	call	_UART1_Write
  5336   00E11E                     l3649:
  5337   00E11E  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5338   00E122  0900               	iorlw	0
  5339   00E124  B4D8               	btfsc	status,2,c
  5340   00E126  EF97  F070         	goto	u2441
  5341   00E12A  EF99  F070         	goto	u2440
  5342   00E12E                     u2441:
  5343   00E12E  EF8F  F070         	goto	l3649
  5344   00E132                     u2440:
  5345   00E132                     
  5346                           ;pololu_robot.c: 146:     UART1_Write(speed);
  5347   00E132  5003               	movf	Left_Turn@speed^0,w,c
  5348   00E134  EC04  F06E         	call	_UART1_Write
  5349   00E138                     l3653:
  5350   00E138  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5351   00E13C  0900               	iorlw	0
  5352   00E13E  A4D8               	btfss	status,2,c
  5353   00E140  EFA4  F070         	goto	u2451
  5354   00E144  EFA6  F070         	goto	u2450
  5355   00E148                     u2451:
  5356   00E148  EF9C  F070         	goto	l3653
  5357   00E14C                     u2450:
  5358   00E14C                     
  5359                           ;pololu_robot.c: 148:     UART1_Write(0xC5);
  5360   00E14C  0EC5               	movlw	197
  5361   00E14E  EC04  F06E         	call	_UART1_Write
  5362   00E152                     l3657:
  5363   00E152  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5364   00E156  0900               	iorlw	0
  5365   00E158  B4D8               	btfsc	status,2,c
  5366   00E15A  EFB1  F070         	goto	u2461
  5367   00E15E  EFB3  F070         	goto	u2460
  5368   00E162                     u2461:
  5369   00E162  EFA9  F070         	goto	l3657
  5370   00E166                     u2460:
  5371   00E166                     
  5372                           ;pololu_robot.c: 150:     UART1_Write(speed + differential);
  5373   00E166  5003               	movf	Left_Turn@speed^0,w,c
  5374   00E168  2402               	addwf	Left_Turn@differential^0,w,c
  5375   00E16A  EC04  F06E         	call	_UART1_Write
  5376   00E16E  0012               	return		;funcret
  5377   00E170                     __end_of_Left_Turn:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _LCD_PrintCharacter *****************
  5381 ;; Defined at:
  5382 ;;		line 88 in file "pololu_robot.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  byte            1    wreg     unsigned char 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  byte            1    1[COMRAM] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;Total ram usage:        1 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 1
  5403 ;; This function calls:
  5404 ;;		_UART1_Write
  5405 ;;		_UART1_is_tx_ready
  5406 ;; This function is called by:
  5407 ;;		_main
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text21
  5412   00DE02                     __ptext21:
  5413                           	callstack 0
  5414   00DE02                     _LCD_PrintCharacter:
  5415                           	callstack 29
  5416                           
  5417                           ;incstack = 0
  5418                           ;LCD_PrintCharacter@byte stored from wreg
  5419   00DE02  6E02               	movwf	LCD_PrintCharacter@byte^0,c
  5420   00DE04                     l3613:
  5421   00DE04  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5422   00DE08  0900               	iorlw	0
  5423   00DE0A  B4D8               	btfsc	status,2,c
  5424   00DE0C  EF0A  F06F         	goto	u2361
  5425   00DE10  EF0C  F06F         	goto	u2360
  5426   00DE14                     u2361:
  5427   00DE14  EF02  F06F         	goto	l3613
  5428   00DE18                     u2360:
  5429   00DE18                     
  5430                           ;pololu_robot.c: 91:     UART1_Write(0xB8);
  5431   00DE18  0EB8               	movlw	184
  5432   00DE1A  EC04  F06E         	call	_UART1_Write
  5433   00DE1E                     l3617:
  5434   00DE1E  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5435   00DE22  0900               	iorlw	0
  5436   00DE24  B4D8               	btfsc	status,2,c
  5437   00DE26  EF17  F06F         	goto	u2371
  5438   00DE2A  EF19  F06F         	goto	u2370
  5439   00DE2E                     u2371:
  5440   00DE2E  EF0F  F06F         	goto	l3617
  5441   00DE32                     u2370:
  5442   00DE32                     
  5443                           ;pololu_robot.c: 93:     UART1_Write(1);
  5444   00DE32  0E01               	movlw	1
  5445   00DE34  EC04  F06E         	call	_UART1_Write
  5446   00DE38                     l3621:
  5447   00DE38  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  5448   00DE3C  0900               	iorlw	0
  5449   00DE3E  B4D8               	btfsc	status,2,c
  5450   00DE40  EF24  F06F         	goto	u2381
  5451   00DE44  EF26  F06F         	goto	u2380
  5452   00DE48                     u2381:
  5453   00DE48  EF1C  F06F         	goto	l3621
  5454   00DE4C                     u2380:
  5455   00DE4C                     
  5456                           ;pololu_robot.c: 95:     UART1_Write(byte);
  5457   00DE4C  5002               	movf	LCD_PrintCharacter@byte^0,w,c
  5458   00DE4E  EC04  F06E         	call	_UART1_Write
  5459   00DE52  0012               	return		;funcret
  5460   00DE54                     __end_of_LCD_PrintCharacter:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function _Get_Number *****************
  5464 ;; Defined at:
  5465 ;;		line 393 in file "robotmain.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  digit           1   42[COMRAM] unsigned char 
  5470 ;;  value           1   41[COMRAM] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      unsigned char 
  5473 ;; Registers used:
  5474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;Total ram usage:        2 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 6
  5487 ;; This function calls:
  5488 ;;		_Get_Key
  5489 ;;		_printf
  5490 ;; This function is called by:
  5491 ;;		_main
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text22
  5496   00E2DA                     __ptext22:
  5497                           	callstack 0
  5498   00E2DA                     _Get_Number:
  5499                           	callstack 24
  5500   00E2DA                     
  5501                           ;robotmain.c: 395:     char digit = 255;
  5502   00E2DA  682B               	setf	Get_Number@digit^0,c
  5503   00E2DC                     
  5504                           ;robotmain.c: 396:     char value = 0;
  5505   00E2DC  0E00               	movlw	0
  5506   00E2DE  6E2A               	movwf	Get_Number@value^0,c
  5507                           
  5508                           ;robotmain.c: 398:     while(digit != '\r')
  5509   00E2E0  EFA7  F071         	goto	l3605
  5510   00E2E4                     l3585:
  5511                           
  5512                           ;robotmain.c: 399:     {;robotmain.c: 400:         digit = Get_Key();
  5513   00E2E4  ECB2  F071         	call	_Get_Key	;wreg free
  5514   00E2E8  6E2B               	movwf	Get_Number@digit^0,c
  5515   00E2EA                     
  5516                           ;robotmain.c: 401:         if (digit == '\r')
  5517   00E2EA  0E0D               	movlw	13
  5518   00E2EC  182B               	xorwf	Get_Number@digit^0,w,c
  5519   00E2EE  A4D8               	btfss	status,2,c
  5520   00E2F0  EF7C  F071         	goto	u2321
  5521   00E2F4  EF7E  F071         	goto	u2320
  5522   00E2F8                     u2321:
  5523   00E2F8  EF80  F071         	goto	l3593
  5524   00E2FC                     u2320:
  5525   00E2FC  EFA7  F071         	goto	l3605
  5526   00E300                     l3593:
  5527   00E300  0E2F               	movlw	47
  5528   00E302  642B               	cpfsgt	Get_Number@digit^0,c
  5529   00E304  EF86  F071         	goto	u2331
  5530   00E308  EF88  F071         	goto	u2330
  5531   00E30C                     u2331:
  5532   00E30C  EF90  F071         	goto	l3597
  5533   00E310                     u2330:
  5534   00E310  0E39               	movlw	57
  5535   00E312  642B               	cpfsgt	Get_Number@digit^0,c
  5536   00E314  EF8E  F071         	goto	u2341
  5537   00E318  EF90  F071         	goto	u2340
  5538   00E31C                     u2341:
  5539   00E31C  EFA1  F071         	goto	l3603
  5540   00E320                     u2340:
  5541   00E320                     l3597:
  5542                           
  5543                           ;robotmain.c: 404:         {;robotmain.c: 405:             printf("\n\r");
  5544   00E320  0EA0               	movlw	low (STR_25+41)
  5545   00E322  6E23               	movwf	printf@fmt^0,c
  5546   00E324  0EFC               	movlw	high (STR_25+41)
  5547   00E326  6E24               	movwf	(printf@fmt+1)^0,c
  5548   00E328  EC2C  F06E         	call	_printf	;wreg free
  5549                           
  5550                           ;robotmain.c: 406:             printf("Invalid input. Please redo numerical input. \r\n"
      +                          );
  5551   00E32C  0E93               	movlw	low STR_88
  5552   00E32E  6E23               	movwf	printf@fmt^0,c
  5553   00E330  0EFB               	movlw	high STR_88
  5554   00E332  6E24               	movwf	(printf@fmt+1)^0,c
  5555   00E334  EC2C  F06E         	call	_printf	;wreg free
  5556   00E338                     
  5557                           ;robotmain.c: 407:             value = 0;
  5558   00E338  0E00               	movlw	0
  5559   00E33A  6E2A               	movwf	Get_Number@value^0,c
  5560   00E33C                     
  5561                           ;robotmain.c: 408:             digit = 255;
  5562   00E33C  682B               	setf	Get_Number@digit^0,c
  5563                           
  5564                           ;robotmain.c: 409:         }
  5565   00E33E  EFA7  F071         	goto	l3605
  5566   00E342                     l3603:
  5567                           
  5568                           ;robotmain.c: 411:             value = value*10 + (digit-48);
  5569   00E342  502A               	movf	Get_Number@value^0,w,c
  5570   00E344  0D0A               	mullw	10
  5571   00E346  50F3               	movf	243,w,c
  5572   00E348  242B               	addwf	Get_Number@digit^0,w,c
  5573   00E34A  0FD0               	addlw	208
  5574   00E34C  6E2A               	movwf	Get_Number@value^0,c
  5575   00E34E                     l3605:
  5576                           
  5577                           ;robotmain.c: 398:     while(digit != '\r')
  5578   00E34E  0E0D               	movlw	13
  5579   00E350  182B               	xorwf	Get_Number@digit^0,w,c
  5580   00E352  A4D8               	btfss	status,2,c
  5581   00E354  EFAE  F071         	goto	u2351
  5582   00E358  EFB0  F071         	goto	u2350
  5583   00E35C                     u2351:
  5584   00E35C  EF72  F071         	goto	l3585
  5585   00E360                     u2350:
  5586   00E360                     
  5587                           ;robotmain.c: 413:     return(value);
  5588   00E360  502A               	movf	Get_Number@value^0,w,c
  5589   00E362  0012               	return		;funcret
  5590   00E364                     __end_of_Get_Number:
  5591                           	callstack 0
  5592                           
  5593 ;; *************** function _Get_Key *****************
  5594 ;; Defined at:
  5595 ;;		line 418 in file "robotmain.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  rxdata          1    1[COMRAM] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      unsigned char 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;Total ram usage:        1 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 2
  5616 ;; This function calls:
  5617 ;;		_UART2_Read
  5618 ;;		_UART2_Write
  5619 ;;		_UART2_is_rx_ready
  5620 ;;		_UART2_is_tx_ready
  5621 ;; This function is called by:
  5622 ;;		_main
  5623 ;;		_Get_Number
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text23
  5628   00E364                     __ptext23:
  5629                           	callstack 0
  5630   00E364                     _Get_Key:
  5631                           	callstack 27
  5632   00E364                     
  5633                           ;robotmain.c: 420:     char rxdata = 255;
  5634   00E364  6802               	setf	Get_Key@rxdata^0,c
  5635                           
  5636                           ;robotmain.c: 423:     while(((rxdata < 48) || (rxdata > 122)) && (rxdata != '\r'))
  5637   00E366  EFDD  F071         	goto	l3347
  5638   00E36A                     l3335:
  5639                           
  5640                           ;robotmain.c: 424:     {;robotmain.c: 425:         if (UART2_is_rx_ready())
  5641   00E36A  ECE2  F06D         	call	_UART2_is_rx_ready	;wreg free
  5642   00E36E  0900               	iorlw	0
  5643   00E370  B4D8               	btfsc	status,2,c
  5644   00E372  EFBD  F071         	goto	u2031
  5645   00E376  EFBF  F071         	goto	u2030
  5646   00E37A                     u2031:
  5647   00E37A  EFDD  F071         	goto	l3347
  5648   00E37E                     u2030:
  5649   00E37E                     
  5650                           ;robotmain.c: 426:         {;robotmain.c: 427:             rxdata = UART2_Read();
  5651   00E37E  EC43  F072         	call	_UART2_Read	;wreg free
  5652   00E382  6E02               	movwf	Get_Key@rxdata^0,c
  5653   00E384                     
  5654                           ;robotmain.c: 428:             if (UART2_is_tx_ready())
  5655   00E384  EC83  F06E         	call	_UART2_is_tx_ready	;wreg free
  5656   00E388  0900               	iorlw	0
  5657   00E38A  B4D8               	btfsc	status,2,c
  5658   00E38C  EFCA  F071         	goto	u2041
  5659   00E390  EFCC  F071         	goto	u2040
  5660   00E394                     u2041:
  5661   00E394  EFDD  F071         	goto	l3347
  5662   00E398                     u2040:
  5663   00E398                     
  5664                           ;robotmain.c: 429:             {;robotmain.c: 430:                 UART2_Write(rxdata);
  5665   00E398  5002               	movf	Get_Key@rxdata^0,w,c
  5666   00E39A  EC11  F06E         	call	_UART2_Write
  5667   00E39E                     
  5668                           ;robotmain.c: 431:                 if(rxdata == '\r')
  5669   00E39E  0E0D               	movlw	13
  5670   00E3A0  1802               	xorwf	Get_Key@rxdata^0,w,c
  5671   00E3A2  A4D8               	btfss	status,2,c
  5672   00E3A4  EFD6  F071         	goto	u2051
  5673   00E3A8  EFD8  F071         	goto	u2050
  5674   00E3AC                     u2051:
  5675   00E3AC  EFDD  F071         	goto	l163
  5676   00E3B0                     u2050:
  5677   00E3B0                     
  5678                           ;robotmain.c: 432:                     UART2_Write('\n');
  5679   00E3B0  0E0A               	movlw	10
  5680   00E3B2  EC11  F06E         	call	_UART2_Write
  5681   00E3B6  EFDD  F071         	goto	l3347
  5682   00E3BA                     l163:
  5683   00E3BA                     l3347:
  5684                           
  5685                           ;robotmain.c: 423:     while(((rxdata < 48) || (rxdata > 122)) && (rxdata != '\r'))
  5686   00E3BA  0E2F               	movlw	47
  5687   00E3BC  6402               	cpfsgt	Get_Key@rxdata^0,c
  5688   00E3BE  EFE3  F071         	goto	u2061
  5689   00E3C2  EFE5  F071         	goto	u2060
  5690   00E3C6                     u2061:
  5691   00E3C6  EFED  F071         	goto	l3351
  5692   00E3CA                     u2060:
  5693   00E3CA  0E7A               	movlw	122
  5694   00E3CC  6402               	cpfsgt	Get_Key@rxdata^0,c
  5695   00E3CE  EFEB  F071         	goto	u2071
  5696   00E3D2  EFED  F071         	goto	u2070
  5697   00E3D6                     u2071:
  5698   00E3D6  EFF6  F071         	goto	l3353
  5699   00E3DA                     u2070:
  5700   00E3DA                     l3351:
  5701   00E3DA  0E0D               	movlw	13
  5702   00E3DC  1802               	xorwf	Get_Key@rxdata^0,w,c
  5703   00E3DE  A4D8               	btfss	status,2,c
  5704   00E3E0  EFF4  F071         	goto	u2081
  5705   00E3E4  EFF6  F071         	goto	u2080
  5706   00E3E8                     u2081:
  5707   00E3E8  EFB5  F071         	goto	l3335
  5708   00E3EC                     u2080:
  5709   00E3EC                     l3353:
  5710                           
  5711                           ;robotmain.c: 436:     return(rxdata);
  5712   00E3EC  5002               	movf	Get_Key@rxdata^0,w,c
  5713   00E3EE  0012               	return		;funcret
  5714   00E3F0                     __end_of_Get_Key:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _UART2_is_tx_ready *****************
  5718 ;; Defined at:
  5719 ;;		line 78 in file "uart2.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      _Bool 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;Total ram usage:        1 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_Get_Key
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text24
  5747   00DD06                     __ptext24:
  5748                           	callstack 0
  5749   00DD06                     _UART2_is_tx_ready:
  5750                           	callstack 28
  5751   00DD06                     
  5752                           ;uart2.c: 80:     return (_Bool)(PIR6bits.U2TXIF && U2CON0bits.TXEN);
  5753   00DD06  0E00               	movlw	0
  5754   00DD08  6E01               	movwf	_UART2_is_tx_ready$1035^0,c
  5755   00DD0A  0139               	movlb	57	; () banked
  5756   00DD0C  A7A6               	btfss	166,3,b	;volatile
  5757   00DD0E  EF8B  F06E         	goto	u1911
  5758   00DD12  EF8D  F06E         	goto	u1910
  5759   00DD16                     u1911:
  5760   00DD16  EF97  F06E         	goto	l737
  5761   00DD1A                     u1910:
  5762   00DD1A                     
  5763                           ; BSR set to: 57
  5764   00DD1A  013D               	movlb	61	; () banked
  5765   00DD1C  ABDA               	btfss	218,5,b	;volatile
  5766   00DD1E  EF93  F06E         	goto	u1921
  5767   00DD22  EF95  F06E         	goto	u1920
  5768   00DD26                     u1921:
  5769   00DD26  EF97  F06E         	goto	l737
  5770   00DD2A                     u1920:
  5771   00DD2A                     
  5772                           ; BSR set to: 61
  5773   00DD2A  0E01               	movlw	1
  5774   00DD2C  6E01               	movwf	_UART2_is_tx_ready$1035^0,c
  5775   00DD2E                     l737:
  5776   00DD2E  5001               	movf	_UART2_is_tx_ready$1035^0,w,c
  5777   00DD30  0012               	return		;funcret
  5778   00DD32                     __end_of_UART2_is_tx_ready:
  5779                           	callstack 0
  5780                           
  5781 ;; *************** function _UART2_is_rx_ready *****************
  5782 ;; Defined at:
  5783 ;;		line 73 in file "uart2.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      _Bool 
  5790 ;; Registers used:
  5791 ;;		wreg
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_main
  5807 ;;		_Get_Key
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text25
  5812   00DBC4                     __ptext25:
  5813                           	callstack 0
  5814   00DBC4                     _UART2_is_rx_ready:
  5815                           	callstack 30
  5816   00DBC4                     
  5817                           ;uart2.c: 75:     return (_Bool)(PIR6bits.U2RXIF);
  5818   00DBC4  0139               	movlb	57	; () banked
  5819   00DBC6  B5A6               	btfsc	166,2,b	;volatile
  5820   00DBC8  EFE8  F06D         	goto	u1801
  5821   00DBCC  EFEB  F06D         	goto	u1800
  5822   00DBD0                     u1801:
  5823   00DBD0  0E01               	movlw	1
  5824   00DBD2  EFEC  F06D         	goto	u1806
  5825   00DBD6                     u1800:
  5826   00DBD6  0E00               	movlw	0
  5827   00DBD8                     u1806:
  5828   00DBD8                     
  5829                           ; BSR set to: 57
  5830   00DBD8  0012               	return		;funcret
  5831   00DBDA                     __end_of_UART2_is_rx_ready:
  5832                           	callstack 0
  5833                           
  5834 ;; *************** function _UART2_Read *****************
  5835 ;; Defined at:
  5836 ;;		line 92 in file "uart2.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      unsigned char 
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, pcl, pclath, pclatu, tosl, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;Total ram usage:        0 bytes
  5855 ;; Hardware stack levels used: 1
  5856 ;; Hardware stack levels required when called: 1
  5857 ;; This function calls:
  5858 ;;		NULL
  5859 ;;		_UART2_DefaultErrorHandler
  5860 ;;		_UART2_DefaultFramingErrorHandler
  5861 ;;		_UART2_DefaultOverrunErrorHandler
  5862 ;; This function is called by:
  5863 ;;		_main
  5864 ;;		_Get_Key
  5865 ;;		_getch
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text26
  5870   00E486                     __ptext26:
  5871                           	callstack 0
  5872   00E486                     _UART2_Read:
  5873                           	callstack 29
  5874   00E486                     l747:
  5875                           
  5876                           ;uart2.c: 94:     while(!PIR6bits.U2RXIF)
  5877   00E486  0139               	movlb	57	; () banked
  5878   00E488  A5A6               	btfss	166,2,b	;volatile
  5879   00E48A  EF49  F072         	goto	u1811
  5880   00E48E  EF4B  F072         	goto	u1810
  5881   00E492                     u1811:
  5882   00E492  EF43  F072         	goto	l747
  5883   00E496                     u1810:
  5884   00E496                     
  5885                           ; BSR set to: 57
  5886                           ;uart2.c: 97:     uart2RxLastError.status = 0;
  5887   00E496  0E00               	movlw	0
  5888   00E498  6E58               	movwf	_uart2RxLastError^0,c	;volatile
  5889   00E49A                     
  5890                           ; BSR set to: 57
  5891                           ;uart2.c: 99:     if(U2ERRIRbits.FERIF){
  5892   00E49A  013D               	movlb	61	; () banked
  5893   00E49C  A7E1               	btfss	225,3,b	;volatile
  5894   00E49E  EF53  F072         	goto	u1821
  5895   00E4A2  EF55  F072         	goto	u1820
  5896   00E4A6                     u1821:
  5897   00E4A6  EF63  F072         	goto	l3213
  5898   00E4AA                     u1820:
  5899   00E4AA                     
  5900                           ; BSR set to: 61
  5901                           ;uart2.c: 100:         uart2RxLastError.ferr = 1;
  5902   00E4AA  8258               	bsf	_uart2RxLastError^0,1,c	;volatile
  5903   00E4AC                     
  5904                           ; BSR set to: 61
  5905                           ;uart2.c: 101:         UART2_FramingErrorHandler();
  5906   00E4AC  D802               	call	u1838
  5907   00E4AE  EF63  F072         	goto	u1839
  5908   00E4B2                     u1838:
  5909   00E4B2  0005               	push	
  5910   00E4B4  6EFA               	movwf	pclath,c
  5911   00E4B6  0100               	movlb	0	; () banked
  5912   00E4B8  51A6               	movf	_UART2_FramingErrorHandler& (0+255),w,b
  5913   00E4BA  6EFD               	movwf	tosl,c
  5914   00E4BC  51A7               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
  5915   00E4BE  6EFE               	movwf	tosh,c
  5916   00E4C0  6AFF               	clrf	tosu,c
  5917   00E4C2  50FA               	movf	pclath,w,c
  5918   00E4C4  0012               	return		;indir
  5919   00E4C6                     u1839:
  5920   00E4C6                     l3213:
  5921                           
  5922                           ;uart2.c: 104:     if(U2ERRIRbits.RXFOIF){
  5923   00E4C6  013D               	movlb	61	; () banked
  5924   00E4C8  A3E1               	btfss	225,1,b	;volatile
  5925   00E4CA  EF69  F072         	goto	u1841
  5926   00E4CE  EF6B  F072         	goto	u1840
  5927   00E4D2                     u1841:
  5928   00E4D2  EF79  F072         	goto	l3219
  5929   00E4D6                     u1840:
  5930   00E4D6                     
  5931                           ; BSR set to: 61
  5932                           ;uart2.c: 105:         uart2RxLastError.oerr = 1;
  5933   00E4D6  8458               	bsf	_uart2RxLastError^0,2,c	;volatile
  5934   00E4D8                     
  5935                           ; BSR set to: 61
  5936                           ;uart2.c: 106:         UART2_OverrunErrorHandler();
  5937   00E4D8  D802               	call	u1858
  5938   00E4DA  EF79  F072         	goto	u1859
  5939   00E4DE                     u1858:
  5940   00E4DE  0005               	push	
  5941   00E4E0  6EFA               	movwf	pclath,c
  5942   00E4E2  0100               	movlb	0	; () banked
  5943   00E4E4  51A4               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
  5944   00E4E6  6EFD               	movwf	tosl,c
  5945   00E4E8  51A5               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
  5946   00E4EA  6EFE               	movwf	tosh,c
  5947   00E4EC  6AFF               	clrf	tosu,c
  5948   00E4EE  50FA               	movf	pclath,w,c
  5949   00E4F0  0012               	return		;indir
  5950   00E4F2                     u1859:
  5951   00E4F2                     l3219:
  5952                           
  5953                           ;uart2.c: 109:     if(uart2RxLastError.status){
  5954   00E4F2  5058               	movf	_uart2RxLastError^0,w,c	;volatile
  5955   00E4F4  B4D8               	btfsc	status,2,c
  5956   00E4F6  EF7F  F072         	goto	u1861
  5957   00E4FA  EF81  F072         	goto	u1860
  5958   00E4FE                     u1861:
  5959   00E4FE  EF8E  F072         	goto	l3223
  5960   00E502                     u1860:
  5961   00E502                     
  5962                           ;uart2.c: 110:         UART2_ErrorHandler();
  5963   00E502  D802               	call	u1878
  5964   00E504  EF8E  F072         	goto	u1879
  5965   00E508                     u1878:
  5966   00E508  0005               	push	
  5967   00E50A  6EFA               	movwf	pclath,c
  5968   00E50C  0100               	movlb	0	; () banked
  5969   00E50E  51A2               	movf	_UART2_ErrorHandler& (0+255),w,b
  5970   00E510  6EFD               	movwf	tosl,c
  5971   00E512  51A3               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
  5972   00E514  6EFE               	movwf	tosh,c
  5973   00E516  6AFF               	clrf	tosu,c
  5974   00E518  50FA               	movf	pclath,w,c
  5975   00E51A  0012               	return		;indir
  5976   00E51C                     u1879:
  5977   00E51C                     l3223:
  5978                           
  5979                           ;uart2.c: 112:     return U2RXB;
  5980   00E51C  013D               	movlb	61	; () banked
  5981   00E51E  51D0               	movf	208,w,b	;volatile
  5982   00E520                     
  5983                           ; BSR set to: 61
  5984   00E520  0012               	return		;funcret
  5985   00E522                     __end_of_UART2_Read:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
  5989 ;; Defined at:
  5990 ;;		line 135 in file "uart2.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		None
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_UART2_Initialize
  6014 ;;		_UART2_Read
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text27
  6019   00DB24                     __ptext27:
  6020                           	callstack 0
  6021   00DB24                     _UART2_DefaultOverrunErrorHandler:
  6022                           	callstack 29
  6023   00DB24  0012               	return		;funcret
  6024   00DB26                     __end_of_UART2_DefaultOverrunErrorHandler:
  6025                           	callstack 0
  6026                           
  6027 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
  6028 ;; Defined at:
  6029 ;;		line 133 in file "uart2.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      void 
  6036 ;; Registers used:
  6037 ;;		None
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used: 1
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_UART2_Initialize
  6053 ;;		_UART2_Read
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text28
  6058   00DB22                     __ptext28:
  6059                           	callstack 0
  6060   00DB22                     _UART2_DefaultFramingErrorHandler:
  6061                           	callstack 29
  6062   00DB22  0012               	return		;funcret
  6063   00DB24                     __end_of_UART2_DefaultFramingErrorHandler:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _UART2_DefaultErrorHandler *****************
  6067 ;; Defined at:
  6068 ;;		line 137 in file "uart2.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;		None
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		None
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;Total ram usage:        0 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_UART2_Initialize
  6092 ;;		_UART2_Read
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text29
  6097   00DB20                     __ptext29:
  6098                           	callstack 0
  6099   00DB20                     _UART2_DefaultErrorHandler:
  6100                           	callstack 29
  6101   00DB20  0012               	return		;funcret
  6102   00DB22                     __end_of_UART2_DefaultErrorHandler:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _Diagnostic_Menu *****************
  6106 ;; Defined at:
  6107 ;;		line 363 in file "robotmain.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; Hardware stack levels required when called: 6
  6128 ;; This function calls:
  6129 ;;		_printf
  6130 ;; This function is called by:
  6131 ;;		_main
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text30
  6136   00EA16                     __ptext30:
  6137                           	callstack 0
  6138   00EA16                     _Diagnostic_Menu:
  6139                           	callstack 24
  6140   00EA16                     
  6141                           ;robotmain.c: 365:     printf("\r\n");
  6142   00EA16  0EBF               	movlw	low (STR_88+44)
  6143   00EA18  6E23               	movwf	printf@fmt^0,c
  6144   00EA1A  0EFB               	movlw	high (STR_88+44)
  6145   00EA1C  6E24               	movwf	(printf@fmt+1)^0,c
  6146   00EA1E  EC2C  F06E         	call	_printf	;wreg free
  6147                           
  6148                           ;robotmain.c: 366:     printf("\t******************************\r\n");
  6149   00EA22  0E95               	movlw	low STR_64
  6150   00EA24  6E23               	movwf	printf@fmt^0,c
  6151   00EA26  0EFD               	movlw	high STR_64
  6152   00EA28  6E24               	movwf	(printf@fmt+1)^0,c
  6153   00EA2A  EC2C  F06E         	call	_printf	;wreg free
  6154                           
  6155                           ;robotmain.c: 367:     printf("\t*                            *\r\n");
  6156   00EA2E  0E2F               	movlw	low STR_65
  6157   00EA30  6E23               	movwf	printf@fmt^0,c
  6158   00EA32  0EFD               	movlw	high STR_65
  6159   00EA34  6E24               	movwf	(printf@fmt+1)^0,c
  6160   00EA36  EC2C  F06E         	call	_printf	;wreg free
  6161                           
  6162                           ;robotmain.c: 368:     printf("\t*   APSC 1299 - Pololu 3pi   *\r\n");
  6163   00EA3A  0E73               	movlw	low STR_66
  6164   00EA3C  6E23               	movwf	printf@fmt^0,c
  6165   00EA3E  0EFD               	movlw	high STR_66
  6166   00EA40  6E24               	movwf	(printf@fmt+1)^0,c
  6167   00EA42  EC2C  F06E         	call	_printf	;wreg free
  6168                           
  6169                           ;robotmain.c: 369:     printf("\t*      Diagnostic Menu       *\r\n");
  6170   00EA46  0E51               	movlw	low STR_67
  6171   00EA48  6E23               	movwf	printf@fmt^0,c
  6172   00EA4A  0EFD               	movlw	high STR_67
  6173   00EA4C  6E24               	movwf	(printf@fmt+1)^0,c
  6174   00EA4E  EC2C  F06E         	call	_printf	;wreg free
  6175                           
  6176                           ;robotmain.c: 370:     printf("\t*                            *\r\n");
  6177   00EA52  0E2F               	movlw	low STR_65
  6178   00EA54  6E23               	movwf	printf@fmt^0,c
  6179   00EA56  0EFD               	movlw	high STR_65
  6180   00EA58  6E24               	movwf	(printf@fmt+1)^0,c
  6181   00EA5A  EC2C  F06E         	call	_printf	;wreg free
  6182                           
  6183                           ;robotmain.c: 371:     printf("\t******************************\r\n");
  6184   00EA5E  0E95               	movlw	low STR_64
  6185   00EA60  6E23               	movwf	printf@fmt^0,c
  6186   00EA62  0EFD               	movlw	high STR_64
  6187   00EA64  6E24               	movwf	(printf@fmt+1)^0,c
  6188   00EA66  EC2C  F06E         	call	_printf	;wreg free
  6189                           
  6190                           ;robotmain.c: 372:     printf("\n\r");
  6191   00EA6A  0EA0               	movlw	low (STR_25+41)
  6192   00EA6C  6E23               	movwf	printf@fmt^0,c
  6193   00EA6E  0EFC               	movlw	high (STR_25+41)
  6194   00EA70  6E24               	movwf	(printf@fmt+1)^0,c
  6195   00EA72  EC2C  F06E         	call	_printf	;wreg free
  6196                           
  6197                           ;robotmain.c: 373:     printf("Command Key \t Description \r\n");
  6198   00EA76  0E11               	movlw	low STR_71
  6199   00EA78  6E23               	movwf	printf@fmt^0,c
  6200   00EA7A  0EFE               	movlw	high STR_71
  6201   00EA7C  6E24               	movwf	(printf@fmt+1)^0,c
  6202   00EA7E  EC2C  F06E         	call	_printf	;wreg free
  6203                           
  6204                           ;robotmain.c: 374:     printf("  c \t\t (c)alibrate sensors \r\n");
  6205   00EA82  0EB7               	movlw	low STR_72
  6206   00EA84  6E23               	movwf	printf@fmt^0,c
  6207   00EA86  0EFD               	movlw	high STR_72
  6208   00EA88  6E24               	movwf	(printf@fmt+1)^0,c
  6209   00EA8A  EC2C  F06E         	call	_printf	;wreg free
  6210                           
  6211                           ;robotmain.c: 375:     printf("  r \t\t (r)ead calibrated sensors \r\n");
  6212   00EA8E  0EA3               	movlw	low STR_73
  6213   00EA90  6E23               	movwf	printf@fmt^0,c
  6214   00EA92  0EFC               	movlw	high STR_73
  6215   00EA94  6E24               	movwf	(printf@fmt+1)^0,c
  6216   00EA96  EC2C  F06E         	call	_printf	;wreg free
  6217                           
  6218                           ;robotmain.c: 376:     printf("  d \t\t (d)isplay sensor x value \r\n");
  6219   00EA9A  0EEA               	movlw	low STR_74
  6220   00EA9C  6E23               	movwf	printf@fmt^0,c
  6221   00EA9E  0EFC               	movlw	high STR_74
  6222   00EAA0  6E24               	movwf	(printf@fmt+1)^0,c
  6223   00EAA2  EC2C  F06E         	call	_printf	;wreg free
  6224                           
  6225                           ;robotmain.c: 377:     printf("\r\n");
  6226   00EAA6  0EBF               	movlw	low (STR_88+44)
  6227   00EAA8  6E23               	movwf	printf@fmt^0,c
  6228   00EAAA  0EFB               	movlw	high (STR_88+44)
  6229   00EAAC  6E24               	movwf	(printf@fmt+1)^0,c
  6230   00EAAE  EC2C  F06E         	call	_printf	;wreg free
  6231                           
  6232                           ;robotmain.c: 378:     printf("  v \t\t (v)oltage - Read and display battery voltage \r\
      +                          n");
  6233   00EAB2  0E5C               	movlw	low STR_76
  6234   00EAB4  6E23               	movwf	printf@fmt^0,c
  6235   00EAB6  0EFB               	movlw	high STR_76
  6236   00EAB8  6E24               	movwf	(printf@fmt+1)^0,c
  6237   00EABA  EC2C  F06E         	call	_printf	;wreg free
  6238                           
  6239                           ;robotmain.c: 379:     printf("\r\n");
  6240   00EABE  0EBF               	movlw	low (STR_88+44)
  6241   00EAC0  6E23               	movwf	printf@fmt^0,c
  6242   00EAC2  0EFB               	movlw	high (STR_88+44)
  6243   00EAC4  6E24               	movwf	(printf@fmt+1)^0,c
  6244   00EAC6  EC2C  F06E         	call	_printf	;wreg free
  6245                           
  6246                           ;robotmain.c: 380:     printf("  F \t\t Wheels rotate (F)orward \r\n");
  6247   00EACA  0E0D               	movlw	low STR_78
  6248   00EACC  6E23               	movwf	printf@fmt^0,c
  6249   00EACE  0EFD               	movlw	high STR_78
  6250   00EAD0  6E24               	movwf	(printf@fmt+1)^0,c
  6251   00EAD2  EC2C  F06E         	call	_printf	;wreg free
  6252                           
  6253                           ;robotmain.c: 381:     printf("  B \t\t Wheels rotate (B)ackward \r\n");
  6254   00EAD6  0EC7               	movlw	low STR_79
  6255   00EAD8  6E23               	movwf	printf@fmt^0,c
  6256   00EADA  0EFC               	movlw	high STR_79
  6257   00EADC  6E24               	movwf	(printf@fmt+1)^0,c
  6258   00EADE  EC2C  F06E         	call	_printf	;wreg free
  6259                           
  6260                           ;robotmain.c: 382:     printf("  L \t\t (L)eft turn \r\n");
  6261   00EAE2  0EDE               	movlw	low STR_80
  6262   00EAE4  6E23               	movwf	printf@fmt^0,c
  6263   00EAE6  0EFE               	movlw	high STR_80
  6264   00EAE8  6E24               	movwf	(printf@fmt+1)^0,c
  6265   00EAEA  EC2C  F06E         	call	_printf	;wreg free
  6266                           
  6267                           ;robotmain.c: 383:     printf("  R \t\t (R)ight turn \r\n");
  6268   00EAEE  0EB0               	movlw	low STR_81
  6269   00EAF0  6E23               	movwf	printf@fmt^0,c
  6270   00EAF2  0EFE               	movlw	high STR_81
  6271   00EAF4  6E24               	movwf	(printf@fmt+1)^0,c
  6272   00EAF6  EC2C  F06E         	call	_printf	;wreg free
  6273                           
  6274                           ;robotmain.c: 384:     printf("  S \t\t (S)top motor \r\n");
  6275   00EAFA  0EC7               	movlw	low STR_82
  6276   00EAFC  6E23               	movwf	printf@fmt^0,c
  6277   00EAFE  0EFE               	movlw	high STR_82
  6278   00EB00  6E24               	movwf	(printf@fmt+1)^0,c
  6279   00EB02  EC2C  F06E         	call	_printf	;wreg free
  6280                           
  6281                           ;robotmain.c: 385:     printf("  T \t\t (T)est sensor run \r\n");
  6282   00EB06  0E4B               	movlw	low STR_83
  6283   00EB08  6E23               	movwf	printf@fmt^0,c
  6284   00EB0A  0EFE               	movlw	high STR_83
  6285   00EB0C  6E24               	movwf	(printf@fmt+1)^0,c
  6286   00EB0E  EC2C  F06E         	call	_printf	;wreg free
  6287                           
  6288                           ;robotmain.c: 386:     printf("\r\n");
  6289   00EB12  0EBF               	movlw	low (STR_88+44)
  6290   00EB14  6E23               	movwf	printf@fmt^0,c
  6291   00EB16  0EFB               	movlw	high (STR_88+44)
  6292   00EB18  6E24               	movwf	(printf@fmt+1)^0,c
  6293   00EB1A  EC2C  F06E         	call	_printf	;wreg free
  6294                           
  6295                           ;robotmain.c: 387:     printf("  m \t\t Refresh (m)enu \r\n");
  6296   00EB1E  0E67               	movlw	low STR_85
  6297   00EB20  6E23               	movwf	printf@fmt^0,c
  6298   00EB22  0EFE               	movlw	high STR_85
  6299   00EB24  6E24               	movwf	(printf@fmt+1)^0,c
  6300   00EB26  EC2C  F06E         	call	_printf	;wreg free
  6301                           
  6302                           ;robotmain.c: 388:     printf("\n\r");
  6303   00EB2A  0EA0               	movlw	low (STR_25+41)
  6304   00EB2C  6E23               	movwf	printf@fmt^0,c
  6305   00EB2E  0EFC               	movlw	high (STR_25+41)
  6306   00EB30  6E24               	movwf	(printf@fmt+1)^0,c
  6307   00EB32  EC2C  F06E         	call	_printf	;wreg free
  6308   00EB36  0012               	return		;funcret
  6309   00EB38                     __end_of_Diagnostic_Menu:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function _printf *****************
  6313 ;; Defined at:
  6314 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  6317 ;;		 -> STR_88(47), STR_87(3), STR_86(3), STR_85(25), 
  6318 ;;		 -> STR_84(3), STR_83(28), STR_82(23), STR_81(23), 
  6319 ;;		 -> STR_80(22), STR_79(35), STR_78(34), STR_77(3), 
  6320 ;;		 -> STR_76(55), STR_75(3), STR_74(35), STR_73(36), 
  6321 ;;		 -> STR_72(30), STR_71(29), STR_70(3), STR_69(34), 
  6322 ;;		 -> STR_68(34), STR_67(34), STR_66(34), STR_65(34), 
  6323 ;;		 -> STR_64(34), STR_63(3), STR_55(2), STR_54(19), 
  6324 ;;		 -> STR_51(3), STR_48(71), STR_47(45), STR_46(3), 
  6325 ;;		 -> STR_43(71), STR_42(45), STR_41(3), STR_38(46), 
  6326 ;;		 -> STR_37(3), STR_34(45), STR_33(3), STR_31(24), 
  6327 ;;		 -> STR_29(3), STR_26(19), STR_25(44), STR_24(3), 
  6328 ;;		 -> STR_23(2), STR_22(28), STR_21(3), STR_19(18), 
  6329 ;;		 -> STR_18(3), STR_14(24), STR_13(30), STR_12(18), 
  6330 ;;		 -> STR_11(29), STR_10(45), STR_9(30), STR_8(18), 
  6331 ;;		 -> STR_7(29), STR_6(45), STR_5(3), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  ret             2    0        int 
  6334 ;;  ap              1   40[COMRAM] PTR void [1]
  6335 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  2   34[COMRAM] int 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6345 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;Total ram usage:        7 bytes
  6350 ;; Hardware stack levels used: 1
  6351 ;; Hardware stack levels required when called: 5
  6352 ;; This function calls:
  6353 ;;		_vfprintf
  6354 ;; This function is called by:
  6355 ;;		_main
  6356 ;;		_Diagnostic_Menu
  6357 ;;		_Get_Number
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text31
  6362   00DC58                     __ptext31:
  6363                           	callstack 0
  6364   00DC58                     _printf:
  6365                           	callstack 25
  6366   00DC58  0E25               	movlw	low (?_printf+2)
  6367   00DC5A  6E29               	movwf	printf@ap^0,c
  6368   00DC5C  0E00               	movlw	0
  6369   00DC5E  6E1C               	movwf	vfprintf@fp^0,c
  6370   00DC60  0E00               	movlw	0
  6371   00DC62  6E1D               	movwf	(vfprintf@fp+1)^0,c
  6372   00DC64  C023  F01E         	movff	printf@fmt,vfprintf@fmt
  6373   00DC68  C024  F01F         	movff	printf@fmt+1,vfprintf@fmt+1
  6374   00DC6C  0E29               	movlw	low printf@ap
  6375   00DC6E  6E20               	movwf	vfprintf@ap^0,c
  6376   00DC70  EC58  F06F         	call	_vfprintf	;wreg free
  6377   00DC74  0012               	return		;funcret
  6378   00DC76                     __end_of_printf:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function _Countdown *****************
  6382 ;; Defined at:
  6383 ;;		line 441 in file "robotmain.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  time            1    wreg     unsigned char 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  time            1   69[COMRAM] unsigned char 
  6388 ;;  msg             9   58[COMRAM] unsigned char [9]
  6389 ;;  counts          2   67[COMRAM] unsigned int 
  6390 ;;  i               1   71[COMRAM] unsigned char 
  6391 ;;  length          1   70[COMRAM] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:       16 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; Hardware stack levels required when called: 6
  6408 ;; This function calls:
  6409 ;;		_LCD_Clear
  6410 ;;		_LCD_Position
  6411 ;;		_LCD_Print
  6412 ;;		_TMR0_Initialize
  6413 ;;		_TMR0_Read16BitTimer
  6414 ;;		_TMR0_StartTimer
  6415 ;;		_TMR0_StopTimer
  6416 ;;		_TMR0_Write16BitTimer
  6417 ;;		_sprintf
  6418 ;; This function is called by:
  6419 ;;		_main
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text32
  6424   00EB38                     __ptext32:
  6425                           	callstack 0
  6426   00EB38                     _Countdown:
  6427                           	callstack 24
  6428                           
  6429                           ;incstack = 0
  6430                           ;Countdown@time stored from wreg
  6431   00EB38  6E46               	movwf	Countdown@time^0,c
  6432   00EB3A                     
  6433                           ;robotmain.c: 441: void Countdown(char time);robotmain.c: 442: {;robotmain.c: 443:     c
      +                          har length, msg[9];;robotmain.c: 444:     char i = time;
  6434   00EB3A  C046  F048         	movff	Countdown@time,Countdown@i
  6435   00EB3E                     
  6436                           ;robotmain.c: 445:     unsigned int counts;;robotmain.c: 447:     LCD_Clear();
  6437   00EB3E  EC1E  F06E         	call	_LCD_Clear	;wreg free
  6438   00EB42                     
  6439                           ;robotmain.c: 448:     LCD_Print("Counting", 8);
  6440   00EB42  0EB4               	movlw	low STR_89
  6441   00EB44  6E02               	movwf	LCD_Print@str^0,c
  6442   00EB46  0EFF               	movlw	high STR_89
  6443   00EB48  6E03               	movwf	(LCD_Print@str+1)^0,c
  6444   00EB4A  0E08               	movlw	8
  6445   00EB4C  6E04               	movwf	LCD_Print@length^0,c
  6446   00EB4E  ECE0  F072         	call	_LCD_Print	;wreg free
  6447   00EB52                     
  6448                           ;robotmain.c: 449:     TMR0_Initialize(0x9F & 0x90, 0x5F & 0xEF & 0xF8);
  6449   00EB52  0E48               	movlw	72
  6450   00EB54  6E01               	movwf	TMR0_Initialize@TMR0control_1^0,c
  6451   00EB56  0E90               	movlw	144
  6452   00EB58  ECD7  F06D         	call	_TMR0_Initialize
  6453   00EB5C                     
  6454                           ;robotmain.c: 450:     TMR0_StartTimer();
  6455   00EB5C  EC94  F06D         	call	_TMR0_StartTimer	;wreg free
  6456   00EB60                     
  6457                           ;robotmain.c: 451:     LCD_Position(0,1);
  6458   00EB60  0E01               	movlw	1
  6459   00EB62  6E02               	movwf	LCD_Position@y^0,c
  6460   00EB64  0E00               	movlw	0
  6461   00EB66  ECD8  F06E         	call	_LCD_Position
  6462   00EB6A                     
  6463                           ;robotmain.c: 452:     length = sprintf(msg, "  %u s  ", i);
  6464   00EB6A  0E3B               	movlw	low Countdown@msg
  6465   00EB6C  6E23               	movwf	sprintf@s^0,c
  6466   00EB6E  0E63               	movlw	low STR_90
  6467   00EB70  6E24               	movwf	sprintf@fmt^0,c
  6468   00EB72  0EFF               	movlw	high STR_90
  6469   00EB74  6E25               	movwf	(sprintf@fmt+1)^0,c
  6470   00EB76  C048  F026         	movff	Countdown@i,?_sprintf+3
  6471   00EB7A  6A27               	clrf	(?_sprintf+4)^0,c
  6472   00EB7C  ECB3  F06E         	call	_sprintf	;wreg free
  6473   00EB80  5023               	movf	?_sprintf^0,w,c
  6474   00EB82  6E47               	movwf	Countdown@length^0,c
  6475   00EB84                     l3509:
  6476                           
  6477                           ;robotmain.c: 453:     LCD_Print(msg, length);
  6478   00EB84  0E3B               	movlw	low Countdown@msg
  6479   00EB86  6E02               	movwf	LCD_Print@str^0,c
  6480   00EB88  6A03               	clrf	(LCD_Print@str+1)^0,c
  6481   00EB8A  C047  F004         	movff	Countdown@length,LCD_Print@length
  6482   00EB8E  ECE0  F072         	call	_LCD_Print	;wreg free
  6483                           
  6484                           ;robotmain.c: 454:     while (i > 0)
  6485   00EB92  EF41  F076         	goto	l3539
  6486   00EB96                     l3511:
  6487                           
  6488                           ;robotmain.c: 455:     {;robotmain.c: 456:         counts = TMR0_Read16BitTimer();
  6489   00EB96  EC4A  F06E         	call	_TMR0_Read16BitTimer	;wreg free
  6490   00EB9A  C001  F044         	movff	?_TMR0_Read16BitTimer,Countdown@counts
  6491   00EB9E  C002  F045         	movff	?_TMR0_Read16BitTimer+1,Countdown@counts+1
  6492   00EBA2                     
  6493                           ;robotmain.c: 457:         if (counts >= 46875)
  6494   00EBA2  0E1B               	movlw	27
  6495   00EBA4  5C44               	subwf	Countdown@counts^0,w,c
  6496   00EBA6  0EB7               	movlw	183
  6497   00EBA8  5845               	subwfb	(Countdown@counts+1)^0,w,c
  6498   00EBAA  A0D8               	btfss	status,0,c
  6499   00EBAC  EFDA  F075         	goto	u2251
  6500   00EBB0  EFDC  F075         	goto	u2250
  6501   00EBB4                     u2251:
  6502   00EBB4  EF41  F076         	goto	l3539
  6503   00EBB8                     u2250:
  6504   00EBB8                     
  6505                           ;robotmain.c: 458:         {;robotmain.c: 459:             i--;
  6506   00EBB8  0648               	decf	Countdown@i^0,f,c
  6507   00EBBA                     
  6508                           ;robotmain.c: 460:             TMR0_Write16BitTimer(0);
  6509   00EBBA  0E00               	movlw	0
  6510   00EBBC  6E02               	movwf	(TMR0_Write16BitTimer@timerVal+1)^0,c
  6511   00EBBE  0E00               	movlw	0
  6512   00EBC0  6E01               	movwf	TMR0_Write16BitTimer@timerVal^0,c
  6513   00EBC2  ECBF  F06D         	call	_TMR0_Write16BitTimer	;wreg free
  6514                           
  6515                           ;robotmain.c: 461:             switch(i)
  6516   00EBC6  EF28  F076         	goto	l3537
  6517   00EBCA                     l3519:
  6518                           
  6519                           ;robotmain.c: 464:                     LCD_Clear();
  6520   00EBCA  EC1E  F06E         	call	_LCD_Clear	;wreg free
  6521                           
  6522                           ;robotmain.c: 465:                     LCD_Position(0,1);
  6523   00EBCE  0E01               	movlw	1
  6524   00EBD0  6E02               	movwf	LCD_Position@y^0,c
  6525   00EBD2  0E00               	movlw	0
  6526   00EBD4  ECD8  F06E         	call	_LCD_Position
  6527   00EBD8                     
  6528                           ;robotmain.c: 466:                     LCD_Print("   GO   ", 8);
  6529   00EBD8  0E24               	movlw	low STR_91
  6530   00EBDA  6E02               	movwf	LCD_Print@str^0,c
  6531   00EBDC  0EFF               	movlw	high STR_91
  6532   00EBDE  6E03               	movwf	(LCD_Print@str+1)^0,c
  6533   00EBE0  0E08               	movlw	8
  6534   00EBE2  6E04               	movwf	LCD_Print@length^0,c
  6535   00EBE4  ECE0  F072         	call	_LCD_Print	;wreg free
  6536                           
  6537                           ;robotmain.c: 467:                     break;
  6538   00EBE8  EF41  F076         	goto	l3539
  6539   00EBEC                     l3523:
  6540                           
  6541                           ;robotmain.c: 469:                     LCD_Position(0,1);
  6542   00EBEC  0E01               	movlw	1
  6543   00EBEE  6E02               	movwf	LCD_Position@y^0,c
  6544   00EBF0  0E00               	movlw	0
  6545   00EBF2  ECD8  F06E         	call	_LCD_Position
  6546   00EBF6                     
  6547                           ;robotmain.c: 470:                     LCD_Print("  SET   ", 8);
  6548   00EBF6  0E2D               	movlw	low STR_92
  6549   00EBF8  6E02               	movwf	LCD_Print@str^0,c
  6550   00EBFA  0EFF               	movlw	high STR_92
  6551   00EBFC  6E03               	movwf	(LCD_Print@str+1)^0,c
  6552   00EBFE  0E08               	movlw	8
  6553   00EC00  6E04               	movwf	LCD_Print@length^0,c
  6554   00EC02  ECE0  F072         	call	_LCD_Print	;wreg free
  6555                           
  6556                           ;robotmain.c: 471:                     break;
  6557   00EC06  EF41  F076         	goto	l3539
  6558   00EC0A                     l3527:
  6559                           
  6560                           ;robotmain.c: 473:                     LCD_Position(0,1);
  6561   00EC0A  0E01               	movlw	1
  6562   00EC0C  6E02               	movwf	LCD_Position@y^0,c
  6563   00EC0E  0E00               	movlw	0
  6564   00EC10  ECD8  F06E         	call	_LCD_Position
  6565   00EC14                     
  6566                           ;robotmain.c: 474:                     LCD_Print(" READY  ", 8);
  6567   00EC14  0E3F               	movlw	low STR_93
  6568   00EC16  6E02               	movwf	LCD_Print@str^0,c
  6569   00EC18  0EFF               	movlw	high STR_93
  6570   00EC1A  6E03               	movwf	(LCD_Print@str+1)^0,c
  6571   00EC1C  0E08               	movlw	8
  6572   00EC1E  6E04               	movwf	LCD_Print@length^0,c
  6573   00EC20  ECE0  F072         	call	_LCD_Print	;wreg free
  6574                           
  6575                           ;robotmain.c: 475:                     break;
  6576   00EC24  EF41  F076         	goto	l3539
  6577   00EC28                     l3531:
  6578                           
  6579                           ;robotmain.c: 477:                     LCD_Position(0,1);
  6580   00EC28  0E01               	movlw	1
  6581   00EC2A  6E02               	movwf	LCD_Position@y^0,c
  6582   00EC2C  0E00               	movlw	0
  6583   00EC2E  ECD8  F06E         	call	_LCD_Position
  6584   00EC32                     
  6585                           ;robotmain.c: 478:                     length = sprintf(msg, "  %u s  ", i);
  6586   00EC32  0E3B               	movlw	low Countdown@msg
  6587   00EC34  6E23               	movwf	sprintf@s^0,c
  6588   00EC36  0E63               	movlw	low STR_90
  6589   00EC38  6E24               	movwf	sprintf@fmt^0,c
  6590   00EC3A  0EFF               	movlw	high STR_90
  6591   00EC3C  6E25               	movwf	(sprintf@fmt+1)^0,c
  6592   00EC3E  C048  F026         	movff	Countdown@i,?_sprintf+3
  6593   00EC42  6A27               	clrf	(?_sprintf+4)^0,c
  6594   00EC44  ECB3  F06E         	call	_sprintf	;wreg free
  6595   00EC48  5023               	movf	?_sprintf^0,w,c
  6596   00EC4A  6E47               	movwf	Countdown@length^0,c
  6597   00EC4C  EFC2  F075         	goto	l3509
  6598   00EC50                     l3537:
  6599   00EC50  5048               	movf	Countdown@i^0,w,c
  6600   00EC52  6E39               	movwf	??_Countdown^0,c
  6601   00EC54  6A3A               	clrf	(??_Countdown+1)^0,c
  6602                           
  6603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6604                           ; Switch size 1, requested type "simple"
  6605                           ; Number of cases is 1, Range of values is 0 to 0
  6606                           ; switch strategies available:
  6607                           ; Name         Instructions Cycles
  6608                           ; simple_byte            4     3 (average)
  6609                           ;	Chosen strategy is simple_byte
  6610   00EC56  503A               	movf	(??_Countdown+1)^0,w,c
  6611   00EC58  0A00               	xorlw	0	; case 0
  6612   00EC5A  B4D8               	btfsc	status,2,c
  6613   00EC5C  EF32  F076         	goto	l4183
  6614   00EC60  EF14  F076         	goto	l3531
  6615   00EC64                     l4183:
  6616                           
  6617                           ; Switch size 1, requested type "simple"
  6618                           ; Number of cases is 3, Range of values is 0 to 2
  6619                           ; switch strategies available:
  6620                           ; Name         Instructions Cycles
  6621                           ; simple_byte           10     6 (average)
  6622                           ;	Chosen strategy is simple_byte
  6623   00EC64  5039               	movf	??_Countdown^0,w,c
  6624   00EC66  0A00               	xorlw	0	; case 0
  6625   00EC68  B4D8               	btfsc	status,2,c
  6626   00EC6A  EFE5  F075         	goto	l3519
  6627   00EC6E  0A01               	xorlw	1	; case 1
  6628   00EC70  B4D8               	btfsc	status,2,c
  6629   00EC72  EFF6  F075         	goto	l3523
  6630   00EC76  0A03               	xorlw	3	; case 2
  6631   00EC78  B4D8               	btfsc	status,2,c
  6632   00EC7A  EF05  F076         	goto	l3527
  6633   00EC7E  EF14  F076         	goto	l3531
  6634   00EC82                     l3539:
  6635                           
  6636                           ;robotmain.c: 454:     while (i > 0)
  6637   00EC82  5048               	movf	Countdown@i^0,w,c
  6638   00EC84  A4D8               	btfss	status,2,c
  6639   00EC86  EF47  F076         	goto	u2261
  6640   00EC8A  EF49  F076         	goto	u2260
  6641   00EC8E                     u2261:
  6642   00EC8E  EFCB  F075         	goto	l3511
  6643   00EC92                     u2260:
  6644   00EC92                     
  6645                           ;robotmain.c: 483:     TMR0_StopTimer();
  6646   00EC92  EC96  F06D         	call	_TMR0_StopTimer	;wreg free
  6647   00EC96  0012               	return		;funcret
  6648   00EC98                     __end_of_Countdown:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function _sprintf *****************
  6652 ;; Defined at:
  6653 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  s               1   34[COMRAM] PTR unsigned char 
  6656 ;;		 -> Countdown@msg(9), main@msg(9), 
  6657 ;;  fmt             2   35[COMRAM] PTR const unsigned char 
  6658 ;;		 -> STR_94(9), STR_90(9), STR_62(5), STR_59(6), 
  6659 ;;		 -> STR_57(6), STR_49(6), STR_44(6), STR_39(5), 
  6660 ;;		 -> STR_35(5), STR_30(6), STR_27(7), STR_2(6), 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  f              12   44[COMRAM] struct _IO_FILE
  6663 ;;  ret             2   41[COMRAM] int 
  6664 ;;  ap              1   43[COMRAM] PTR void [1]
  6665 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  2   34[COMRAM] int 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6675 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;Total ram usage:       22 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; Hardware stack levels required when called: 5
  6682 ;; This function calls:
  6683 ;;		_vfprintf
  6684 ;; This function is called by:
  6685 ;;		_main
  6686 ;;		_Countdown
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text33
  6691   00DD66                     __ptext33:
  6692                           	callstack 0
  6693   00DD66                     _sprintf:
  6694                           	callstack 25
  6695   00DD66  0E26               	movlw	low (?_sprintf+3)
  6696   00DD68  6E2C               	movwf	sprintf@ap^0,c
  6697   00DD6A  C023  F02D         	movff	sprintf@s,sprintf@f
  6698   00DD6E  0E00               	movlw	0
  6699   00DD70  6E31               	movwf	(sprintf@f+4)^0,c
  6700   00DD72  0E00               	movlw	0
  6701   00DD74  6E30               	movwf	(sprintf@f+3)^0,c
  6702   00DD76  0E00               	movlw	0
  6703   00DD78  6E38               	movwf	(sprintf@f+11)^0,c
  6704   00DD7A  0E00               	movlw	0
  6705   00DD7C  6E37               	movwf	(sprintf@f+10)^0,c
  6706   00DD7E  0E2D               	movlw	low sprintf@f
  6707   00DD80  6E1C               	movwf	vfprintf@fp^0,c
  6708   00DD82  6A1D               	clrf	(vfprintf@fp+1)^0,c
  6709   00DD84  C024  F01E         	movff	sprintf@fmt,vfprintf@fmt
  6710   00DD88  C025  F01F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6711   00DD8C  0E2C               	movlw	low sprintf@ap
  6712   00DD8E  6E20               	movwf	vfprintf@ap^0,c
  6713   00DD90  EC58  F06F         	call	_vfprintf	;wreg free
  6714   00DD94  C01C  F02A         	movff	?_vfprintf,sprintf@ret
  6715   00DD98  C01D  F02B         	movff	?_vfprintf+1,sprintf@ret+1
  6716   00DD9C  5023               	movf	sprintf@s^0,w,c
  6717   00DD9E  2430               	addwf	(sprintf@f+3)^0,w,c
  6718   00DDA0  6ED9               	movwf	fsr2l,c
  6719   00DDA2  6ADA               	clrf	fsr2h,c
  6720   00DDA4  6ADF               	clrf	indf2,c
  6721   00DDA6  C02A  F023         	movff	sprintf@ret,?_sprintf
  6722   00DDAA  C02B  F024         	movff	sprintf@ret+1,?_sprintf+1
  6723   00DDAE  0012               	return		;funcret
  6724   00DDB0                     __end_of_sprintf:
  6725                           	callstack 0
  6726                           
  6727 ;; *************** function _vfprintf *****************
  6728 ;; Defined at:
  6729 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6732 ;;		 -> NULL(0), sprintf@f(12), 
  6733 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  6734 ;;		 -> STR_94(9), STR_90(9), STR_88(47), STR_87(3), 
  6735 ;;		 -> STR_86(3), STR_85(25), STR_84(3), STR_83(28), 
  6736 ;;		 -> STR_82(23), STR_81(23), STR_80(22), STR_79(35), 
  6737 ;;		 -> STR_78(34), STR_77(3), STR_76(55), STR_75(3), 
  6738 ;;		 -> STR_74(35), STR_73(36), STR_72(30), STR_71(29), 
  6739 ;;		 -> STR_70(3), STR_69(34), STR_68(34), STR_67(34), 
  6740 ;;		 -> STR_66(34), STR_65(34), STR_64(34), STR_63(3), 
  6741 ;;		 -> STR_62(5), STR_59(6), STR_57(6), STR_55(2), 
  6742 ;;		 -> STR_54(19), STR_51(3), STR_49(6), STR_48(71), 
  6743 ;;		 -> STR_47(45), STR_46(3), STR_44(6), STR_43(71), 
  6744 ;;		 -> STR_42(45), STR_41(3), STR_39(5), STR_38(46), 
  6745 ;;		 -> STR_37(3), STR_35(5), STR_34(45), STR_33(3), 
  6746 ;;		 -> STR_31(24), STR_30(6), STR_29(3), STR_27(7), 
  6747 ;;		 -> STR_26(19), STR_25(44), STR_24(3), STR_23(2), 
  6748 ;;		 -> STR_22(28), STR_21(3), STR_19(18), STR_18(3), 
  6749 ;;		 -> STR_14(24), STR_13(30), STR_12(18), STR_11(29), 
  6750 ;;		 -> STR_10(45), STR_9(30), STR_8(18), STR_7(29), 
  6751 ;;		 -> STR_6(45), STR_5(3), STR_2(6), 
  6752 ;;  ap              1   31[COMRAM] PTR PTR void 
  6753 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  6756 ;;		 -> STR_94(9), STR_90(9), STR_88(47), STR_87(3), 
  6757 ;;		 -> STR_86(3), STR_85(25), STR_84(3), STR_83(28), 
  6758 ;;		 -> STR_82(23), STR_81(23), STR_80(22), STR_79(35), 
  6759 ;;		 -> STR_78(34), STR_77(3), STR_76(55), STR_75(3), 
  6760 ;;		 -> STR_74(35), STR_73(36), STR_72(30), STR_71(29), 
  6761 ;;		 -> STR_70(3), STR_69(34), STR_68(34), STR_67(34), 
  6762 ;;		 -> STR_66(34), STR_65(34), STR_64(34), STR_63(3), 
  6763 ;;		 -> STR_62(5), STR_59(6), STR_57(6), STR_55(2), 
  6764 ;;		 -> STR_54(19), STR_51(3), STR_49(6), STR_48(71), 
  6765 ;;		 -> STR_47(45), STR_46(3), STR_44(6), STR_43(71), 
  6766 ;;		 -> STR_42(45), STR_41(3), STR_39(5), STR_38(46), 
  6767 ;;		 -> STR_37(3), STR_35(5), STR_34(45), STR_33(3), 
  6768 ;;		 -> STR_31(24), STR_30(6), STR_29(3), STR_27(7), 
  6769 ;;		 -> STR_26(19), STR_25(44), STR_24(3), STR_23(2), 
  6770 ;;		 -> STR_22(28), STR_21(3), STR_19(18), STR_18(3), 
  6771 ;;		 -> STR_14(24), STR_13(30), STR_12(18), STR_11(29), 
  6772 ;;		 -> STR_10(45), STR_9(30), STR_8(18), STR_7(29), 
  6773 ;;		 -> STR_6(45), STR_5(3), STR_2(6), 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  2   27[COMRAM] int 
  6776 ;; Registers used:
  6777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6783 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;Total ram usage:        7 bytes
  6788 ;; Hardware stack levels used: 1
  6789 ;; Hardware stack levels required when called: 4
  6790 ;; This function calls:
  6791 ;;		_vfpfcnvrt
  6792 ;; This function is called by:
  6793 ;;		_sprintf
  6794 ;;		_printf
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text34
  6799   00DEB0                     __ptext34:
  6800                           	callstack 0
  6801   00DEB0                     _vfprintf:
  6802                           	callstack 25
  6803   00DEB0                     
  6804                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6805   00DEB0  C01E  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  6806   00DEB4  C01F  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6807   00DEB8                     
  6808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  6809   00DEB8  0E00               	movlw	0
  6810   00DEBA  6E52               	movwf	(_nout+1)^0,c
  6811   00DEBC  0E00               	movlw	0
  6812   00DEBE  6E51               	movwf	_nout^0,c
  6813                           
  6814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6815   00DEC0  EF70  F06F         	goto	l3257
  6816   00DEC4                     l3255:
  6817                           
  6818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  6819   00DEC4  C01C  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6820   00DEC8  C01D  F00D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6821   00DECC  0E21               	movlw	low vfprintf@cfmt
  6822   00DECE  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  6823   00DED0  C020  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  6824   00DED4  EC4C  F076         	call	_vfpfcnvrt	;wreg free
  6825   00DED8  500C               	movf	?_vfpfcnvrt^0,w,c
  6826   00DEDA  2651               	addwf	_nout^0,f,c
  6827   00DEDC  500D               	movf	(?_vfpfcnvrt+1)^0,w,c
  6828   00DEDE  2252               	addwfc	(_nout+1)^0,f,c
  6829   00DEE0                     l3257:
  6830                           
  6831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6832   00DEE0  0060  F087  FFF6   	movff	vfprintf@cfmt,tblptrl
  6833   00DEE6  0060  F08B  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  6834   00DEEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6835   00DEEC  6AF8               	clrf	tblptru,c
  6836   00DEEE                     	endif
  6837   00DEEE                     	if	0	;tblptru may be non-zero
  6838   00DEEE                     	endif
  6839   00DEEE  0008               	tblrd		*
  6840   00DEF0  50F5               	movf	tablat,w,c
  6841   00DEF2  0900               	iorlw	0
  6842   00DEF4  A4D8               	btfss	status,2,c
  6843   00DEF6  EF7F  F06F         	goto	u1931
  6844   00DEFA  EF81  F06F         	goto	u1930
  6845   00DEFE                     u1931:
  6846   00DEFE  EF62  F06F         	goto	l3255
  6847   00DF02                     u1930:
  6848   00DF02                     
  6849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  6850   00DF02  C051  F01C         	movff	_nout,?_vfprintf
  6851   00DF06  C052  F01D         	movff	_nout+1,?_vfprintf+1
  6852   00DF0A  0012               	return		;funcret
  6853   00DF0C                     __end_of_vfprintf:
  6854                           	callstack 0
  6855                           
  6856 ;; *************** function _vfpfcnvrt *****************
  6857 ;; Defined at:
  6858 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6861 ;;		 -> NULL(0), sprintf@f(12), 
  6862 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  6863 ;;		 -> vfprintf@cfmt(2), 
  6864 ;;  ap              1   14[COMRAM] PTR PTR void 
  6865 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  convarg         4   22[COMRAM] struct .
  6868 ;;  cp              2   20[COMRAM] PTR unsigned char 
  6869 ;;		 -> STR_94(9), STR_90(9), STR_88(47), STR_87(3), 
  6870 ;;		 -> STR_86(3), STR_85(25), STR_84(3), STR_83(28), 
  6871 ;;		 -> STR_82(23), STR_81(23), STR_80(22), STR_79(35), 
  6872 ;;		 -> STR_78(34), STR_77(3), STR_76(55), STR_75(3), 
  6873 ;;		 -> STR_74(35), STR_73(36), STR_72(30), STR_71(29), 
  6874 ;;		 -> STR_70(3), STR_69(34), STR_68(34), STR_67(34), 
  6875 ;;		 -> STR_66(34), STR_65(34), STR_64(34), STR_63(3), 
  6876 ;;		 -> STR_62(5), STR_59(6), STR_57(6), STR_55(2), 
  6877 ;;		 -> STR_54(19), STR_51(3), STR_49(6), STR_48(71), 
  6878 ;;		 -> STR_47(45), STR_46(3), STR_44(6), STR_43(71), 
  6879 ;;		 -> STR_42(45), STR_41(3), STR_39(5), STR_38(46), 
  6880 ;;		 -> STR_37(3), STR_35(5), STR_34(45), STR_33(3), 
  6881 ;;		 -> STR_31(24), STR_30(6), STR_29(3), STR_27(7), 
  6882 ;;		 -> STR_26(19), STR_25(44), STR_24(3), STR_23(2), 
  6883 ;;		 -> STR_22(28), STR_21(3), STR_19(18), STR_18(3), 
  6884 ;;		 -> STR_14(24), STR_13(30), STR_12(18), STR_11(29), 
  6885 ;;		 -> STR_10(45), STR_9(30), STR_8(18), STR_7(29), 
  6886 ;;		 -> STR_6(45), STR_5(3), STR_2(6), 
  6887 ;;  cnt             2   18[COMRAM] int 
  6888 ;;  c               1   26[COMRAM] unsigned char 
  6889 ;;  done            1   17[COMRAM] _Bool 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  2   11[COMRAM] int 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:       16 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 3
  6906 ;; This function calls:
  6907 ;;		___awdiv
  6908 ;;		___awmod
  6909 ;;		___lwdiv
  6910 ;;		___lwmod
  6911 ;;		_abs
  6912 ;;		_fputc
  6913 ;; This function is called by:
  6914 ;;		_vfprintf
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text35
  6919   00EC98                     __ptext35:
  6920                           	callstack 0
  6921   00EC98                     _vfpfcnvrt:
  6922                           	callstack 25
  6923   00EC98                     
  6924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  6925   00EC98  0E00               	movlw	0
  6926   00EC9A  6E14               	movwf	(vfpfcnvrt@cnt+1)^0,c
  6927   00EC9C  0E00               	movlw	0
  6928   00EC9E  6E13               	movwf	vfpfcnvrt@cnt^0,c
  6929   00ECA0                     
  6930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  6931   00ECA0  500E               	movf	vfpfcnvrt@fmt^0,w,c
  6932   00ECA2  6ED9               	movwf	fsr2l,c
  6933   00ECA4  6ADA               	clrf	fsr2h,c
  6934   00ECA6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6935   00ECAC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6936   00ECB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6937   00ECB2  6AF8               	clrf	tblptru,c
  6938   00ECB4                     	endif
  6939   00ECB4                     	if	0	;tblptru may be non-zero
  6940   00ECB4                     	endif
  6941   00ECB4  0008               	tblrd		*
  6942   00ECB6  50F5               	movf	tablat,w,c
  6943   00ECB8  0A25               	xorlw	37
  6944   00ECBA  A4D8               	btfss	status,2,c
  6945   00ECBC  EF62  F076         	goto	u1661
  6946   00ECC0  EF64  F076         	goto	u1660
  6947   00ECC4                     u1661:
  6948   00ECC4  EFE0  F077         	goto	l3187
  6949   00ECC8                     u1660:
  6950   00ECC8                     
  6951                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6952   00ECC8  500E               	movf	vfpfcnvrt@fmt^0,w,c
  6953   00ECCA  6ED9               	movwf	fsr2l,c
  6954   00ECCC  6ADA               	clrf	fsr2h,c
  6955   00ECCE  2ADE               	incf	postinc2,f,c
  6956   00ECD0  0E00               	movlw	0
  6957   00ECD2  22DD               	addwfc	postdec2,f,c
  6958   00ECD4                     
  6959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6960   00ECD4  0E00               	movlw	0
  6961   00ECD6  6E54               	movwf	(_width+1)^0,c
  6962   00ECD8  0E00               	movlw	0
  6963   00ECDA  6E53               	movwf	_width^0,c
  6964   00ECDC  C053  F057         	movff	_width,_flags
  6965   00ECE0                     
  6966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6967   00ECE0  6855               	setf	_prec^0,c
  6968   00ECE2  6856               	setf	(_prec+1)^0,c
  6969   00ECE4                     
  6970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6971   00ECE4  500E               	movf	vfpfcnvrt@fmt^0,w,c
  6972   00ECE6  6ED9               	movwf	fsr2l,c
  6973   00ECE8  6ADA               	clrf	fsr2h,c
  6974   00ECEA  006F FF78  F015    	movff	postinc2,vfpfcnvrt@cp
  6975   00ECF0  006F FF74  F016    	movff	postdec2,vfpfcnvrt@cp+1
  6976   00ECF6                     
  6977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6978   00ECF6  0060  F057  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6979   00ECFC  0060  F05B  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6980   00ED02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6981   00ED02  6AF8               	clrf	tblptru,c
  6982   00ED04                     	endif
  6983   00ED04                     	if	0	;tblptru may be non-zero
  6984   00ED04                     	endif
  6985   00ED04  0008               	tblrd		*
  6986   00ED06  50F5               	movf	tablat,w,c
  6987   00ED08  0A64               	xorlw	100
  6988   00ED0A  B4D8               	btfsc	status,2,c
  6989   00ED0C  EF8A  F076         	goto	u1671
  6990   00ED10  EF8C  F076         	goto	u1670
  6991   00ED14                     u1671:
  6992   00ED14  EF9D  F076         	goto	l3123
  6993   00ED18                     u1670:
  6994   00ED18  0060  F057  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  6995   00ED1E  0060  F05B  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  6996   00ED24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6997   00ED24  6AF8               	clrf	tblptru,c
  6998   00ED26                     	endif
  6999   00ED26                     	if	0	;tblptru may be non-zero
  7000   00ED26                     	endif
  7001   00ED26  0008               	tblrd		*
  7002   00ED28  50F5               	movf	tablat,w,c
  7003   00ED2A  0A69               	xorlw	105
  7004   00ED2C  A4D8               	btfss	status,2,c
  7005   00ED2E  EF9B  F076         	goto	u1681
  7006   00ED32  EF9D  F076         	goto	u1680
  7007   00ED36                     u1681:
  7008   00ED36  EF39  F077         	goto	l3153
  7009   00ED3A                     u1680:
  7010   00ED3A                     l3123:
  7011                           
  7012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7013   00ED3A  500F               	movf	vfpfcnvrt@ap^0,w,c
  7014   00ED3C  6ED9               	movwf	fsr2l,c
  7015   00ED3E  6ADA               	clrf	fsr2h,c
  7016   00ED40  0E02               	movlw	2
  7017   00ED42  26DF               	addwf	indf2,f,c
  7018   00ED44  5CDF               	subwf	indf2,w,c
  7019   00ED46  6ED9               	movwf	fsr2l,c
  7020   00ED48  6ADA               	clrf	fsr2h,c
  7021   00ED4A  006F FF78  F017    	movff	postinc2,vfpfcnvrt@convarg
  7022   00ED50  006F FF78  F018    	movff	postinc2,vfpfcnvrt@convarg+1
  7023   00ED56                     
  7024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7025   00ED56  0E01               	movlw	1
  7026   00ED58  2415               	addwf	vfpfcnvrt@cp^0,w,c
  7027   00ED5A  6E10               	movwf	??_vfpfcnvrt^0,c
  7028   00ED5C  0E00               	movlw	0
  7029   00ED5E  2016               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  7030   00ED60  6E11               	movwf	(??_vfpfcnvrt+1)^0,c
  7031   00ED62  500E               	movf	vfpfcnvrt@fmt^0,w,c
  7032   00ED64  6ED9               	movwf	fsr2l,c
  7033   00ED66  6ADA               	clrf	fsr2h,c
  7034   00ED68  0060  F043  FFDE   	movff	??_vfpfcnvrt,postinc2
  7035   00ED6E  0060  F047  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  7036   00ED74                     
  7037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  7038   00ED74  0E20               	movlw	32
  7039   00ED76  6E1B               	movwf	vfpfcnvrt@c^0,c
  7040                           
  7041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  7042   00ED78  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  7043   00ED7A  EFC1  F076         	goto	u1691
  7044   00ED7E  EFC4  F076         	goto	u1690
  7045   00ED82                     u1691:
  7046   00ED82  0E01               	movlw	1
  7047   00ED84  EFC5  F076         	goto	u1700
  7048   00ED88                     u1690:
  7049   00ED88  0E00               	movlw	0
  7050   00ED8A                     u1700:
  7051   00ED8A  6E12               	movwf	vfpfcnvrt@done^0,c
  7052   00ED8C                     l3129:
  7053                           
  7054                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  7055   00ED8C  061B               	decf	vfpfcnvrt@c^0,f,c
  7056   00ED8E  501B               	movf	vfpfcnvrt@c^0,w,c
  7057   00ED90  0F60               	addlw	low _dbuf
  7058   00ED92  6ED9               	movwf	fsr2l,c
  7059   00ED94  6ADA               	clrf	fsr2h,c
  7060   00ED96  C017  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  7061   00ED9A  C018  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  7062   00ED9E  0E00               	movlw	0
  7063   00EDA0  6E04               	movwf	(___awmod@divisor+1)^0,c
  7064   00EDA2  0E0A               	movlw	10
  7065   00EDA4  6E03               	movwf	___awmod@divisor^0,c
  7066   00EDA6  EC30  F073         	call	___awmod	;wreg free
  7067   00EDAA  C001  F007         	movff	?___awmod,abs@a
  7068   00EDAE  C002  F008         	movff	?___awmod+1,abs@a+1
  7069   00EDB2  EC99  F06E         	call	_abs	;wreg free
  7070   00EDB6  5007               	movf	?_abs^0,w,c
  7071   00EDB8  0F30               	addlw	48
  7072   00EDBA  6EDF               	movwf	indf2,c
  7073   00EDBC                     
  7074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  7075   00EDBC  C017  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  7076   00EDC0  C018  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  7077   00EDC4  0E00               	movlw	0
  7078   00EDC6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7079   00EDC8  0E0A               	movlw	10
  7080   00EDCA  6E03               	movwf	___awdiv@divisor^0,c
  7081   00EDCC  EC43  F074         	call	___awdiv	;wreg free
  7082   00EDD0  C001  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  7083   00EDD4  C002  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  7084   00EDD8                     
  7085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  7086   00EDD8  4A13               	infsnz	vfpfcnvrt@cnt^0,f,c
  7087   00EDDA  2A14               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  7088   00EDDC                     
  7089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  7090   00EDDC  5017               	movf	vfpfcnvrt@convarg^0,w,c
  7091   00EDDE  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  7092   00EDE0  B4D8               	btfsc	status,2,c
  7093   00EDE2  EFF5  F076         	goto	u1711
  7094   00EDE6  EFF7  F076         	goto	u1710
  7095   00EDEA                     u1711:
  7096   00EDEA  EFFF  F076         	goto	l3139
  7097   00EDEE                     u1710:
  7098   00EDEE  501B               	movf	vfpfcnvrt@c^0,w,c
  7099   00EDF0  A4D8               	btfss	status,2,c
  7100   00EDF2  EFFD  F076         	goto	u1721
  7101   00EDF6  EFFF  F076         	goto	u1720
  7102   00EDFA                     u1721:
  7103   00EDFA  EFC6  F076         	goto	l3129
  7104   00EDFE                     u1720:
  7105   00EDFE                     l3139:
  7106                           
  7107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  7108   00EDFE  501B               	movf	vfpfcnvrt@c^0,w,c
  7109   00EE00  B4D8               	btfsc	status,2,c
  7110   00EE02  EF05  F077         	goto	u1731
  7111   00EE06  EF07  F077         	goto	u1730
  7112   00EE0A                     u1731:
  7113   00EE0A  EF2A  F077         	goto	l3151
  7114   00EE0E                     u1730:
  7115   00EE0E  5012               	movf	vfpfcnvrt@done^0,w,c
  7116   00EE10  B4D8               	btfsc	status,2,c
  7117   00EE12  EF0D  F077         	goto	u1741
  7118   00EE16  EF0F  F077         	goto	u1740
  7119   00EE1A                     u1741:
  7120   00EE1A  EF2A  F077         	goto	l3151
  7121   00EE1E                     u1740:
  7122   00EE1E                     
  7123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  7124   00EE1E  061B               	decf	vfpfcnvrt@c^0,f,c
  7125   00EE20  501B               	movf	vfpfcnvrt@c^0,w,c
  7126   00EE22  0F60               	addlw	low _dbuf
  7127   00EE24  6ED9               	movwf	fsr2l,c
  7128   00EE26  6ADA               	clrf	fsr2h,c
  7129   00EE28  0E2D               	movlw	45
  7130   00EE2A  6EDF               	movwf	indf2,c
  7131   00EE2C                     
  7132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  7133   00EE2C  4A13               	infsnz	vfpfcnvrt@cnt^0,f,c
  7134   00EE2E  2A14               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  7135   00EE30  EF2A  F077         	goto	l3151
  7136   00EE34                     l3147:
  7137                           
  7138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  7139   00EE34  501B               	movf	vfpfcnvrt@c^0,w,c
  7140   00EE36  0F60               	addlw	low _dbuf
  7141   00EE38  6ED9               	movwf	fsr2l,c
  7142   00EE3A  6ADA               	clrf	fsr2h,c
  7143   00EE3C  50DF               	movf	indf2,w,c
  7144   00EE3E  6E10               	movwf	??_vfpfcnvrt^0,c
  7145   00EE40  5010               	movf	??_vfpfcnvrt^0,w,c
  7146   00EE42  6E03               	movwf	fputc@c^0,c
  7147   00EE44  6A04               	clrf	(fputc@c+1)^0,c
  7148   00EE46  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7149   00EE4A  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7150   00EE4E  ECE3  F073         	call	_fputc	;wreg free
  7151   00EE52  2A1B               	incf	vfpfcnvrt@c^0,f,c
  7152   00EE54                     l3151:
  7153                           
  7154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  7155   00EE54  0E20               	movlw	32
  7156   00EE56  181B               	xorwf	vfpfcnvrt@c^0,w,c
  7157   00EE58  A4D8               	btfss	status,2,c
  7158   00EE5A  EF31  F077         	goto	u1751
  7159   00EE5E  EF33  F077         	goto	u1750
  7160   00EE62                     u1751:
  7161   00EE62  EF1A  F077         	goto	l3147
  7162   00EE66                     u1750:
  7163   00EE66                     l1595:
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  7166   00EE66  C013  F00C         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  7167   00EE6A  C014  F00D         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  7168   00EE6E  EFFE  F077         	goto	l1596
  7169   00EE72                     l3153:
  7170   00EE72  0060  F057  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7171   00EE78  0060  F05B  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7172   00EE7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7173   00EE7E  6AF8               	clrf	tblptru,c
  7174   00EE80                     	endif
  7175   00EE80                     	if	0	;tblptru may be non-zero
  7176   00EE80                     	endif
  7177   00EE80  0008               	tblrd		*
  7178   00EE82  50F5               	movf	tablat,w,c
  7179   00EE84  0A75               	xorlw	117
  7180   00EE86  A4D8               	btfss	status,2,c
  7181   00EE88  EF48  F077         	goto	u1761
  7182   00EE8C  EF4A  F077         	goto	u1760
  7183   00EE90                     u1761:
  7184   00EE90  EFD4  F077         	goto	l3181
  7185   00EE94                     u1760:
  7186   00EE94                     
  7187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  7188   00EE94  500F               	movf	vfpfcnvrt@ap^0,w,c
  7189   00EE96  6ED9               	movwf	fsr2l,c
  7190   00EE98  6ADA               	clrf	fsr2h,c
  7191   00EE9A  0E02               	movlw	2
  7192   00EE9C  26DF               	addwf	indf2,f,c
  7193   00EE9E  5CDF               	subwf	indf2,w,c
  7194   00EEA0  6ED9               	movwf	fsr2l,c
  7195   00EEA2  6ADA               	clrf	fsr2h,c
  7196   00EEA4  006F FF78  F017    	movff	postinc2,vfpfcnvrt@convarg
  7197   00EEAA  006F FF78  F018    	movff	postinc2,vfpfcnvrt@convarg+1
  7198   00EEB0                     
  7199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  7200   00EEB0  0E01               	movlw	1
  7201   00EEB2  2415               	addwf	vfpfcnvrt@cp^0,w,c
  7202   00EEB4  6E10               	movwf	??_vfpfcnvrt^0,c
  7203   00EEB6  0E00               	movlw	0
  7204   00EEB8  2016               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  7205   00EEBA  6E11               	movwf	(??_vfpfcnvrt+1)^0,c
  7206   00EEBC  500E               	movf	vfpfcnvrt@fmt^0,w,c
  7207   00EEBE  6ED9               	movwf	fsr2l,c
  7208   00EEC0  6ADA               	clrf	fsr2h,c
  7209   00EEC2  0060  F043  FFDE   	movff	??_vfpfcnvrt,postinc2
  7210   00EEC8  0060  F047  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  7211                           
  7212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  7213   00EECE  EFBB  F077         	goto	l3179
  7214   00EED2                     l3159:
  7215                           
  7216                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  7217   00EED2  0E20               	movlw	32
  7218   00EED4  6E1B               	movwf	vfpfcnvrt@c^0,c
  7219   00EED6                     l3161:
  7220                           
  7221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  7222   00EED6  061B               	decf	vfpfcnvrt@c^0,f,c
  7223   00EED8  501B               	movf	vfpfcnvrt@c^0,w,c
  7224   00EEDA  0F60               	addlw	low _dbuf
  7225   00EEDC  6ED9               	movwf	fsr2l,c
  7226   00EEDE  6ADA               	clrf	fsr2h,c
  7227   00EEE0  C017  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  7228   00EEE4  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  7229   00EEE8  0E00               	movlw	0
  7230   00EEEA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  7231   00EEEC  0E0A               	movlw	10
  7232   00EEEE  6E03               	movwf	___lwmod@divisor^0,c
  7233   00EEF0  ECE5  F06F         	call	___lwmod	;wreg free
  7234   00EEF4  5001               	movf	?___lwmod^0,w,c
  7235   00EEF6  0F30               	addlw	48
  7236   00EEF8  6EDF               	movwf	indf2,c
  7237   00EEFA                     
  7238                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  7239   00EEFA  C017  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  7240   00EEFE  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  7241   00EF02  0E00               	movlw	0
  7242   00EF04  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  7243   00EF06  0E0A               	movlw	10
  7244   00EF08  6E03               	movwf	___lwdiv@divisor^0,c
  7245   00EF0A  ECEF  F070         	call	___lwdiv	;wreg free
  7246   00EF0E  C001  F017         	movff	?___lwdiv,vfpfcnvrt@convarg
  7247   00EF12  C002  F018         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  7248   00EF16                     
  7249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  7250   00EF16  4A13               	infsnz	vfpfcnvrt@cnt^0,f,c
  7251   00EF18  2A14               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  7252   00EF1A                     
  7253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  7254   00EF1A  5017               	movf	vfpfcnvrt@convarg^0,w,c
  7255   00EF1C  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  7256   00EF1E  B4D8               	btfsc	status,2,c
  7257   00EF20  EF94  F077         	goto	u1771
  7258   00EF24  EF96  F077         	goto	u1770
  7259   00EF28                     u1771:
  7260   00EF28  EFB0  F077         	goto	l3175
  7261   00EF2C                     u1770:
  7262   00EF2C  501B               	movf	vfpfcnvrt@c^0,w,c
  7263   00EF2E  A4D8               	btfss	status,2,c
  7264   00EF30  EF9C  F077         	goto	u1781
  7265   00EF34  EF9E  F077         	goto	u1780
  7266   00EF38                     u1781:
  7267   00EF38  EF6B  F077         	goto	l3161
  7268   00EF3C                     u1780:
  7269   00EF3C  EFB0  F077         	goto	l3175
  7270   00EF40                     l3171:
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  7273   00EF40  501B               	movf	vfpfcnvrt@c^0,w,c
  7274   00EF42  0F60               	addlw	low _dbuf
  7275   00EF44  6ED9               	movwf	fsr2l,c
  7276   00EF46  6ADA               	clrf	fsr2h,c
  7277   00EF48  50DF               	movf	indf2,w,c
  7278   00EF4A  6E10               	movwf	??_vfpfcnvrt^0,c
  7279   00EF4C  5010               	movf	??_vfpfcnvrt^0,w,c
  7280   00EF4E  6E03               	movwf	fputc@c^0,c
  7281   00EF50  6A04               	clrf	(fputc@c+1)^0,c
  7282   00EF52  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7283   00EF56  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7284   00EF5A  ECE3  F073         	call	_fputc	;wreg free
  7285   00EF5E  2A1B               	incf	vfpfcnvrt@c^0,f,c
  7286   00EF60                     l3175:
  7287                           
  7288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  7289   00EF60  0E20               	movlw	32
  7290   00EF62  181B               	xorwf	vfpfcnvrt@c^0,w,c
  7291   00EF64  A4D8               	btfss	status,2,c
  7292   00EF66  EFB7  F077         	goto	u1791
  7293   00EF6A  EFB9  F077         	goto	u1790
  7294   00EF6E                     u1791:
  7295   00EF6E  EFA0  F077         	goto	l3171
  7296   00EF72                     u1790:
  7297   00EF72  EF33  F077         	goto	l1595
  7298   00EF76                     l3179:
  7299   00EF76  0060  F057  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  7300   00EF7C  0060  F05B  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  7301   00EF82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7302   00EF82  6AF8               	clrf	tblptru,c
  7303   00EF84                     	endif
  7304   00EF84                     	if	0	;tblptru may be non-zero
  7305   00EF84                     	endif
  7306   00EF84  0008               	tblrd		*
  7307   00EF86  50F5               	movf	tablat,w,c
  7308   00EF88  6E10               	movwf	??_vfpfcnvrt^0,c
  7309   00EF8A  6A11               	clrf	(??_vfpfcnvrt+1)^0,c
  7310                           
  7311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7312                           ; Switch size 1, requested type "simple"
  7313                           ; Number of cases is 1, Range of values is 0 to 0
  7314                           ; switch strategies available:
  7315                           ; Name         Instructions Cycles
  7316                           ; simple_byte            4     3 (average)
  7317                           ;	Chosen strategy is simple_byte
  7318   00EF8C  5011               	movf	(??_vfpfcnvrt+1)^0,w,c
  7319   00EF8E  0A00               	xorlw	0	; case 0
  7320   00EF90  B4D8               	btfsc	status,2,c
  7321   00EF92  EFCD  F077         	goto	l4185
  7322   00EF96  EFD4  F077         	goto	l3181
  7323   00EF9A                     l4185:
  7324                           
  7325                           ; Switch size 1, requested type "simple"
  7326                           ; Number of cases is 1, Range of values is 117 to 117
  7327                           ; switch strategies available:
  7328                           ; Name         Instructions Cycles
  7329                           ; simple_byte            4     3 (average)
  7330                           ;	Chosen strategy is simple_byte
  7331   00EF9A  5010               	movf	??_vfpfcnvrt^0,w,c
  7332   00EF9C  0A75               	xorlw	117	; case 117
  7333   00EF9E  B4D8               	btfsc	status,2,c
  7334   00EFA0  EF69  F077         	goto	l3159
  7335   00EFA4  EFD4  F077         	goto	l3181
  7336   00EFA8                     l3181:
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7339   00EFA8  500E               	movf	vfpfcnvrt@fmt^0,w,c
  7340   00EFAA  6ED9               	movwf	fsr2l,c
  7341   00EFAC  6ADA               	clrf	fsr2h,c
  7342   00EFAE  2ADE               	incf	postinc2,f,c
  7343   00EFB0  0E00               	movlw	0
  7344   00EFB2  22DD               	addwfc	postdec2,f,c
  7345   00EFB4                     
  7346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  7347   00EFB4  0E00               	movlw	0
  7348   00EFB6  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  7349   00EFB8  0E00               	movlw	0
  7350   00EFBA  6E0C               	movwf	?_vfpfcnvrt^0,c
  7351   00EFBC  EFFE  F077         	goto	l1596
  7352   00EFC0                     l3187:
  7353                           
  7354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7355   00EFC0  500E               	movf	vfpfcnvrt@fmt^0,w,c
  7356   00EFC2  6ED9               	movwf	fsr2l,c
  7357   00EFC4  6ADA               	clrf	fsr2h,c
  7358   00EFC6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7359   00EFCC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7360   00EFD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7361   00EFD2  6AF8               	clrf	tblptru,c
  7362   00EFD4                     	endif
  7363   00EFD4                     	if	0	;tblptru may be non-zero
  7364   00EFD4                     	endif
  7365   00EFD4  0008               	tblrd		*
  7366   00EFD6  50F5               	movf	tablat,w,c
  7367   00EFD8  6E03               	movwf	fputc@c^0,c
  7368   00EFDA  6A04               	clrf	(fputc@c+1)^0,c
  7369   00EFDC  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7370   00EFE0  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7371   00EFE4  ECE3  F073         	call	_fputc	;wreg free
  7372   00EFE8                     
  7373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  7374   00EFE8  500E               	movf	vfpfcnvrt@fmt^0,w,c
  7375   00EFEA  6ED9               	movwf	fsr2l,c
  7376   00EFEC  6ADA               	clrf	fsr2h,c
  7377   00EFEE  2ADE               	incf	postinc2,f,c
  7378   00EFF0  0E00               	movlw	0
  7379   00EFF2  22DD               	addwfc	postdec2,f,c
  7380   00EFF4                     
  7381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  7382   00EFF4  0E00               	movlw	0
  7383   00EFF6  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  7384   00EFF8  0E01               	movlw	1
  7385   00EFFA  6E0C               	movwf	?_vfpfcnvrt^0,c
  7386   00EFFC                     l1596:
  7387   00EFFC  0012               	return		;funcret
  7388   00EFFE                     __end_of_vfpfcnvrt:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _fputc *****************
  7392 ;; Defined at:
  7393 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  c               2    2[COMRAM] int 
  7396 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  7397 ;;		 -> NULL(0), sprintf@f(12), 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  2    2[COMRAM] int 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:        9 bytes
  7414 ;; Hardware stack levels used: 1
  7415 ;; Hardware stack levels required when called: 2
  7416 ;; This function calls:
  7417 ;;		_putch
  7418 ;; This function is called by:
  7419 ;;		_vfpfcnvrt
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text36
  7424   00E7C6                     __ptext36:
  7425                           	callstack 0
  7426   00E7C6                     _fputc:
  7427                           	callstack 25
  7428   00E7C6  5005               	movf	fputc@fp^0,w,c
  7429   00E7C8  1006               	iorwf	(fputc@fp+1)^0,w,c
  7430   00E7CA  B4D8               	btfsc	status,2,c
  7431   00E7CC  EFEA  F073         	goto	u1611
  7432   00E7D0  EFEC  F073         	goto	u1610
  7433   00E7D4                     u1611:
  7434   00E7D4  EFF5  F073         	goto	l3093
  7435   00E7D8                     u1610:
  7436   00E7D8  5005               	movf	fputc@fp^0,w,c
  7437   00E7DA  1006               	iorwf	(fputc@fp+1)^0,w,c
  7438   00E7DC  A4D8               	btfss	status,2,c
  7439   00E7DE  EFF3  F073         	goto	u1621
  7440   00E7E2  EFF5  F073         	goto	u1620
  7441   00E7E6                     u1621:
  7442   00E7E6  EFFA  F073         	goto	l3095
  7443   00E7EA                     u1620:
  7444   00E7EA                     l3093:
  7445   00E7EA  5003               	movf	fputc@c^0,w,c
  7446   00E7EC  EC9C  F06D         	call	_putch
  7447   00E7F0  EF42  F074         	goto	l1634
  7448   00E7F4                     l3095:
  7449   00E7F4  EE20 F00A          	lfsr	2,10
  7450   00E7F8  5005               	movf	fputc@fp^0,w,c
  7451   00E7FA  26D9               	addwf	fsr2l,f,c
  7452   00E7FC  5006               	movf	(fputc@fp+1)^0,w,c
  7453   00E7FE  22DA               	addwfc	fsr2h,f,c
  7454   00E800  50DE               	movf	postinc2,w,c
  7455   00E802  10DE               	iorwf	postinc2,w,c
  7456   00E804  B4D8               	btfsc	status,2,c
  7457   00E806  EF07  F074         	goto	u1631
  7458   00E80A  EF09  F074         	goto	u1630
  7459   00E80E                     u1631:
  7460   00E80E  EF24  F074         	goto	l3099
  7461   00E812                     u1630:
  7462   00E812  EE20 F00A          	lfsr	2,10
  7463   00E816  5005               	movf	fputc@fp^0,w,c
  7464   00E818  26D9               	addwf	fsr2l,f,c
  7465   00E81A  5006               	movf	(fputc@fp+1)^0,w,c
  7466   00E81C  22DA               	addwfc	fsr2h,f,c
  7467   00E81E  EE10 F003          	lfsr	1,3
  7468   00E822  5005               	movf	fputc@fp^0,w,c
  7469   00E824  26E1               	addwf	fsr1l,f,c
  7470   00E826  5006               	movf	(fputc@fp+1)^0,w,c
  7471   00E828  22E2               	addwfc	fsr1h,f,c
  7472   00E82A  50DE               	movf	postinc2,w,c
  7473   00E82C  5CE6               	subwf	postinc1,w,c
  7474   00E82E  50E6               	movf	postinc1,w,c
  7475   00E830  0A80               	xorlw	128
  7476   00E832  6E0B               	movwf	(??_fputc+4)^0,c
  7477   00E834  50DE               	movf	postinc2,w,c
  7478   00E836  0A80               	xorlw	128
  7479   00E838  580B               	subwfb	(??_fputc+4)^0,w,c
  7480   00E83A  B0D8               	btfsc	status,0,c
  7481   00E83C  EF22  F074         	goto	u1641
  7482   00E840  EF24  F074         	goto	u1640
  7483   00E844                     u1641:
  7484   00E844  EF42  F074         	goto	l1634
  7485   00E848                     u1640:
  7486   00E848                     l3099:
  7487   00E848  EE20 F003          	lfsr	2,3
  7488   00E84C  5005               	movf	fputc@fp^0,w,c
  7489   00E84E  26D9               	addwf	fsr2l,f,c
  7490   00E850  5006               	movf	(fputc@fp+1)^0,w,c
  7491   00E852  22DA               	addwfc	fsr2h,f,c
  7492   00E854  50DF               	movf	indf2,w,c
  7493   00E856  6E07               	movwf	??_fputc^0,c
  7494   00E858  0060  F017  FFD9   	movff	fputc@fp,fsr2l
  7495   00E85E  0060  F01B  FFDA   	movff	fputc@fp+1,fsr2h
  7496   00E864  50DF               	movf	indf2,w,c
  7497   00E866  2407               	addwf	??_fputc^0,w,c
  7498   00E868  6ED9               	movwf	fsr2l,c
  7499   00E86A  6ADA               	clrf	fsr2h,c
  7500   00E86C  0060  F00F  FFDF   	movff	fputc@c,indf2
  7501   00E872  EE20 F003          	lfsr	2,3
  7502   00E876  5005               	movf	fputc@fp^0,w,c
  7503   00E878  26D9               	addwf	fsr2l,f,c
  7504   00E87A  5006               	movf	(fputc@fp+1)^0,w,c
  7505   00E87C  22DA               	addwfc	fsr2h,f,c
  7506   00E87E  2ADE               	incf	postinc2,f,c
  7507   00E880  0E00               	movlw	0
  7508   00E882  22DD               	addwfc	postdec2,f,c
  7509   00E884                     l1634:
  7510   00E884  0012               	return		;funcret
  7511   00E886                     __end_of_fputc:
  7512                           	callstack 0
  7513                           
  7514 ;; *************** function _putch *****************
  7515 ;; Defined at:
  7516 ;;		line 128 in file "uart2.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;  txData          1    wreg     unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  txData          1    1[COMRAM] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;Total ram usage:        1 bytes
  7535 ;; Hardware stack levels used: 1
  7536 ;; Hardware stack levels required when called: 1
  7537 ;; This function calls:
  7538 ;;		_UART2_Write
  7539 ;; This function is called by:
  7540 ;;		_fputc
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text37
  7545   00DB38                     __ptext37:
  7546                           	callstack 0
  7547   00DB38                     _putch:
  7548                           	callstack 25
  7549                           
  7550                           ;incstack = 0
  7551                           ;putch@txData stored from wreg
  7552   00DB38  6E02               	movwf	putch@txData^0,c
  7553   00DB3A                     
  7554                           ;uart2.c: 128: void putch(char txData);uart2.c: 129: {;uart2.c: 130:     UART2_Write(txD
      +                          ata);
  7555   00DB3A  5002               	movf	putch@txData^0,w,c
  7556   00DB3C  EC11  F06E         	call	_UART2_Write
  7557   00DB40  0012               	return		;funcret
  7558   00DB42                     __end_of_putch:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _UART2_Write *****************
  7562 ;; Defined at:
  7563 ;;		line 115 in file "uart2.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  txData          1    wreg     unsigned char 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  txData          1    0[COMRAM] unsigned char 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;Total ram usage:        1 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_Get_Key
  7587 ;;		_putch
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text38
  7592   00DC22                     __ptext38:
  7593                           	callstack 0
  7594   00DC22                     _UART2_Write:
  7595                           	callstack 25
  7596                           
  7597                           ;incstack = 0
  7598                           ;UART2_Write@txData stored from wreg
  7599   00DC22  6E01               	movwf	UART2_Write@txData^0,c
  7600   00DC24                     l756:
  7601                           
  7602                           ;uart2.c: 117:     while(0 == PIR6bits.U2TXIF)
  7603   00DC24  0139               	movlb	57	; () banked
  7604   00DC26  A7A6               	btfss	166,3,b	;volatile
  7605   00DC28  EF18  F06E         	goto	u1421
  7606   00DC2C  EF1A  F06E         	goto	u1420
  7607   00DC30                     u1421:
  7608   00DC30  EF12  F06E         	goto	l756
  7609   00DC34                     u1420:
  7610   00DC34                     
  7611                           ; BSR set to: 57
  7612                           ;uart2.c: 120:     U2TXB = txData;
  7613   00DC34  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  7614   00DC3A                     
  7615                           ; BSR set to: 57
  7616   00DC3A  0012               	return		;funcret
  7617   00DC3C                     __end_of_UART2_Write:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function _abs *****************
  7621 ;; Defined at:
  7622 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  a               2    6[COMRAM] int 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  2    6[COMRAM] int 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;Total ram usage:        4 bytes
  7641 ;; Hardware stack levels used: 1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_vfpfcnvrt
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text39
  7650   00DD32                     __ptext39:
  7651                           	callstack 0
  7652   00DD32                     _abs:
  7653                           	callstack 27
  7654   00DD32  BE08               	btfsc	(abs@a+1)^0,7,c
  7655   00DD34  EF9E  F06E         	goto	u1651
  7656   00DD38  EFA0  F06E         	goto	u1650
  7657   00DD3C                     u1651:
  7658   00DD3C  EFA6  F06E         	goto	l1619
  7659   00DD40                     u1650:
  7660   00DD40  C007  F007         	movff	abs@a,?_abs
  7661   00DD44  C008  F008         	movff	abs@a+1,?_abs+1
  7662   00DD48  EFB2  F06E         	goto	l1622
  7663   00DD4C                     l1619:
  7664   00DD4C  C007  F009         	movff	abs@a,??_abs
  7665   00DD50  C008  F00A         	movff	abs@a+1,??_abs+1
  7666   00DD54  1E09               	comf	??_abs^0,f,c
  7667   00DD56  1E0A               	comf	(??_abs+1)^0,f,c
  7668   00DD58  4A09               	infsnz	??_abs^0,f,c
  7669   00DD5A  2A0A               	incf	(??_abs+1)^0,f,c
  7670   00DD5C  C009  F007         	movff	??_abs,?_abs
  7671   00DD60  C00A  F008         	movff	??_abs+1,?_abs+1
  7672   00DD64                     l1622:
  7673   00DD64  0012               	return		;funcret
  7674   00DD66                     __end_of_abs:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function ___lwmod *****************
  7678 ;; Defined at:
  7679 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  dividend        2    0[COMRAM] unsigned int 
  7682 ;;  divisor         2    2[COMRAM] unsigned int 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  counter         1    4[COMRAM] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  2    0[COMRAM] unsigned int 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;Total ram usage:        5 bytes
  7699 ;; Hardware stack levels used: 1
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_vfpfcnvrt
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text40
  7708   00DFCA                     __ptext40:
  7709                           	callstack 0
  7710   00DFCA                     ___lwmod:
  7711                           	callstack 27
  7712   00DFCA  5003               	movf	___lwmod@divisor^0,w,c
  7713   00DFCC  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  7714   00DFCE  B4D8               	btfsc	status,2,c
  7715   00DFD0  EFEC  F06F         	goto	u1581
  7716   00DFD4  EFEE  F06F         	goto	u1580
  7717   00DFD8                     u1581:
  7718   00DFD8  EF12  F070         	goto	l1377
  7719   00DFDC                     u1580:
  7720   00DFDC  0E01               	movlw	1
  7721   00DFDE  6E05               	movwf	___lwmod@counter^0,c
  7722   00DFE0  EFF6  F06F         	goto	l3079
  7723   00DFE4                     l3077:
  7724   00DFE4  90D8               	bcf	status,0,c
  7725   00DFE6  3603               	rlcf	___lwmod@divisor^0,f,c
  7726   00DFE8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  7727   00DFEA  2A05               	incf	___lwmod@counter^0,f,c
  7728   00DFEC                     l3079:
  7729   00DFEC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  7730   00DFEE  EFFB  F06F         	goto	u1591
  7731   00DFF2  EFFD  F06F         	goto	u1590
  7732   00DFF6                     u1591:
  7733   00DFF6  EFF2  F06F         	goto	l3077
  7734   00DFFA                     u1590:
  7735   00DFFA                     l3081:
  7736   00DFFA  5003               	movf	___lwmod@divisor^0,w,c
  7737   00DFFC  5C01               	subwf	___lwmod@dividend^0,w,c
  7738   00DFFE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7739   00E000  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  7740   00E002  A0D8               	btfss	status,0,c
  7741   00E004  EF06  F070         	goto	u1601
  7742   00E008  EF08  F070         	goto	u1600
  7743   00E00C                     u1601:
  7744   00E00C  EF0C  F070         	goto	l3085
  7745   00E010                     u1600:
  7746   00E010  5003               	movf	___lwmod@divisor^0,w,c
  7747   00E012  5E01               	subwf	___lwmod@dividend^0,f,c
  7748   00E014  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7749   00E016  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  7750   00E018                     l3085:
  7751   00E018  90D8               	bcf	status,0,c
  7752   00E01A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  7753   00E01C  3203               	rrcf	___lwmod@divisor^0,f,c
  7754   00E01E  2E05               	decfsz	___lwmod@counter^0,f,c
  7755   00E020  EFFD  F06F         	goto	l3081
  7756   00E024                     l1377:
  7757   00E024  C001  F001         	movff	___lwmod@dividend,?___lwmod
  7758   00E028  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  7759   00E02C  0012               	return		;funcret
  7760   00E02E                     __end_of___lwmod:
  7761                           	callstack 0
  7762                           
  7763 ;; *************** function ___lwdiv *****************
  7764 ;; Defined at:
  7765 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  dividend        2    0[COMRAM] unsigned int 
  7768 ;;  divisor         2    2[COMRAM] unsigned int 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  quotient        2    4[COMRAM] unsigned int 
  7771 ;;  counter         1    6[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2    0[COMRAM] unsigned int 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;Total ram usage:        7 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_vfpfcnvrt
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text41
  7795   00E1DE                     __ptext41:
  7796                           	callstack 0
  7797   00E1DE                     ___lwdiv:
  7798                           	callstack 27
  7799   00E1DE  0E00               	movlw	0
  7800   00E1E0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7801   00E1E2  0E00               	movlw	0
  7802   00E1E4  6E05               	movwf	___lwdiv@quotient^0,c
  7803   00E1E6  5003               	movf	___lwdiv@divisor^0,w,c
  7804   00E1E8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7805   00E1EA  B4D8               	btfsc	status,2,c
  7806   00E1EC  EFFA  F070         	goto	u1551
  7807   00E1F0  EFFC  F070         	goto	u1550
  7808   00E1F4                     u1551:
  7809   00E1F4  EF24  F071         	goto	l1367
  7810   00E1F8                     u1550:
  7811   00E1F8  0E01               	movlw	1
  7812   00E1FA  6E07               	movwf	___lwdiv@counter^0,c
  7813   00E1FC  EF04  F071         	goto	l3059
  7814   00E200                     l3057:
  7815   00E200  90D8               	bcf	status,0,c
  7816   00E202  3603               	rlcf	___lwdiv@divisor^0,f,c
  7817   00E204  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7818   00E206  2A07               	incf	___lwdiv@counter^0,f,c
  7819   00E208                     l3059:
  7820   00E208  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7821   00E20A  EF09  F071         	goto	u1561
  7822   00E20E  EF0B  F071         	goto	u1560
  7823   00E212                     u1561:
  7824   00E212  EF00  F071         	goto	l3057
  7825   00E216                     u1560:
  7826   00E216                     l3061:
  7827   00E216  90D8               	bcf	status,0,c
  7828   00E218  3605               	rlcf	___lwdiv@quotient^0,f,c
  7829   00E21A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7830   00E21C  5003               	movf	___lwdiv@divisor^0,w,c
  7831   00E21E  5C01               	subwf	___lwdiv@dividend^0,w,c
  7832   00E220  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7833   00E222  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7834   00E224  A0D8               	btfss	status,0,c
  7835   00E226  EF17  F071         	goto	u1571
  7836   00E22A  EF19  F071         	goto	u1570
  7837   00E22E                     u1571:
  7838   00E22E  EF1E  F071         	goto	l3069
  7839   00E232                     u1570:
  7840   00E232  5003               	movf	___lwdiv@divisor^0,w,c
  7841   00E234  5E01               	subwf	___lwdiv@dividend^0,f,c
  7842   00E236  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7843   00E238  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7844   00E23A  8005               	bsf	___lwdiv@quotient^0,0,c
  7845   00E23C                     l3069:
  7846   00E23C  90D8               	bcf	status,0,c
  7847   00E23E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7848   00E240  3203               	rrcf	___lwdiv@divisor^0,f,c
  7849   00E242  2E07               	decfsz	___lwdiv@counter^0,f,c
  7850   00E244  EF0B  F071         	goto	l3061
  7851   00E248                     l1367:
  7852   00E248  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7853   00E24C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7854   00E250  0012               	return		;funcret
  7855   00E252                     __end_of___lwdiv:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function ___awmod *****************
  7859 ;; Defined at:
  7860 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  dividend        2    0[COMRAM] int 
  7863 ;;  divisor         2    2[COMRAM] int 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  sign            1    5[COMRAM] unsigned char 
  7866 ;;  counter         1    4[COMRAM] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  2    0[COMRAM] int 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        6 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_vfpfcnvrt
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text42
  7890   00E660                     __ptext42:
  7891                           	callstack 0
  7892   00E660                     ___awmod:
  7893                           	callstack 27
  7894   00E660  0E00               	movlw	0
  7895   00E662  6E06               	movwf	___awmod@sign^0,c
  7896   00E664  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7897   00E666  EF39  F073         	goto	u1490
  7898   00E66A  EF37  F073         	goto	u1491
  7899   00E66E                     u1491:
  7900   00E66E  EF3F  F073         	goto	l3023
  7901   00E672                     u1490:
  7902   00E672  6C01               	negf	___awmod@dividend^0,c
  7903   00E674  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7904   00E676  B0D8               	btfsc	status,0,c
  7905   00E678  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7906   00E67A  0E01               	movlw	1
  7907   00E67C  6E06               	movwf	___awmod@sign^0,c
  7908   00E67E                     l3023:
  7909   00E67E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7910   00E680  EF46  F073         	goto	u1500
  7911   00E684  EF44  F073         	goto	u1501
  7912   00E688                     u1501:
  7913   00E688  EF4A  F073         	goto	l3027
  7914   00E68C                     u1500:
  7915   00E68C  6C03               	negf	___awmod@divisor^0,c
  7916   00E68E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7917   00E690  B0D8               	btfsc	status,0,c
  7918   00E692  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7919   00E694                     l3027:
  7920   00E694  5003               	movf	___awmod@divisor^0,w,c
  7921   00E696  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7922   00E698  B4D8               	btfsc	status,2,c
  7923   00E69A  EF51  F073         	goto	u1511
  7924   00E69E  EF53  F073         	goto	u1510
  7925   00E6A2                     u1511:
  7926   00E6A2  EF77  F073         	goto	l3043
  7927   00E6A6                     u1510:
  7928   00E6A6  0E01               	movlw	1
  7929   00E6A8  6E05               	movwf	___awmod@counter^0,c
  7930   00E6AA  EF5B  F073         	goto	l3033
  7931   00E6AE                     l3031:
  7932   00E6AE  90D8               	bcf	status,0,c
  7933   00E6B0  3603               	rlcf	___awmod@divisor^0,f,c
  7934   00E6B2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7935   00E6B4  2A05               	incf	___awmod@counter^0,f,c
  7936   00E6B6                     l3033:
  7937   00E6B6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7938   00E6B8  EF60  F073         	goto	u1521
  7939   00E6BC  EF62  F073         	goto	u1520
  7940   00E6C0                     u1521:
  7941   00E6C0  EF57  F073         	goto	l3031
  7942   00E6C4                     u1520:
  7943   00E6C4                     l3035:
  7944   00E6C4  5003               	movf	___awmod@divisor^0,w,c
  7945   00E6C6  5C01               	subwf	___awmod@dividend^0,w,c
  7946   00E6C8  5004               	movf	(___awmod@divisor+1)^0,w,c
  7947   00E6CA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7948   00E6CC  A0D8               	btfss	status,0,c
  7949   00E6CE  EF6B  F073         	goto	u1531
  7950   00E6D2  EF6D  F073         	goto	u1530
  7951   00E6D6                     u1531:
  7952   00E6D6  EF71  F073         	goto	l3039
  7953   00E6DA                     u1530:
  7954   00E6DA  5003               	movf	___awmod@divisor^0,w,c
  7955   00E6DC  5E01               	subwf	___awmod@dividend^0,f,c
  7956   00E6DE  5004               	movf	(___awmod@divisor+1)^0,w,c
  7957   00E6E0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7958   00E6E2                     l3039:
  7959   00E6E2  90D8               	bcf	status,0,c
  7960   00E6E4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7961   00E6E6  3203               	rrcf	___awmod@divisor^0,f,c
  7962   00E6E8  2E05               	decfsz	___awmod@counter^0,f,c
  7963   00E6EA  EF62  F073         	goto	l3035
  7964   00E6EE                     l3043:
  7965   00E6EE  5006               	movf	___awmod@sign^0,w,c
  7966   00E6F0  B4D8               	btfsc	status,2,c
  7967   00E6F2  EF7D  F073         	goto	u1541
  7968   00E6F6  EF7F  F073         	goto	u1540
  7969   00E6FA                     u1541:
  7970   00E6FA  EF83  F073         	goto	l3047
  7971   00E6FE                     u1540:
  7972   00E6FE  6C01               	negf	___awmod@dividend^0,c
  7973   00E700  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7974   00E702  B0D8               	btfsc	status,0,c
  7975   00E704  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7976   00E706                     l3047:
  7977   00E706  C001  F001         	movff	___awmod@dividend,?___awmod
  7978   00E70A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7979   00E70E  0012               	return		;funcret
  7980   00E710                     __end_of___awmod:
  7981                           	callstack 0
  7982                           
  7983 ;; *************** function ___awdiv *****************
  7984 ;; Defined at:
  7985 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  dividend        2    0[COMRAM] int 
  7988 ;;  divisor         2    2[COMRAM] int 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  quotient        2    6[COMRAM] int 
  7991 ;;  sign            1    5[COMRAM] unsigned char 
  7992 ;;  counter         1    4[COMRAM] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  2    0[COMRAM] int 
  7995 ;; Registers used:
  7996 ;;		wreg, status,2, status,0
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;Total ram usage:        8 bytes
  8007 ;; Hardware stack levels used: 1
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_vfpfcnvrt
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text43
  8016   00E886                     __ptext43:
  8017                           	callstack 0
  8018   00E886                     ___awdiv:
  8019                           	callstack 27
  8020   00E886  0E00               	movlw	0
  8021   00E888  6E06               	movwf	___awdiv@sign^0,c
  8022   00E88A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8023   00E88C  EF4C  F074         	goto	u1430
  8024   00E890  EF4A  F074         	goto	u1431
  8025   00E894                     u1431:
  8026   00E894  EF52  F074         	goto	l2979
  8027   00E898                     u1430:
  8028   00E898  6C03               	negf	___awdiv@divisor^0,c
  8029   00E89A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8030   00E89C  B0D8               	btfsc	status,0,c
  8031   00E89E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8032   00E8A0  0E01               	movlw	1
  8033   00E8A2  6E06               	movwf	___awdiv@sign^0,c
  8034   00E8A4                     l2979:
  8035   00E8A4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8036   00E8A6  EF59  F074         	goto	u1440
  8037   00E8AA  EF57  F074         	goto	u1441
  8038   00E8AE                     u1441:
  8039   00E8AE  EF5F  F074         	goto	l2985
  8040   00E8B2                     u1440:
  8041   00E8B2  6C01               	negf	___awdiv@dividend^0,c
  8042   00E8B4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8043   00E8B6  B0D8               	btfsc	status,0,c
  8044   00E8B8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8045   00E8BA  0E01               	movlw	1
  8046   00E8BC  1A06               	xorwf	___awdiv@sign^0,f,c
  8047   00E8BE                     l2985:
  8048   00E8BE  0E00               	movlw	0
  8049   00E8C0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8050   00E8C2  0E00               	movlw	0
  8051   00E8C4  6E07               	movwf	___awdiv@quotient^0,c
  8052   00E8C6  5003               	movf	___awdiv@divisor^0,w,c
  8053   00E8C8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8054   00E8CA  B4D8               	btfsc	status,2,c
  8055   00E8CC  EF6A  F074         	goto	u1451
  8056   00E8D0  EF6C  F074         	goto	u1450
  8057   00E8D4                     u1451:
  8058   00E8D4  EF94  F074         	goto	l3007
  8059   00E8D8                     u1450:
  8060   00E8D8  0E01               	movlw	1
  8061   00E8DA  6E05               	movwf	___awdiv@counter^0,c
  8062   00E8DC  EF74  F074         	goto	l2993
  8063   00E8E0                     l2991:
  8064   00E8E0  90D8               	bcf	status,0,c
  8065   00E8E2  3603               	rlcf	___awdiv@divisor^0,f,c
  8066   00E8E4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8067   00E8E6  2A05               	incf	___awdiv@counter^0,f,c
  8068   00E8E8                     l2993:
  8069   00E8E8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8070   00E8EA  EF79  F074         	goto	u1461
  8071   00E8EE  EF7B  F074         	goto	u1460
  8072   00E8F2                     u1461:
  8073   00E8F2  EF70  F074         	goto	l2991
  8074   00E8F6                     u1460:
  8075   00E8F6                     l2995:
  8076   00E8F6  90D8               	bcf	status,0,c
  8077   00E8F8  3607               	rlcf	___awdiv@quotient^0,f,c
  8078   00E8FA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8079   00E8FC  5003               	movf	___awdiv@divisor^0,w,c
  8080   00E8FE  5C01               	subwf	___awdiv@dividend^0,w,c
  8081   00E900  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8082   00E902  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8083   00E904  A0D8               	btfss	status,0,c
  8084   00E906  EF87  F074         	goto	u1471
  8085   00E90A  EF89  F074         	goto	u1470
  8086   00E90E                     u1471:
  8087   00E90E  EF8E  F074         	goto	l3003
  8088   00E912                     u1470:
  8089   00E912  5003               	movf	___awdiv@divisor^0,w,c
  8090   00E914  5E01               	subwf	___awdiv@dividend^0,f,c
  8091   00E916  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8092   00E918  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8093   00E91A  8007               	bsf	___awdiv@quotient^0,0,c
  8094   00E91C                     l3003:
  8095   00E91C  90D8               	bcf	status,0,c
  8096   00E91E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8097   00E920  3203               	rrcf	___awdiv@divisor^0,f,c
  8098   00E922  2E05               	decfsz	___awdiv@counter^0,f,c
  8099   00E924  EF7B  F074         	goto	l2995
  8100   00E928                     l3007:
  8101   00E928  5006               	movf	___awdiv@sign^0,w,c
  8102   00E92A  B4D8               	btfsc	status,2,c
  8103   00E92C  EF9A  F074         	goto	u1481
  8104   00E930  EF9C  F074         	goto	u1480
  8105   00E934                     u1481:
  8106   00E934  EFA0  F074         	goto	l3011
  8107   00E938                     u1480:
  8108   00E938  6C07               	negf	___awdiv@quotient^0,c
  8109   00E93A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8110   00E93C  B0D8               	btfsc	status,0,c
  8111   00E93E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8112   00E940                     l3011:
  8113   00E940  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8114   00E944  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8115   00E948  0012               	return		;funcret
  8116   00E94A                     __end_of___awdiv:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function _TMR0_Write16BitTimer *****************
  8120 ;; Defined at:
  8121 ;;		line 78 in file "tmr0.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  timerVal        2    0[COMRAM] unsigned short 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;Total ram usage:        2 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_main
  8145 ;;		_Countdown
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text44
  8150   00DB7E                     __ptext44:
  8151                           	callstack 0
  8152   00DB7E                     _TMR0_Write16BitTimer:
  8153                           	callstack 30
  8154   00DB7E                     
  8155                           ;tmr0.c: 78: void TMR0_Write16BitTimer(uint16_t timerVal);tmr0.c: 79: {;tmr0.c: 81:     
      +                          TMR0H = timerVal >> 8;
  8156   00DB7E  5002               	movf	(TMR0_Write16BitTimer@timerVal+1)^0,w,c
  8157   00DB80  6EB7               	movwf	183,c	;volatile
  8158   00DB82                     
  8159                           ;tmr0.c: 82:     TMR0L = (uint8_t) timerVal;
  8160   00DB82  0060  F007  FFB6   	movff	TMR0_Write16BitTimer@timerVal,16310	;volatile
  8161   00DB88  0012               	return		;funcret
  8162   00DB8A                     __end_of_TMR0_Write16BitTimer:
  8163                           	callstack 0
  8164                           
  8165 ;; *************** function _TMR0_StopTimer *****************
  8166 ;; Defined at:
  8167 ;;		line 43 in file "tmr0.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;		None
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		None
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;Total ram usage:        0 bytes
  8186 ;; Hardware stack levels used: 1
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_main
  8191 ;;		_Countdown
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text45
  8196   00DB2C                     __ptext45:
  8197                           	callstack 0
  8198   00DB2C                     _TMR0_StopTimer:
  8199                           	callstack 30
  8200   00DB2C                     
  8201                           ;tmr0.c: 46:     T0CON0bits.T0EN = 0;
  8202   00DB2C  9EB8               	bcf	184,7,c	;volatile
  8203   00DB2E  0012               	return		;funcret
  8204   00DB30                     __end_of_TMR0_StopTimer:
  8205                           	callstack 0
  8206                           
  8207 ;; *************** function _TMR0_StartTimer *****************
  8208 ;; Defined at:
  8209 ;;		line 37 in file "tmr0.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		None
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_main
  8233 ;;		_Countdown
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text46
  8238   00DB28                     __ptext46:
  8239                           	callstack 0
  8240   00DB28                     _TMR0_StartTimer:
  8241                           	callstack 30
  8242   00DB28                     
  8243                           ;tmr0.c: 40:     T0CON0bits.T0EN = 1;
  8244   00DB28  8EB8               	bsf	184,7,c	;volatile
  8245   00DB2A  0012               	return		;funcret
  8246   00DB2C                     __end_of_TMR0_StartTimer:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function _TMR0_Read16BitTimer *****************
  8250 ;; Defined at:
  8251 ;;		line 59 in file "tmr0.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  readVal         2    4[COMRAM] unsigned short 
  8256 ;;  readValHigh     1    7[COMRAM] unsigned char 
  8257 ;;  readValLow      1    6[COMRAM] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  2    0[COMRAM] unsigned short 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;Total ram usage:        8 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_Countdown
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text47
  8281   00DC94                     __ptext47:
  8282                           	callstack 0
  8283   00DC94                     _TMR0_Read16BitTimer:
  8284                           	callstack 29
  8285   00DC94                     
  8286                           ;tmr0.c: 61:     uint16_t readVal;;tmr0.c: 62:     uint8_t readValLow;;tmr0.c: 63:     u
      +                          int8_t readValHigh;;tmr0.c: 65:     readValLow = TMR0L;
  8287   00DC94  006F FED8  F007    	movff	16310,TMR0_Read16BitTimer@readValLow	;volatile
  8288                           
  8289                           ;tmr0.c: 66:     readValHigh = TMR0H;
  8290   00DC9A  006F FEDC  F008    	movff	16311,TMR0_Read16BitTimer@readValHigh	;volatile
  8291   00DCA0                     
  8292                           ;tmr0.c: 67:     readVal = ((uint16_t)readValHigh << 8) + readValLow;
  8293   00DCA0  5008               	movf	TMR0_Read16BitTimer@readValHigh^0,w,c
  8294   00DCA2  6E03               	movwf	??_TMR0_Read16BitTimer^0,c
  8295   00DCA4  5007               	movf	TMR0_Read16BitTimer@readValLow^0,w,c
  8296   00DCA6  6E05               	movwf	TMR0_Read16BitTimer@readVal^0,c
  8297   00DCA8  C003  F006         	movff	??_TMR0_Read16BitTimer,TMR0_Read16BitTimer@readVal+1
  8298   00DCAC                     
  8299                           ;tmr0.c: 69:     return readVal;
  8300   00DCAC  C005  F001         	movff	TMR0_Read16BitTimer@readVal,?_TMR0_Read16BitTimer
  8301   00DCB0  C006  F002         	movff	TMR0_Read16BitTimer@readVal+1,?_TMR0_Read16BitTimer+1
  8302   00DCB4  0012               	return		;funcret
  8303   00DCB6                     __end_of_TMR0_Read16BitTimer:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _TMR0_Initialize *****************
  8307 ;; Defined at:
  8308 ;;		line 22 in file "tmr0.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  TMR0control_    1    wreg     unsigned char 
  8311 ;;  TMR0control_    1    0[COMRAM] unsigned char 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  TMR0control_    1    1[COMRAM] unsigned char 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      void 
  8316 ;; Registers used:
  8317 ;;		wreg
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8323 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;Total ram usage:        2 bytes
  8328 ;; Hardware stack levels used: 1
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_main
  8333 ;;		_Countdown
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text48
  8338   00DBAE                     __ptext48:
  8339                           	callstack 0
  8340   00DBAE                     _TMR0_Initialize:
  8341                           	callstack 30
  8342                           
  8343                           ;incstack = 0
  8344                           ;TMR0_Initialize@TMR0control_0 stored from wreg
  8345   00DBAE  6E02               	movwf	TMR0_Initialize@TMR0control_0^0,c
  8346   00DBB0                     
  8347                           ;tmr0.c: 22: void TMR0_Initialize(uint8_t TMR0control_0, uint8_t TMR0control_1);tmr0.c: 
      +                          23: {;tmr0.c: 25:     T0CON0 = TMR0control_0;
  8348   00DBB0  0060  F00B  FFB8   	movff	TMR0_Initialize@TMR0control_0,16312	;volatile
  8349   00DBB6                     
  8350                           ;tmr0.c: 28:     T0CON1 = TMR0control_1;
  8351   00DBB6  0060  F007  FFB9   	movff	TMR0_Initialize@TMR0control_1,16313	;volatile
  8352   00DBBC                     
  8353                           ;tmr0.c: 31:     T0CON0bits.T0EN = 0;
  8354   00DBBC  9EB8               	bcf	184,7,c	;volatile
  8355   00DBBE                     
  8356                           ;tmr0.c: 34:     PIR3bits.TMR0IF = 0;
  8357   00DBBE  0139               	movlb	57	; () banked
  8358   00DBC0  9FA3               	bcf	163,7,b	;volatile
  8359   00DBC2                     
  8360                           ; BSR set to: 57
  8361   00DBC2  0012               	return		;funcret
  8362   00DBC4                     __end_of_TMR0_Initialize:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function _LCD_Print *****************
  8366 ;; Defined at:
  8367 ;;		line 70 in file "pololu_robot.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  str             2    1[COMRAM] PTR unsigned char 
  8370 ;;		 -> STR_93(9), STR_92(9), STR_91(9), Countdown@msg(9), 
  8371 ;;		 -> STR_89(9), STR_61(9), STR_60(9), STR_58(9), 
  8372 ;;		 -> STR_56(9), STR_53(4), STR_52(8), STR_50(9), 
  8373 ;;		 -> STR_45(9), STR_40(9), STR_36(9), STR_32(9), 
  8374 ;;		 -> STR_28(9), STR_20(8), STR_17(8), STR_16(9), 
  8375 ;;		 -> STR_15(9), STR_4(9), STR_3(10), main@msg(9), 
  8376 ;;		 -> STR_1(9), 
  8377 ;;  length          1    3[COMRAM] unsigned char 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  i               1    6[COMRAM] unsigned char 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;Total ram usage:        6 bytes
  8394 ;; Hardware stack levels used: 1
  8395 ;; Hardware stack levels required when called: 1
  8396 ;; This function calls:
  8397 ;;		_UART1_Write
  8398 ;;		_UART1_is_tx_ready
  8399 ;; This function is called by:
  8400 ;;		_main
  8401 ;;		_Countdown
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text49
  8406   00E5C0                     __ptext49:
  8407                           	callstack 0
  8408   00E5C0                     _LCD_Print:
  8409                           	callstack 29
  8410   00E5C0                     
  8411                           ;pololu_robot.c: 70: void LCD_Print(char *str, char length);pololu_robot.c: 71: {;pololu
      +                          _robot.c: 72:     char i=0;
  8412   00E5C0  0E00               	movlw	0
  8413   00E5C2  6E07               	movwf	LCD_Print@i^0,c
  8414   00E5C4                     l3303:
  8415   00E5C4  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8416   00E5C8  0900               	iorlw	0
  8417   00E5CA  B4D8               	btfsc	status,2,c
  8418   00E5CC  EFEA  F072         	goto	u1981
  8419   00E5D0  EFEC  F072         	goto	u1980
  8420   00E5D4                     u1981:
  8421   00E5D4  EFE2  F072         	goto	l3303
  8422   00E5D8                     u1980:
  8423   00E5D8                     
  8424                           ;pololu_robot.c: 75:     UART1_Write(0xB8);
  8425   00E5D8  0EB8               	movlw	184
  8426   00E5DA  EC04  F06E         	call	_UART1_Write
  8427   00E5DE                     l3307:
  8428   00E5DE  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8429   00E5E2  0900               	iorlw	0
  8430   00E5E4  B4D8               	btfsc	status,2,c
  8431   00E5E6  EFF7  F072         	goto	u1991
  8432   00E5EA  EFF9  F072         	goto	u1990
  8433   00E5EE                     u1991:
  8434   00E5EE  EFEF  F072         	goto	l3307
  8435   00E5F2                     u1990:
  8436   00E5F2                     
  8437                           ;pololu_robot.c: 77:     UART1_Write(length);
  8438   00E5F2  5004               	movf	LCD_Print@length^0,w,c
  8439   00E5F4  EC04  F06E         	call	_UART1_Write
  8440                           
  8441                           ;pololu_robot.c: 78:     while (i<length)
  8442   00E5F8  EF26  F073         	goto	l3317
  8443   00E5FC                     l3311:
  8444                           
  8445                           ;pololu_robot.c: 79:     {;pololu_robot.c: 80:         if(UART1_is_tx_ready())
  8446   00E5FC  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8447   00E600  0900               	iorlw	0
  8448   00E602  B4D8               	btfsc	status,2,c
  8449   00E604  EF06  F073         	goto	u2001
  8450   00E608  EF08  F073         	goto	u2000
  8451   00E60C                     u2001:
  8452   00E60C  EF26  F073         	goto	l3317
  8453   00E610                     u2000:
  8454   00E610                     
  8455                           ;pololu_robot.c: 81:         {;pololu_robot.c: 82:             UART1_Write(str[i]);
  8456   00E610  5007               	movf	LCD_Print@i^0,w,c
  8457   00E612  2402               	addwf	LCD_Print@str^0,w,c
  8458   00E614  6E05               	movwf	??_LCD_Print^0,c
  8459   00E616  0E00               	movlw	0
  8460   00E618  2003               	addwfc	(LCD_Print@str+1)^0,w,c
  8461   00E61A  6E06               	movwf	(??_LCD_Print+1)^0,c
  8462   00E61C  0060  F017  FFF6   	movff	??_LCD_Print,tblptrl
  8463   00E622  0060  F01B  FFF7   	movff	??_LCD_Print+1,tblptrh
  8464   00E628  0E00               	movlw	low (__mediumconst shr (0+16))
  8465   00E62A  6EF8               	movwf	tblptru,c
  8466   00E62C  0E0F               	movlw	(high __ramtop+-1)
  8467   00E62E  64F7               	cpfsgt	tblptrh,c
  8468   00E630  D003               	bra	u2017
  8469   00E632  0008               	tblrd		*
  8470   00E634  50F5               	movf	tablat,w,c
  8471   00E636  D007               	bra	u2010
  8472   00E638                     u2017:
  8473   00E638  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8474   00E63E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8475   00E644  50E7               	movf	indf1,w,c
  8476   00E646                     u2010:
  8477   00E646  EC04  F06E         	call	_UART1_Write
  8478   00E64A                     
  8479                           ;pololu_robot.c: 83:             i++;
  8480   00E64A  2A07               	incf	LCD_Print@i^0,f,c
  8481   00E64C                     l3317:
  8482                           
  8483                           ;pololu_robot.c: 78:     while (i<length)
  8484   00E64C  5004               	movf	LCD_Print@length^0,w,c
  8485   00E64E  5C07               	subwf	LCD_Print@i^0,w,c
  8486   00E650  A0D8               	btfss	status,0,c
  8487   00E652  EF2D  F073         	goto	u2021
  8488   00E656  EF2F  F073         	goto	u2020
  8489   00E65A                     u2021:
  8490   00E65A  EFFE  F072         	goto	l3311
  8491   00E65E                     u2020:
  8492   00E65E  0012               	return		;funcret
  8493   00E660                     __end_of_LCD_Print:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _LCD_Position *****************
  8497 ;; Defined at:
  8498 ;;		line 98 in file "pololu_robot.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  x               1    wreg     unsigned char 
  8501 ;;  y               1    1[COMRAM] unsigned char 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  x               1    2[COMRAM] unsigned char 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8513 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;Total ram usage:        2 bytes
  8518 ;; Hardware stack levels used: 1
  8519 ;; Hardware stack levels required when called: 1
  8520 ;; This function calls:
  8521 ;;		_UART1_Write
  8522 ;;		_UART1_is_tx_ready
  8523 ;; This function is called by:
  8524 ;;		_main
  8525 ;;		_Countdown
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text50
  8530   00DDB0                     __ptext50:
  8531                           	callstack 0
  8532   00DDB0                     _LCD_Position:
  8533                           	callstack 29
  8534                           
  8535                           ;incstack = 0
  8536                           ;LCD_Position@x stored from wreg
  8537   00DDB0  6E03               	movwf	LCD_Position@x^0,c
  8538   00DDB2                     l3289:
  8539   00DDB2  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8540   00DDB6  0900               	iorlw	0
  8541   00DDB8  B4D8               	btfsc	status,2,c
  8542   00DDBA  EFE1  F06E         	goto	u1951
  8543   00DDBE  EFE3  F06E         	goto	u1950
  8544   00DDC2                     u1951:
  8545   00DDC2  EFD9  F06E         	goto	l3289
  8546   00DDC6                     u1950:
  8547   00DDC6                     
  8548                           ;pololu_robot.c: 101:     UART1_Write(0xB9);
  8549   00DDC6  0EB9               	movlw	185
  8550   00DDC8  EC04  F06E         	call	_UART1_Write
  8551   00DDCC                     l3293:
  8552   00DDCC  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8553   00DDD0  0900               	iorlw	0
  8554   00DDD2  B4D8               	btfsc	status,2,c
  8555   00DDD4  EFEE  F06E         	goto	u1961
  8556   00DDD8  EFF0  F06E         	goto	u1960
  8557   00DDDC                     u1961:
  8558   00DDDC  EFE6  F06E         	goto	l3293
  8559   00DDE0                     u1960:
  8560   00DDE0                     
  8561                           ;pololu_robot.c: 103:     UART1_Write(x);
  8562   00DDE0  5003               	movf	LCD_Position@x^0,w,c
  8563   00DDE2  EC04  F06E         	call	_UART1_Write
  8564   00DDE6                     l3297:
  8565   00DDE6  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8566   00DDEA  0900               	iorlw	0
  8567   00DDEC  B4D8               	btfsc	status,2,c
  8568   00DDEE  EFFB  F06E         	goto	u1971
  8569   00DDF2  EFFD  F06E         	goto	u1970
  8570   00DDF6                     u1971:
  8571   00DDF6  EFF3  F06E         	goto	l3297
  8572   00DDFA                     u1970:
  8573   00DDFA                     
  8574                           ;pololu_robot.c: 105:     UART1_Write(y);
  8575   00DDFA  5002               	movf	LCD_Position@y^0,w,c
  8576   00DDFC  EC04  F06E         	call	_UART1_Write
  8577   00DE00  0012               	return		;funcret
  8578   00DE02                     __end_of_LCD_Position:
  8579                           	callstack 0
  8580                           
  8581 ;; *************** function _LCD_Clear *****************
  8582 ;; Defined at:
  8583 ;;		line 64 in file "pololu_robot.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;Total ram usage:        0 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; Hardware stack levels required when called: 1
  8604 ;; This function calls:
  8605 ;;		_UART1_Write
  8606 ;;		_UART1_is_tx_ready
  8607 ;; This function is called by:
  8608 ;;		_main
  8609 ;;		_Countdown
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text51
  8614   00DC3C                     __ptext51:
  8615                           	callstack 0
  8616   00DC3C                     _LCD_Clear:
  8617                           	callstack 29
  8618   00DC3C                     l3283:
  8619   00DC3C  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8620   00DC40  0900               	iorlw	0
  8621   00DC42  B4D8               	btfsc	status,2,c
  8622   00DC44  EF26  F06E         	goto	u1941
  8623   00DC48  EF28  F06E         	goto	u1940
  8624   00DC4C                     u1941:
  8625   00DC4C  EF1E  F06E         	goto	l3283
  8626   00DC50                     u1940:
  8627   00DC50                     
  8628                           ;pololu_robot.c: 67:     UART1_Write(0xB7);
  8629   00DC50  0EB7               	movlw	183
  8630   00DC52  EC04  F06E         	call	_UART1_Write
  8631   00DC56  0012               	return		;funcret
  8632   00DC58                     __end_of_LCD_Clear:
  8633                           	callstack 0
  8634                           
  8635 ;; *************** function _Calibrate_Sensors *****************
  8636 ;; Defined at:
  8637 ;;		line 13 in file "pololu_robot.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  ubyte           5   12[COMRAM] unsigned char [5]
  8642 ;;  lbyte           5    7[COMRAM] unsigned char [5]
  8643 ;;  i               1   17[COMRAM] unsigned char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      PTR unsigned int 
  8646 ;; Registers used:
  8647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8654 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8656 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8657 ;;Total ram usage:       17 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 2
  8660 ;; This function calls:
  8661 ;;		_UART1_Read
  8662 ;;		_UART1_Write
  8663 ;;		_UART1_is_rx_ready
  8664 ;;		_UART1_is_tx_ready
  8665 ;; This function is called by:
  8666 ;;		_main
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text52
  8671   00E710                     __ptext52:
  8672                           	callstack 0
  8673   00E710                     _Calibrate_Sensors:
  8674                           	callstack 28
  8675   00E710                     l3553:
  8676   00E710  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8677   00E714  0900               	iorlw	0
  8678   00E716  B4D8               	btfsc	status,2,c
  8679   00E718  EF90  F073         	goto	u2281
  8680   00E71C  EF92  F073         	goto	u2280
  8681   00E720                     u2281:
  8682   00E720  EF88  F073         	goto	l3553
  8683   00E724                     u2280:
  8684   00E724                     
  8685                           ;pololu_robot.c: 19:     UART1_Write(0xB4);
  8686   00E724  0EB4               	movlw	180
  8687   00E726  EC04  F06E         	call	_UART1_Write
  8688   00E72A                     
  8689                           ;pololu_robot.c: 20:     for (i=0; i<5; i++)
  8690   00E72A  0E00               	movlw	0
  8691   00E72C  6E12               	movwf	Calibrate_Sensors@i^0,c
  8692   00E72E                     l3563:
  8693   00E72E  ECCC  F06D         	call	_UART1_is_rx_ready	;wreg free
  8694   00E732  0900               	iorlw	0
  8695   00E734  B4D8               	btfsc	status,2,c
  8696   00E736  EF9F  F073         	goto	u2291
  8697   00E73A  EFA1  F073         	goto	u2290
  8698   00E73E                     u2291:
  8699   00E73E  EF97  F073         	goto	l3563
  8700   00E742                     u2290:
  8701   00E742                     
  8702                           ;pololu_robot.c: 23:         lbyte[i] = UART1_Read();
  8703   00E742  5012               	movf	Calibrate_Sensors@i^0,w,c
  8704   00E744  0F08               	addlw	low Calibrate_Sensors@lbyte
  8705   00E746  6ED9               	movwf	fsr2l,c
  8706   00E748  6ADA               	clrf	fsr2h,c
  8707   00E74A  ECF8  F071         	call	_UART1_Read	;wreg free
  8708   00E74E  6EDF               	movwf	indf2,c
  8709   00E750                     l3567:
  8710   00E750  ECCC  F06D         	call	_UART1_is_rx_ready	;wreg free
  8711   00E754  0900               	iorlw	0
  8712   00E756  B4D8               	btfsc	status,2,c
  8713   00E758  EFB0  F073         	goto	u2301
  8714   00E75C  EFB2  F073         	goto	u2300
  8715   00E760                     u2301:
  8716   00E760  EFA8  F073         	goto	l3567
  8717   00E764                     u2300:
  8718   00E764                     
  8719                           ;pololu_robot.c: 25:         ubyte[i] = UART1_Read();
  8720   00E764  5012               	movf	Calibrate_Sensors@i^0,w,c
  8721   00E766  0F0D               	addlw	low Calibrate_Sensors@ubyte
  8722   00E768  6ED9               	movwf	fsr2l,c
  8723   00E76A  6ADA               	clrf	fsr2h,c
  8724   00E76C  ECF8  F071         	call	_UART1_Read	;wreg free
  8725   00E770  6EDF               	movwf	indf2,c
  8726   00E772                     
  8727                           ;pololu_robot.c: 26:         values[i] = ubyte[i]*256 + lbyte[i];
  8728   00E772  5012               	movf	Calibrate_Sensors@i^0,w,c
  8729   00E774  0F0D               	addlw	low Calibrate_Sensors@ubyte
  8730   00E776  6ED9               	movwf	fsr2l,c
  8731   00E778  6ADA               	clrf	fsr2h,c
  8732   00E77A  50DF               	movf	indf2,w,c
  8733   00E77C  6E04               	movwf	??_Calibrate_Sensors^0,c
  8734   00E77E  5004               	movf	??_Calibrate_Sensors^0,w,c
  8735   00E780  6E06               	movwf	(??_Calibrate_Sensors+2)^0,c
  8736   00E782  6A05               	clrf	(??_Calibrate_Sensors+1)^0,c
  8737   00E784  5012               	movf	Calibrate_Sensors@i^0,w,c
  8738   00E786  0F08               	addlw	low Calibrate_Sensors@lbyte
  8739   00E788  6ED9               	movwf	fsr2l,c
  8740   00E78A  6ADA               	clrf	fsr2h,c
  8741   00E78C  50DF               	movf	indf2,w,c
  8742   00E78E  6E07               	movwf	(??_Calibrate_Sensors+3)^0,c
  8743   00E790  5007               	movf	(??_Calibrate_Sensors+3)^0,w,c
  8744   00E792  2605               	addwf	(??_Calibrate_Sensors+1)^0,f,c
  8745   00E794  0E00               	movlw	0
  8746   00E796  2206               	addwfc	(??_Calibrate_Sensors+2)^0,f,c
  8747   00E798  5012               	movf	Calibrate_Sensors@i^0,w,c
  8748   00E79A  0D02               	mullw	2
  8749   00E79C  50F3               	movf	243,w,c
  8750   00E79E  0F80               	addlw	low Calibrate_Sensors@values
  8751   00E7A0  6ED9               	movwf	fsr2l,c
  8752   00E7A2  6ADA               	clrf	fsr2h,c
  8753   00E7A4  0060  F017  FFDE   	movff	??_Calibrate_Sensors+1,postinc2
  8754   00E7AA  0060  F01B  FFDD   	movff	??_Calibrate_Sensors+2,postdec2
  8755   00E7B0                     
  8756                           ;pololu_robot.c: 27:     }
  8757   00E7B0  2A12               	incf	Calibrate_Sensors@i^0,f,c
  8758   00E7B2  0E04               	movlw	4
  8759   00E7B4  6412               	cpfsgt	Calibrate_Sensors@i^0,c
  8760   00E7B6  EFDF  F073         	goto	u2311
  8761   00E7BA  EFE1  F073         	goto	u2310
  8762   00E7BE                     u2311:
  8763   00E7BE  EF97  F073         	goto	l3563
  8764   00E7C2                     u2310:
  8765   00E7C2                     
  8766                           ;pololu_robot.c: 28:     return values;
  8767   00E7C2  0E80               	movlw	Calibrate_Sensors@values& (0+255)
  8768   00E7C4  0012               	return		;funcret
  8769   00E7C6                     __end_of_Calibrate_Sensors:
  8770                           	callstack 0
  8771                           
  8772 ;; *************** function _Backward *****************
  8773 ;; Defined at:
  8774 ;;		line 128 in file "pololu_robot.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  speed           1    wreg     unsigned char 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  speed           1    1[COMRAM] unsigned char 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  1    wreg      void 
  8781 ;; Registers used:
  8782 ;;		wreg, status,2, cstack
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;Total ram usage:        1 bytes
  8793 ;; Hardware stack levels used: 1
  8794 ;; Hardware stack levels required when called: 1
  8795 ;; This function calls:
  8796 ;;		_UART1_Write
  8797 ;;		_UART1_is_tx_ready
  8798 ;; This function is called by:
  8799 ;;		_main
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text53
  8804   00E096                     __ptext53:
  8805                           	callstack 0
  8806   00E096                     _Backward:
  8807                           	callstack 29
  8808                           
  8809                           ;incstack = 0
  8810                           ;Backward@speed stored from wreg
  8811   00E096  6E02               	movwf	Backward@speed^0,c
  8812   00E098                     l3627:
  8813   00E098  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8814   00E09C  0900               	iorlw	0
  8815   00E09E  B4D8               	btfsc	status,2,c
  8816   00E0A0  EF54  F070         	goto	u2391
  8817   00E0A4  EF56  F070         	goto	u2390
  8818   00E0A8                     u2391:
  8819   00E0A8  EF4C  F070         	goto	l3627
  8820   00E0AC                     u2390:
  8821   00E0AC                     
  8822                           ;pololu_robot.c: 132:    UART1_Write(0xC6);
  8823   00E0AC  0EC6               	movlw	198
  8824   00E0AE  EC04  F06E         	call	_UART1_Write
  8825   00E0B2                     l3631:
  8826   00E0B2  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8827   00E0B6  0900               	iorlw	0
  8828   00E0B8  B4D8               	btfsc	status,2,c
  8829   00E0BA  EF61  F070         	goto	u2401
  8830   00E0BE  EF63  F070         	goto	u2400
  8831   00E0C2                     u2401:
  8832   00E0C2  EF59  F070         	goto	l3631
  8833   00E0C6                     u2400:
  8834   00E0C6                     
  8835                           ;pololu_robot.c: 134:    UART1_Write(speed);
  8836   00E0C6  5002               	movf	Backward@speed^0,w,c
  8837   00E0C8  EC04  F06E         	call	_UART1_Write
  8838   00E0CC                     l3635:
  8839   00E0CC  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8840   00E0D0  0900               	iorlw	0
  8841   00E0D2  B4D8               	btfsc	status,2,c
  8842   00E0D4  EF6E  F070         	goto	u2411
  8843   00E0D8  EF70  F070         	goto	u2410
  8844   00E0DC                     u2411:
  8845   00E0DC  EF66  F070         	goto	l3635
  8846   00E0E0                     u2410:
  8847   00E0E0                     
  8848                           ;pololu_robot.c: 136:    UART1_Write(0xC2);
  8849   00E0E0  0EC2               	movlw	194
  8850   00E0E2  EC04  F06E         	call	_UART1_Write
  8851   00E0E6                     l3639:
  8852   00E0E6  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8853   00E0EA  0900               	iorlw	0
  8854   00E0EC  B4D8               	btfsc	status,2,c
  8855   00E0EE  EF7B  F070         	goto	u2421
  8856   00E0F2  EF7D  F070         	goto	u2420
  8857   00E0F6                     u2421:
  8858   00E0F6  EF73  F070         	goto	l3639
  8859   00E0FA                     u2420:
  8860   00E0FA                     
  8861                           ;pololu_robot.c: 138:    UART1_Write(speed);
  8862   00E0FA  5002               	movf	Backward@speed^0,w,c
  8863   00E0FC  EC04  F06E         	call	_UART1_Write
  8864   00E100  0012               	return		;funcret
  8865   00E102                     __end_of_Backward:
  8866                           	callstack 0
  8867                           
  8868 ;; *************** function _Auto_Calibrate *****************
  8869 ;; Defined at:
  8870 ;;		line 31 in file "pololu_robot.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;		None
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;  position        2    0        unsigned int 
  8875 ;;  center          1    0        _Bool 
  8876 ;;  ubyte           1    0        unsigned char 
  8877 ;;  lbyte           1    0        unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg, status,2, pcl, pclath, pclatu, tosl, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;Total ram usage:        0 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 2
  8894 ;; This function calls:
  8895 ;;		_UART1_Read
  8896 ;;		_UART1_Write
  8897 ;;		_UART1_is_rx_ready
  8898 ;;		_UART1_is_tx_ready
  8899 ;; This function is called by:
  8900 ;;		_main
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text54
  8905   00DE54                     __ptext54:
  8906                           	callstack 0
  8907   00DE54                     _Auto_Calibrate:
  8908                           	callstack 28
  8909   00DE54                     l3683:
  8910   00DE54  EC6D  F06E         	call	_UART1_is_tx_ready	;wreg free
  8911   00DE58  0900               	iorlw	0
  8912   00DE5A  B4D8               	btfsc	status,2,c
  8913   00DE5C  EF32  F06F         	goto	u2511
  8914   00DE60  EF34  F06F         	goto	u2510
  8915   00DE64                     u2511:
  8916   00DE64  EF2A  F06F         	goto	l3683
  8917   00DE68                     u2510:
  8918   00DE68                     
  8919                           ;pololu_robot.c: 38:     UART1_Write(0xBA);
  8920   00DE68  0EBA               	movlw	186
  8921   00DE6A  EC04  F06E         	call	_UART1_Write
  8922   00DE6E                     l3687:
  8923   00DE6E  ECCC  F06D         	call	_UART1_is_rx_ready	;wreg free
  8924   00DE72  0900               	iorlw	0
  8925   00DE74  B4D8               	btfsc	status,2,c
  8926   00DE76  EF3F  F06F         	goto	u2521
  8927   00DE7A  EF41  F06F         	goto	u2520
  8928   00DE7E                     u2521:
  8929   00DE7E  EF37  F06F         	goto	l3687
  8930   00DE82                     u2520:
  8931   00DE82  EF4D  F06F         	goto	l3691
  8932   00DE86                     l3689:
  8933   00DE86  ECCC  F06D         	call	_UART1_is_rx_ready	;wreg free
  8934   00DE8A  0900               	iorlw	0
  8935   00DE8C  B4D8               	btfsc	status,2,c
  8936   00DE8E  EF4B  F06F         	goto	u2531
  8937   00DE92  EF4D  F06F         	goto	u2530
  8938   00DE96                     u2531:
  8939   00DE96  EF43  F06F         	goto	l3689
  8940   00DE9A                     u2530:
  8941   00DE9A                     l3691:
  8942                           
  8943                           ;pololu_robot.c: 40:     while(UART1_Read() != 'c')
  8944   00DE9A  ECF8  F071         	call	_UART1_Read	;wreg free
  8945   00DE9E  0A63               	xorlw	99
  8946   00DEA0  A4D8               	btfss	status,2,c
  8947   00DEA2  EF55  F06F         	goto	u2541
  8948   00DEA6  EF57  F06F         	goto	u2540
  8949   00DEAA                     u2541:
  8950   00DEAA  EF43  F06F         	goto	l3689
  8951   00DEAE                     u2540:
  8952   00DEAE  0012               	return		;funcret
  8953   00DEB0                     __end_of_Auto_Calibrate:
  8954                           	callstack 0
  8955                           
  8956 ;; *************** function _UART1_is_tx_ready *****************
  8957 ;; Defined at:
  8958 ;;		line 92 in file "uart1.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;		None
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;		None
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      _Bool 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;Total ram usage:        1 bytes
  8977 ;; Hardware stack levels used: 1
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		_main
  8982 ;;		_Calibrate_Sensors
  8983 ;;		_Auto_Calibrate
  8984 ;;		_Read_Battery_Voltage
  8985 ;;		_LCD_Clear
  8986 ;;		_LCD_Print
  8987 ;;		_LCD_PrintCharacter
  8988 ;;		_LCD_Position
  8989 ;;		_Forward
  8990 ;;		_Backward
  8991 ;;		_Left_Turn
  8992 ;;		_Right_Turn
  8993 ;;		_Turn_PD_ON
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text55
  8998   00DCDA                     __ptext55:
  8999                           	callstack 0
  9000   00DCDA                     _UART1_is_tx_ready:
  9001                           	callstack 30
  9002   00DCDA                     
  9003                           ;uart1.c: 94:     return (_Bool)(PIR3bits.U1TXIF && U1CON0bits.TXEN);
  9004   00DCDA  0E00               	movlw	0
  9005   00DCDC  6E01               	movwf	_UART1_is_tx_ready$664^0,c
  9006   00DCDE  0139               	movlb	57	; () banked
  9007   00DCE0  A9A3               	btfss	163,4,b	;volatile
  9008   00DCE2  EF75  F06E         	goto	u1881
  9009   00DCE6  EF77  F06E         	goto	u1880
  9010   00DCEA                     u1881:
  9011   00DCEA  EF81  F06E         	goto	l370
  9012   00DCEE                     u1880:
  9013   00DCEE                     
  9014                           ; BSR set to: 57
  9015   00DCEE  013D               	movlb	61	; () banked
  9016   00DCF0  ABF2               	btfss	242,5,b	;volatile
  9017   00DCF2  EF7D  F06E         	goto	u1891
  9018   00DCF6  EF7F  F06E         	goto	u1890
  9019   00DCFA                     u1891:
  9020   00DCFA  EF81  F06E         	goto	l370
  9021   00DCFE                     u1890:
  9022   00DCFE                     
  9023                           ; BSR set to: 61
  9024   00DCFE  0E01               	movlw	1
  9025   00DD00  6E01               	movwf	_UART1_is_tx_ready$664^0,c
  9026   00DD02                     l370:
  9027   00DD02  5001               	movf	_UART1_is_tx_ready$664^0,w,c
  9028   00DD04  0012               	return		;funcret
  9029   00DD06                     __end_of_UART1_is_tx_ready:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _UART1_is_rx_ready *****************
  9033 ;; Defined at:
  9034 ;;		line 87 in file "uart1.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;		None
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;		None
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      _Bool 
  9041 ;; Registers used:
  9042 ;;		wreg
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:        0 bytes
  9053 ;; Hardware stack levels used: 1
  9054 ;; This function calls:
  9055 ;;		Nothing
  9056 ;; This function is called by:
  9057 ;;		_Calibrate_Sensors
  9058 ;;		_Auto_Calibrate
  9059 ;;		_Read_Battery_Voltage
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text56
  9064   00DB98                     __ptext56:
  9065                           	callstack 0
  9066   00DB98                     _UART1_is_rx_ready:
  9067                           	callstack 29
  9068   00DB98                     
  9069                           ;uart1.c: 89:     return (_Bool)(PIR3bits.U1RXIF);
  9070   00DB98  0139               	movlb	57	; () banked
  9071   00DB9A  B7A3               	btfsc	163,3,b	;volatile
  9072   00DB9C  EFD2  F06D         	goto	u2141
  9073   00DBA0  EFD5  F06D         	goto	u2140
  9074   00DBA4                     u2141:
  9075   00DBA4  0E01               	movlw	1
  9076   00DBA6  EFD6  F06D         	goto	u2146
  9077   00DBAA                     u2140:
  9078   00DBAA  0E00               	movlw	0
  9079   00DBAC                     u2146:
  9080   00DBAC                     
  9081                           ; BSR set to: 57
  9082   00DBAC  0012               	return		;funcret
  9083   00DBAE                     __end_of_UART1_is_rx_ready:
  9084                           	callstack 0
  9085                           
  9086 ;; *************** function _UART1_Write *****************
  9087 ;; Defined at:
  9088 ;;		line 131 in file "uart1.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  txData          1    wreg     unsigned char 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  txData          1    0[COMRAM] unsigned char 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;Total ram usage:        1 bytes
  9107 ;; Hardware stack levels used: 1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_main
  9112 ;;		_Calibrate_Sensors
  9113 ;;		_Auto_Calibrate
  9114 ;;		_Read_Battery_Voltage
  9115 ;;		_LCD_Clear
  9116 ;;		_LCD_Print
  9117 ;;		_LCD_PrintCharacter
  9118 ;;		_LCD_Position
  9119 ;;		_Forward
  9120 ;;		_Backward
  9121 ;;		_Left_Turn
  9122 ;;		_Right_Turn
  9123 ;;		_Turn_PD_ON
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           	psect	text57
  9128   00DC08                     __ptext57:
  9129                           	callstack 0
  9130   00DC08                     _UART1_Write:
  9131                           	callstack 30
  9132                           
  9133                           ; BSR set to: 57
  9134                           ;incstack = 0
  9135                           ;UART1_Write@txData stored from wreg
  9136   00DC08  6E01               	movwf	UART1_Write@txData^0,c
  9137   00DC0A                     l389:
  9138                           
  9139                           ;uart1.c: 133:     while(0 == PIR3bits.U1TXIF)
  9140   00DC0A  0139               	movlb	57	; () banked
  9141   00DC0C  A9A3               	btfss	163,4,b	;volatile
  9142   00DC0E  EF0B  F06E         	goto	u1901
  9143   00DC12  EF0D  F06E         	goto	u1900
  9144   00DC16                     u1901:
  9145   00DC16  EF05  F06E         	goto	l389
  9146   00DC1A                     u1900:
  9147   00DC1A                     
  9148                           ; BSR set to: 57
  9149                           ;uart1.c: 137:     U1TXB = txData;
  9150   00DC1A  0060  F007  FDEA   	movff	UART1_Write@txData,15850	;volatile
  9151   00DC20                     
  9152                           ; BSR set to: 57
  9153   00DC20  0012               	return		;funcret
  9154   00DC22                     __end_of_UART1_Write:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function _UART1_Read *****************
  9158 ;; Defined at:
  9159 ;;		line 106 in file "uart1.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      unsigned char 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, pcl, pclath, pclatu, tosl, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; Hardware stack levels required when called: 1
  9180 ;; This function calls:
  9181 ;;		NULL
  9182 ;;		_UART1_DefaultErrorHandler
  9183 ;;		_UART1_DefaultFramingErrorHandler
  9184 ;;		_UART1_DefaultOverrunErrorHandler
  9185 ;; This function is called by:
  9186 ;;		_Calibrate_Sensors
  9187 ;;		_Auto_Calibrate
  9188 ;;		_Read_Battery_Voltage
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text58
  9193   00E3F0                     __ptext58:
  9194                           	callstack 0
  9195   00E3F0                     _UART1_Read:
  9196                           	callstack 28
  9197   00E3F0                     l380:
  9198                           
  9199                           ;uart1.c: 108:     while(!PIR3bits.U1RXIF)
  9200   00E3F0  0139               	movlb	57	; () banked
  9201   00E3F2  A7A3               	btfss	163,3,b	;volatile
  9202   00E3F4  EFFE  F071         	goto	u2151
  9203   00E3F8  EF00  F072         	goto	u2150
  9204   00E3FC                     u2151:
  9205   00E3FC  EFF8  F071         	goto	l380
  9206   00E400                     u2150:
  9207   00E400                     
  9208                           ; BSR set to: 57
  9209                           ;uart1.c: 112:     uart1RxLastError.status = 0;
  9210   00E400  0E00               	movlw	0
  9211   00E402  6E59               	movwf	_uart1RxLastError^0,c	;volatile
  9212   00E404                     
  9213                           ; BSR set to: 57
  9214                           ;uart1.c: 114:     if(U1ERRIRbits.FERIF){
  9215   00E404  013D               	movlb	61	; () banked
  9216   00E406  A7F9               	btfss	249,3,b	;volatile
  9217   00E408  EF08  F072         	goto	u2161
  9218   00E40C  EF0A  F072         	goto	u2160
  9219   00E410                     u2161:
  9220   00E410  EF17  F072         	goto	l3429
  9221   00E414                     u2160:
  9222   00E414                     
  9223                           ; BSR set to: 61
  9224                           ;uart1.c: 115:         uart1RxLastError.ferr = 1;
  9225   00E414  8259               	bsf	_uart1RxLastError^0,1,c	;volatile
  9226   00E416                     
  9227                           ; BSR set to: 61
  9228                           ;uart1.c: 116:         UART1_FramingErrorHandler();
  9229   00E416  D802               	call	u2178
  9230   00E418  EF17  F072         	goto	u2179
  9231   00E41C                     u2178:
  9232   00E41C  0005               	push	
  9233   00E41E  6EFA               	movwf	pclath,c
  9234   00E420  505E               	movf	_UART1_FramingErrorHandler^0,w,c
  9235   00E422  6EFD               	movwf	tosl,c
  9236   00E424  505F               	movf	(_UART1_FramingErrorHandler+1)^0,w,c
  9237   00E426  6EFE               	movwf	tosh,c
  9238   00E428  6AFF               	clrf	tosu,c
  9239   00E42A  50FA               	movf	pclath,w,c
  9240   00E42C  0012               	return		;indir
  9241   00E42E                     u2179:
  9242   00E42E                     l3429:
  9243                           
  9244                           ;uart1.c: 119:     if(U1ERRIRbits.RXFOIF){
  9245   00E42E  013D               	movlb	61	; () banked
  9246   00E430  A3F9               	btfss	249,1,b	;volatile
  9247   00E432  EF1D  F072         	goto	u2181
  9248   00E436  EF1F  F072         	goto	u2180
  9249   00E43A                     u2181:
  9250   00E43A  EF2C  F072         	goto	l3435
  9251   00E43E                     u2180:
  9252   00E43E                     
  9253                           ; BSR set to: 61
  9254                           ;uart1.c: 120:         uart1RxLastError.oerr = 1;
  9255   00E43E  8459               	bsf	_uart1RxLastError^0,2,c	;volatile
  9256   00E440                     
  9257                           ; BSR set to: 61
  9258                           ;uart1.c: 121:         UART1_OverrunErrorHandler();
  9259   00E440  D802               	call	u2198
  9260   00E442  EF2C  F072         	goto	u2199
  9261   00E446                     u2198:
  9262   00E446  0005               	push	
  9263   00E448  6EFA               	movwf	pclath,c
  9264   00E44A  505C               	movf	_UART1_OverrunErrorHandler^0,w,c
  9265   00E44C  6EFD               	movwf	tosl,c
  9266   00E44E  505D               	movf	(_UART1_OverrunErrorHandler+1)^0,w,c
  9267   00E450  6EFE               	movwf	tosh,c
  9268   00E452  6AFF               	clrf	tosu,c
  9269   00E454  50FA               	movf	pclath,w,c
  9270   00E456  0012               	return		;indir
  9271   00E458                     u2199:
  9272   00E458                     l3435:
  9273                           
  9274                           ;uart1.c: 124:     if(uart1RxLastError.status){
  9275   00E458  5059               	movf	_uart1RxLastError^0,w,c	;volatile
  9276   00E45A  B4D8               	btfsc	status,2,c
  9277   00E45C  EF32  F072         	goto	u2201
  9278   00E460  EF34  F072         	goto	u2200
  9279   00E464                     u2201:
  9280   00E464  EF40  F072         	goto	l3439
  9281   00E468                     u2200:
  9282   00E468                     
  9283                           ;uart1.c: 125:         UART1_ErrorHandler();
  9284   00E468  D802               	call	u2218
  9285   00E46A  EF40  F072         	goto	u2219
  9286   00E46E                     u2218:
  9287   00E46E  0005               	push	
  9288   00E470  6EFA               	movwf	pclath,c
  9289   00E472  505A               	movf	_UART1_ErrorHandler^0,w,c
  9290   00E474  6EFD               	movwf	tosl,c
  9291   00E476  505B               	movf	(_UART1_ErrorHandler+1)^0,w,c
  9292   00E478  6EFE               	movwf	tosh,c
  9293   00E47A  6AFF               	clrf	tosu,c
  9294   00E47C  50FA               	movf	pclath,w,c
  9295   00E47E  0012               	return		;indir
  9296   00E480                     u2219:
  9297   00E480                     l3439:
  9298                           
  9299                           ;uart1.c: 128:     return U1RXB;
  9300   00E480  013D               	movlb	61	; () banked
  9301   00E482  51E8               	movf	232,w,b	;volatile
  9302   00E484                     
  9303                           ; BSR set to: 61
  9304   00E484  0012               	return		;funcret
  9305   00E486                     __end_of_UART1_Read:
  9306                           	callstack 0
  9307                           
  9308 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  9309 ;; Defined at:
  9310 ;;		line 146 in file "uart1.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      void 
  9317 ;; Registers used:
  9318 ;;		None
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used: 1
  9330 ;; This function calls:
  9331 ;;		Nothing
  9332 ;; This function is called by:
  9333 ;;		_UART1_Initialize
  9334 ;;		_UART1_Read
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text59
  9339   00DB1E                     __ptext59:
  9340                           	callstack 0
  9341   00DB1E                     _UART1_DefaultOverrunErrorHandler:
  9342                           	callstack 28
  9343   00DB1E  0012               	return		;funcret
  9344   00DB20                     __end_of_UART1_DefaultOverrunErrorHandler:
  9345                           	callstack 0
  9346                           
  9347 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  9348 ;; Defined at:
  9349 ;;		line 144 in file "uart1.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;		None
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		None
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;Total ram usage:        0 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_UART1_Initialize
  9373 ;;		_UART1_Read
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text60
  9378   00DB1C                     __ptext60:
  9379                           	callstack 0
  9380   00DB1C                     _UART1_DefaultFramingErrorHandler:
  9381                           	callstack 28
  9382   00DB1C  0012               	return		;funcret
  9383   00DB1E                     __end_of_UART1_DefaultFramingErrorHandler:
  9384                           	callstack 0
  9385                           
  9386 ;; *************** function _UART1_DefaultErrorHandler *****************
  9387 ;; Defined at:
  9388 ;;		line 148 in file "uart1.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;		None
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;		None
  9393 ;; Return value:  Size  Location     Type
  9394 ;;                  1    wreg      void 
  9395 ;; Registers used:
  9396 ;;		None
  9397 ;; Tracked objects:
  9398 ;;		On entry : 0/0
  9399 ;;		On exit  : 0/0
  9400 ;;		Unchanged: 0/0
  9401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9406 ;;Total ram usage:        0 bytes
  9407 ;; Hardware stack levels used: 1
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_UART1_Initialize
  9412 ;;		_UART1_Read
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text61
  9417   00DB1A                     __ptext61:
  9418                           	callstack 0
  9419   00DB1A                     _UART1_DefaultErrorHandler:
  9420                           	callstack 28
  9421   00DB1A  0012               	return		;funcret
  9422   00DB1C                     __end_of_UART1_DefaultErrorHandler:
  9423                           	callstack 0
  9424                           
  9425                           	psect	text62
  9426   000000                     __ptext62:
  9427                           	callstack 0
  9428   000000                     
  9429                           	psect	rparam
  9430   000000                     
  9431                           	psect	config
  9432                           
  9433                           ;Config register CONFIG1L @ 0x300000
  9434                           ;	External Oscillator Selection
  9435                           ;	FEXTOSC = OFF, Oscillator not enabled
  9436                           ;	Reset Oscillator Selection
  9437                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  9438   300000                     	org	3145728
  9439   300000  EC                 	db	236
  9440                           
  9441                           ;Config register CONFIG1H @ 0x300001
  9442                           ;	Clock out Enable bit
  9443                           ;	CLKOUTEN = ON, CLKOUT function is enabled
  9444                           ;	PRLOCKED One-Way Set Enable bit
  9445                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  9446                           ;	Clock Switch Enable bit
  9447                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9448                           ;	Fail-Safe Clock Monitor Enable bit
  9449                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  9450   300001                     	org	3145729
  9451   300001  FE                 	db	254
  9452                           
  9453                           ;Config register CONFIG2L @ 0x300002
  9454                           ;	MCLR Enable bit
  9455                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  9456                           ;	Power-up timer selection bits
  9457                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  9458                           ;	Multi-vector enable bit
  9459                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  9460                           ;	IVTLOCK bit One-way set enable bit
  9461                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  9462                           ;	Low Power BOR Enable bit
  9463                           ;	LPBOREN = OFF, ULPBOR disabled
  9464                           ;	Brown-out Reset Enable bits
  9465                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  9466   300002                     	org	3145730
  9467   300002  F7                 	db	247
  9468                           
  9469                           ;Config register CONFIG2H @ 0x300003
  9470                           ;	Brown-out Reset Voltage Selection bits
  9471                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  9472                           ;	ZCD Disable bit
  9473                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  9474                           ;	PPSLOCK bit One-Way Set Enable bit
  9475                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  9476                           ;	Stack Full/Underflow Reset Enable bit
  9477                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9478                           ;	Debugger Enable bit
  9479                           ;	DEBUG = OFF, Background debugger disabled
  9480                           ;	Extended Instruction Set Enable bit
  9481                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  9482   300003                     	org	3145731
  9483   300003  FF                 	db	255
  9484                           
  9485                           ;Config register CONFIG3L @ 0x300004
  9486                           ;	WDT Period selection bits
  9487                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9488                           ;	WDT operating mode
  9489                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  9490   300004                     	org	3145732
  9491   300004  9F                 	db	159
  9492                           
  9493                           ;Config register CONFIG3H @ 0x300005
  9494                           ;	WDT Window Select bits
  9495                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9496                           ;	WDT input clock selector
  9497                           ;	WDTCCS = SC, Software Control
  9498   300005                     	org	3145733
  9499   300005  FF                 	db	255
  9500                           
  9501                           ;Config register CONFIG4L @ 0x300006
  9502                           ;	Boot Block Size selection bits
  9503                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  9504                           ;	Boot Block enable bit
  9505                           ;	BBEN = OFF, Boot block disabled
  9506                           ;	Storage Area Flash enable bit
  9507                           ;	SAFEN = OFF, SAF disabled
  9508                           ;	Application Block write protection bit
  9509                           ;	WRTAPP = OFF, Application Block not write protected
  9510   300006                     	org	3145734
  9511   300006  FF                 	db	255
  9512                           
  9513                           ;Config register CONFIG4H @ 0x300007
  9514                           ;	Boot Block Write Protection bit
  9515                           ;	WRTB = OFF, Boot Block not write-protected
  9516                           ;	Configuration Register Write Protection bit
  9517                           ;	WRTC = OFF, Configuration registers not write-protected
  9518                           ;	Data EEPROM Write Protection bit
  9519                           ;	WRTD = OFF, Data EEPROM not write-protected
  9520                           ;	SAF Write protection bit
  9521                           ;	WRTSAF = OFF, SAF not Write Protected
  9522                           ;	Low Voltage Programming Enable bit
  9523                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  9524   300007                     	org	3145735
  9525   300007  FF                 	db	255
  9526                           
  9527                           ;Config register CONFIG5L @ 0x300008
  9528                           ;	PFM and Data EEPROM Code Protection bit
  9529                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  9530   300008                     	org	3145736
  9531   300008  FF                 	db	255
  9532                           
  9533                           ;Config register CONFIG5H @ 0x300009
  9534                           ;	unspecified, using default values
  9535   300009                     	org	3145737
  9536   300009  FF                 	db	255
  9537                           tosu	equ	0x3FFF
  9538                           tosh	equ	0x3FFE
  9539                           tosl	equ	0x3FFD
  9540                           stkptr	equ	0x3FFC
  9541                           pclatu	equ	0x3FFB
  9542                           pclath	equ	0x3FFA
  9543                           pcl	equ	0x3FF9
  9544                           tblptru	equ	0x3FF8
  9545                           tblptrh	equ	0x3FF7
  9546                           tblptrl	equ	0x3FF6
  9547                           tablat	equ	0x3FF5
  9548                           prodh	equ	0x3FF4
  9549                           prodl	equ	0x3FF3
  9550                           indf0	equ	0x3FEF
  9551                           postinc0	equ	0x3FEE
  9552                           postdec0	equ	0x3FED
  9553                           preinc0	equ	0x3FEC
  9554                           plusw0	equ	0x3FEB
  9555                           fsr0h	equ	0x3FEA
  9556                           fsr0l	equ	0x3FE9
  9557                           wreg	equ	0x3FE8
  9558                           indf1	equ	0x3FE7
  9559                           postinc1	equ	0x3FE6
  9560                           postdec1	equ	0x3FE5
  9561                           preinc1	equ	0x3FE4
  9562                           plusw1	equ	0x3FE3
  9563                           fsr1h	equ	0x3FE2
  9564                           fsr1l	equ	0x3FE1
  9565                           bsr	equ	0x3FE0
  9566                           indf2	equ	0x3FDF
  9567                           postinc2	equ	0x3FDE
  9568                           postdec2	equ	0x3FDD
  9569                           preinc2	equ	0x3FDC
  9570                           plusw2	equ	0x3FDB
  9571                           fsr2h	equ	0x3FDA
  9572                           fsr2l	equ	0x3FD9
  9573                           status	equ	0x3FD8

Data Sizes:
    Strings     1253
    Constant    0
    Data        0
    BSS         51
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     80      95
    BANK0           160     24      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_Print@str	PTR unsigned char  size(2) Largest target is 10
		 -> Countdown@msg(COMRAM[9]), main@msg(BANK0[9]), STR_1(CODE[9]), STR_15(CODE[9]), 
		 -> STR_16(CODE[9]), STR_17(CODE[8]), STR_20(CODE[8]), STR_28(CODE[9]), 
		 -> STR_3(CODE[10]), STR_32(CODE[9]), STR_36(CODE[9]), STR_4(CODE[9]), 
		 -> STR_40(CODE[9]), STR_45(CODE[9]), STR_50(CODE[9]), STR_52(CODE[8]), 
		 -> STR_53(CODE[4]), STR_56(CODE[9]), STR_58(CODE[9]), STR_60(CODE[9]), 
		 -> STR_61(CODE[9]), STR_89(CODE[9]), STR_91(CODE[9]), STR_92(CODE[9]), 
		 -> STR_93(CODE[9]), 

    main@sensor_value	PTR unsigned int  size(1) Largest target is 10
		 -> Calibrate_Sensors@values(BANK0[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_10(CODE[45]), STR_11(CODE[29]), STR_12(CODE[18]), STR_13(CODE[30]), 
		 -> STR_14(CODE[24]), STR_18(CODE[3]), STR_19(CODE[18]), STR_21(CODE[3]), 
		 -> STR_22(CODE[28]), STR_23(CODE[2]), STR_24(CODE[3]), STR_25(CODE[44]), 
		 -> STR_26(CODE[19]), STR_29(CODE[3]), STR_31(CODE[24]), STR_33(CODE[3]), 
		 -> STR_34(CODE[45]), STR_37(CODE[3]), STR_38(CODE[46]), STR_41(CODE[3]), 
		 -> STR_42(CODE[45]), STR_43(CODE[71]), STR_46(CODE[3]), STR_47(CODE[45]), 
		 -> STR_48(CODE[71]), STR_5(CODE[3]), STR_51(CODE[3]), STR_54(CODE[19]), 
		 -> STR_55(CODE[2]), STR_6(CODE[45]), STR_63(CODE[3]), STR_64(CODE[34]), 
		 -> STR_65(CODE[34]), STR_66(CODE[34]), STR_67(CODE[34]), STR_68(CODE[34]), 
		 -> STR_69(CODE[34]), STR_7(CODE[29]), STR_70(CODE[3]), STR_71(CODE[29]), 
		 -> STR_72(CODE[30]), STR_73(CODE[36]), STR_74(CODE[35]), STR_75(CODE[3]), 
		 -> STR_76(CODE[55]), STR_77(CODE[3]), STR_78(CODE[34]), STR_79(CODE[35]), 
		 -> STR_8(CODE[18]), STR_80(CODE[22]), STR_81(CODE[23]), STR_82(CODE[23]), 
		 -> STR_83(CODE[28]), STR_84(CODE[3]), STR_85(CODE[25]), STR_86(CODE[3]), 
		 -> STR_87(CODE[3]), STR_88(CODE[47]), STR_9(CODE[30]), 

    S1820$buffer	PTR unsigned char  size(2) Largest target is 0

    S1820$source	PTR const unsigned char  size(2) Largest target is 0

    sp__Calibrate_Sensors	PTR unsigned int  size(1) Largest target is 10
		 -> Calibrate_Sensors@values(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[6]), STR_27(CODE[7]), STR_30(CODE[6]), STR_35(CODE[5]), 
		 -> STR_39(CODE[5]), STR_44(CODE[6]), STR_49(CODE[6]), STR_57(CODE[6]), 
		 -> STR_59(CODE[6]), STR_62(CODE[5]), STR_90(CODE[9]), STR_94(CODE[9]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 9
		 -> Countdown@msg(COMRAM[9]), main@msg(BANK0[9]), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), NULL(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), NULL(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), NULL(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), NULL(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), NULL(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), NULL(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 71
		 -> STR_10(CODE[45]), STR_11(CODE[29]), STR_12(CODE[18]), STR_13(CODE[30]), 
		 -> STR_14(CODE[24]), STR_18(CODE[3]), STR_19(CODE[18]), STR_2(CODE[6]), 
		 -> STR_21(CODE[3]), STR_22(CODE[28]), STR_23(CODE[2]), STR_24(CODE[3]), 
		 -> STR_25(CODE[44]), STR_26(CODE[19]), STR_27(CODE[7]), STR_29(CODE[3]), 
		 -> STR_30(CODE[6]), STR_31(CODE[24]), STR_33(CODE[3]), STR_34(CODE[45]), 
		 -> STR_35(CODE[5]), STR_37(CODE[3]), STR_38(CODE[46]), STR_39(CODE[5]), 
		 -> STR_41(CODE[3]), STR_42(CODE[45]), STR_43(CODE[71]), STR_44(CODE[6]), 
		 -> STR_46(CODE[3]), STR_47(CODE[45]), STR_48(CODE[71]), STR_49(CODE[6]), 
		 -> STR_5(CODE[3]), STR_51(CODE[3]), STR_54(CODE[19]), STR_55(CODE[2]), 
		 -> STR_57(CODE[6]), STR_59(CODE[6]), STR_6(CODE[45]), STR_62(CODE[5]), 
		 -> STR_63(CODE[3]), STR_64(CODE[34]), STR_65(CODE[34]), STR_66(CODE[34]), 
		 -> STR_67(CODE[34]), STR_68(CODE[34]), STR_69(CODE[34]), STR_7(CODE[29]), 
		 -> STR_70(CODE[3]), STR_71(CODE[29]), STR_72(CODE[30]), STR_73(CODE[36]), 
		 -> STR_74(CODE[35]), STR_75(CODE[3]), STR_76(CODE[55]), STR_77(CODE[3]), 
		 -> STR_78(CODE[34]), STR_79(CODE[35]), STR_8(CODE[18]), STR_80(CODE[22]), 
		 -> STR_81(CODE[23]), STR_82(CODE[23]), STR_83(CODE[28]), STR_84(CODE[3]), 
		 -> STR_85(CODE[25]), STR_86(CODE[3]), STR_87(CODE[3]), STR_88(CODE[47]), 
		 -> STR_9(CODE[30]), STR_90(CODE[9]), STR_94(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_10(CODE[45]), STR_11(CODE[29]), STR_12(CODE[18]), STR_13(CODE[30]), 
		 -> STR_14(CODE[24]), STR_18(CODE[3]), STR_19(CODE[18]), STR_2(CODE[6]), 
		 -> STR_21(CODE[3]), STR_22(CODE[28]), STR_23(CODE[2]), STR_24(CODE[3]), 
		 -> STR_25(CODE[44]), STR_26(CODE[19]), STR_27(CODE[7]), STR_29(CODE[3]), 
		 -> STR_30(CODE[6]), STR_31(CODE[24]), STR_33(CODE[3]), STR_34(CODE[45]), 
		 -> STR_35(CODE[5]), STR_37(CODE[3]), STR_38(CODE[46]), STR_39(CODE[5]), 
		 -> STR_41(CODE[3]), STR_42(CODE[45]), STR_43(CODE[71]), STR_44(CODE[6]), 
		 -> STR_46(CODE[3]), STR_47(CODE[45]), STR_48(CODE[71]), STR_49(CODE[6]), 
		 -> STR_5(CODE[3]), STR_51(CODE[3]), STR_54(CODE[19]), STR_55(CODE[2]), 
		 -> STR_57(CODE[6]), STR_59(CODE[6]), STR_6(CODE[45]), STR_62(CODE[5]), 
		 -> STR_63(CODE[3]), STR_64(CODE[34]), STR_65(CODE[34]), STR_66(CODE[34]), 
		 -> STR_67(CODE[34]), STR_68(CODE[34]), STR_69(CODE[34]), STR_7(CODE[29]), 
		 -> STR_70(CODE[3]), STR_71(CODE[29]), STR_72(CODE[30]), STR_73(CODE[36]), 
		 -> STR_74(CODE[35]), STR_75(CODE[3]), STR_76(CODE[55]), STR_77(CODE[3]), 
		 -> STR_78(CODE[34]), STR_79(CODE[35]), STR_8(CODE[18]), STR_80(CODE[22]), 
		 -> STR_81(CODE[23]), STR_82(CODE[23]), STR_83(CODE[28]), STR_84(CODE[3]), 
		 -> STR_85(CODE[25]), STR_86(CODE[3]), STR_87(CODE[3]), STR_88(CODE[47]), 
		 -> STR_9(CODE[30]), STR_90(CODE[9]), STR_94(CODE[9]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_10(CODE[45]), STR_11(CODE[29]), STR_12(CODE[18]), STR_13(CODE[30]), 
		 -> STR_14(CODE[24]), STR_18(CODE[3]), STR_19(CODE[18]), STR_2(CODE[6]), 
		 -> STR_21(CODE[3]), STR_22(CODE[28]), STR_23(CODE[2]), STR_24(CODE[3]), 
		 -> STR_25(CODE[44]), STR_26(CODE[19]), STR_27(CODE[7]), STR_29(CODE[3]), 
		 -> STR_30(CODE[6]), STR_31(CODE[24]), STR_33(CODE[3]), STR_34(CODE[45]), 
		 -> STR_35(CODE[5]), STR_37(CODE[3]), STR_38(CODE[46]), STR_39(CODE[5]), 
		 -> STR_41(CODE[3]), STR_42(CODE[45]), STR_43(CODE[71]), STR_44(CODE[6]), 
		 -> STR_46(CODE[3]), STR_47(CODE[45]), STR_48(CODE[71]), STR_49(CODE[6]), 
		 -> STR_5(CODE[3]), STR_51(CODE[3]), STR_54(CODE[19]), STR_55(CODE[2]), 
		 -> STR_57(CODE[6]), STR_59(CODE[6]), STR_6(CODE[45]), STR_62(CODE[5]), 
		 -> STR_63(CODE[3]), STR_64(CODE[34]), STR_65(CODE[34]), STR_66(CODE[34]), 
		 -> STR_67(CODE[34]), STR_68(CODE[34]), STR_69(CODE[34]), STR_7(CODE[29]), 
		 -> STR_70(CODE[3]), STR_71(CODE[29]), STR_72(CODE[30]), STR_73(CODE[36]), 
		 -> STR_74(CODE[35]), STR_75(CODE[3]), STR_76(CODE[55]), STR_77(CODE[3]), 
		 -> STR_78(CODE[34]), STR_79(CODE[35]), STR_8(CODE[18]), STR_80(CODE[22]), 
		 -> STR_81(CODE[23]), STR_82(CODE[23]), STR_83(CODE[28]), STR_84(CODE[3]), 
		 -> STR_85(CODE[25]), STR_86(CODE[3]), STR_87(CODE[3]), STR_88(CODE[47]), 
		 -> STR_9(CODE[30]), STR_90(CODE[9]), STR_94(CODE[9]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_Countdown
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _Turn_PD_ON->_UART1_Write
    _Turn_PD_ON->_UART1_is_tx_ready
    _Stop->_Forward
    _Forward->_UART1_Write
    _Forward->_UART1_is_tx_ready
    _Right_Turn->_UART1_Write
    _Right_Turn->_UART1_is_tx_ready
    _Read_Battery_Voltage->_UART1_Write
    _Read_Battery_Voltage->_UART1_is_tx_ready
    _Left_Turn->_UART1_Write
    _Left_Turn->_UART1_is_tx_ready
    _LCD_PrintCharacter->_UART1_Write
    _LCD_PrintCharacter->_UART1_is_tx_ready
    _Get_Number->_printf
    _Get_Key->_UART2_Write
    _Get_Key->_UART2_is_tx_ready
    _Diagnostic_Menu->_printf
    _printf->_vfprintf
    _Countdown->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___awmod
    _LCD_Print->_UART1_Write
    _LCD_Print->_UART1_is_tx_ready
    _LCD_Position->_UART1_Write
    _LCD_Position->_UART1_is_tx_ready
    _LCD_Clear->_UART1_Write
    _LCD_Clear->_UART1_is_tx_ready
    _Calibrate_Sensors->_UART1_Write
    _Calibrate_Sensors->_UART1_is_tx_ready
    _Backward->_UART1_Write
    _Backward->_UART1_is_tx_ready
    _Auto_Calibrate->_UART1_Write
    _Auto_Calibrate->_UART1_is_tx_ready

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   61561
                                             72 COMRAM     8     8      0
                                              0 BANK0     24    24      0
                     _Auto_Calibrate
                           _Backward
                  _Calibrate_Sensors
                          _Countdown
                    _Diagnostic_Menu
                            _Forward
                            _Get_Key
                         _Get_Number
                          _LCD_Clear
                       _LCD_Position
                          _LCD_Print
                 _LCD_PrintCharacter
                          _Left_Turn
             _PIN_MANAGER_Initialize
               _Read_Battery_Voltage
            _Read_Calibrated_Sensors
                         _Right_Turn
                  _SYSTEM_Initialize
                               _Stop
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
                    _TMR0_StartTimer
                     _TMR0_StopTimer
               _TMR0_Write16BitTimer
                         _Turn_PD_ON
                   _UART1_Initialize
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART2_Initialize
                         _UART2_Read
                  _UART2_is_rx_ready
                             _printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _UART2_Initialize                                     0     0      0     294
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (2) _UART2_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART2_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART2_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART1_Initialize                                     0     0      0     294
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (2) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorHandler                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetErrorHandler                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Turn_PD_ON                                           0     0      0      46
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Stop                                                 0     0      0     134
                            _Forward
 ---------------------------------------------------------------------------------
 (2) _Forward                                              1     1      0     134
                                              1 COMRAM     1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Right_Turn                                           2     1      1     188
                                              1 COMRAM     2     1      1
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _Read_Calibrated_Sensors                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_Battery_Voltage                                 6     4      2      92
                                              1 COMRAM     6     4      2
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _Left_Turn                                            2     1      1     188
                                              1 COMRAM     2     1      1
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _LCD_PrintCharacter                                   1     1      0      68
                                              1 COMRAM     1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _Get_Number                                           2     2      0    9205
                                             41 COMRAM     2     2      0
                            _Get_Key
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Get_Key                                              1     1      0     180
                                              1 COMRAM     1     1      0
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                  _UART2_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART2_Read                                           0     0      0       0
                                NULL *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
 ---------------------------------------------------------------------------------
 (2) _UART2_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_DefaultErrorHandler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Diagnostic_Menu                                      0     0      0    8865
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               9     3      6    8865
                                             34 COMRAM     7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _Countdown                                           16    16      0   15375
                                             56 COMRAM    16    16      0
                          _LCD_Clear
                       _LCD_Position
                          _LCD_Print
                    _TMR0_Initialize
                _TMR0_Read16BitTimer
                    _TMR0_StartTimer
                     _TMR0_StopTimer
               _TMR0_Write16BitTimer
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7    6366
                                             34 COMRAM    22    15      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     2      5    4325
                                             27 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4    3745
                                             11 COMRAM    16    12      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     978
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (6) _UART2_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_Write16BitTimer                                 2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Read16BitTimer                                  8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     3      3    5478
                                              1 COMRAM     6     3      3
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _LCD_Position                                         2     1      1    2750
                                              1 COMRAM     2     1      1
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      46
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _Calibrate_Sensors                                   17    15      2     296
                                              1 COMRAM    17    15      2
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _Backward                                             1     1      0      90
                                              1 COMRAM     1     1      0
                        _UART1_Write
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _Auto_Calibrate                                       5     5      0      47
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (1) _UART1_is_tx_ready                                    1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           0     0      0       0
                                NULL *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_DefaultErrorHandler                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Auto_Calibrate
     _UART1_Read
       NULL(Fake) *
       _UART1_DefaultErrorHandler *
       _UART1_DefaultFramingErrorHandler *
       _UART1_DefaultOverrunErrorHandler *
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_is_tx_ready
   _Backward
     _UART1_Write
     _UART1_is_tx_ready
   _Calibrate_Sensors
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_is_tx_ready
   _Countdown
     _LCD_Clear
       _UART1_Write
       _UART1_is_tx_ready
     _LCD_Position
       _UART1_Write
       _UART1_is_tx_ready
     _LCD_Print
       _UART1_Write
       _UART1_is_tx_ready
     _TMR0_Initialize
     _TMR0_Read16BitTimer
     _TMR0_StartTimer
     _TMR0_StopTimer
     _TMR0_Write16BitTimer
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
               _UART2_Write
   _Diagnostic_Menu
     _printf
       _vfprintf
   _Forward
     _UART1_Write
     _UART1_is_tx_ready
   _Get_Key
     _UART2_Read
       NULL(Fake) *
       _UART2_DefaultErrorHandler *
       _UART2_DefaultFramingErrorHandler *
       _UART2_DefaultOverrunErrorHandler *
     _UART2_Write
     _UART2_is_rx_ready
     _UART2_is_tx_ready
   _Get_Number
     _Get_Key
     _printf
   _LCD_Clear
   _LCD_Position
   _LCD_Print
   _LCD_PrintCharacter
     _UART1_Write
     _UART1_is_tx_ready
   _Left_Turn
     _UART1_Write
     _UART1_is_tx_ready
   _PIN_MANAGER_Initialize
   _Read_Battery_Voltage
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_is_tx_ready
   _Read_Calibrated_Sensors
   _Right_Turn
     _UART1_Write
     _UART1_is_tx_ready
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _Stop
     _Forward
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR0_StartTimer
   _TMR0_StopTimer
   _TMR0_Write16BitTimer
   _Turn_PD_ON
     _UART1_Write
     _UART1_is_tx_ready
   _UART1_Initialize
     _UART1_SetErrorHandler
     _UART1_SetFramingErrorHandler
     _UART1_SetOverrunErrorHandler
   _UART1_Write
   _UART1_is_tx_ready
   _UART2_Initialize
     _UART2_SetErrorHandler
     _UART2_SetFramingErrorHandler
     _UART2_SetOverrunErrorHandler
   _UART2_Read
   _UART2_is_rx_ready
   _printf
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      76        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhllhh    2E7      0       0      51        0.0%
BITBIGSFRllllll    1A3      0       0      74        0.0%
BITBIGSFRlhllhh    164      0       0      42        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      48       5       45.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     50      5F       1      100.0%
BITBIGSFRlhllhh     43      0       0      40        0.0%
BITBIGSFRlhllhh     3E      0       0      57        0.0%
BITBIGSFRhh         34      0       0      36        0.0%
BITBIGSFRlllllh     2E      0       0      68        0.0%
BITBIGSFRlllhh      29      0       0      65        0.0%
BITBIGSFRlllllh     19      0       0      72        0.0%
BITBIGSFRlhllhh     12      0       0      55        0.0%
BITBIGSFRlllllh     11      0       0      71        0.0%
BITBIGSFRllh         B      0       0      64        0.0%
BITBIGSFRlhllhh      6      0       0      39        0.0%
BITBIGSFRlhllhh      6      0       0      56        0.0%
BITBIGSFRlhllhh      5      0       0      45        0.0%
BITBIGSFRlhlllh      5      0       0      61        0.0%
BITBIGSFRlhllhl      5      0       0      59        0.0%
BITBIGSFRlhllll      5      0       0      63        0.0%
BITBIGSFRlhllhh      4      0       0      41        0.0%
BITBIGSFRlhllhl      4      0       0      58        0.0%
BITBIGSFRlhlllh      4      0       0      60        0.0%
BITBIGSFRlhllll      4      0       0      62        0.0%
BITBIGSFRhlh         4      0       0      37        0.0%
BITBIGSFRlhllhh      3      0       0      54        0.0%
BITBIGSFRlhh         3      0       0      38        0.0%
BITBIGSFRlhllhh      2      0       0      53        0.0%
BITBIGSFRlhllhh      2      0       0      52        0.0%
BITBIGSFRlhllhh      1      0       0      49        0.0%
BITBIGSFRlhllhh      1      0       0      50        0.0%
BITBIGSFRlhllhh      1      0       0      46        0.0%
BITBIGSFRlhllhh      1      0       0      47        0.0%
BITBIGSFRlhllhh      1      0       0      48        0.0%
BITBIGSFRlllllh      1      0       0      69        0.0%
BITBIGSFRlllllh      1      0       0      70        0.0%
BITBIGSFRlhllhh      1      0       0      43        0.0%
BITBIGSFRlhllhh      1      0       0      44        0.0%
BITBIGSFRlllllh      1      0       0      73        0.0%
BITBIGSFRllllh       1      0       0      67        0.0%
BITBIGSFRlllhl       1      0       0      66        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A7      75        0.0%
DATA                 0      0      A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 27 12:35:35 2024

                   __end_of_UART2_is_rx_ready DBDA               __end_of_TMR0_HasOverflowOccured DBF0  
                                          l85 F924                     __end_of_UART2_is_tx_ready DD32  
                                ___awdiv@sign 0006                       __end_of_Diagnostic_Menu EB38  
                                         l143 FB10                                           l401 DB1A  
                                         l146 EB36                                           l410 DB4A  
                                         l171 E3EE                                           l163 E3BA  
                                         l404 DB54                                           l158 E362  
                                         l407 DB5E                                           l184 EC96  
                                         l370 DD02                                           l434 E7C4  
                                         l371 DD04                                           l507 DE00  
                                         l363 E094                                           l380 E3F0  
                                         l452 DB26                                           l524 E2D8  
                                         l366 DBAC                                           l470 DC56  
                                         l631 DC06                                           l392 DC20  
                                         l464 DFC8                                           l449 DEAE  
                                         l297 EA14                                           l386 E484  
                                         l554 E16E                                           l634 DCD8  
                                         l730 DF66                                           l395 DB1C  
                                         l539 E100                                           l483 E65E  
                                         l652 DB2A                                           l628 DB96  
                                         l572 DB36                                           l389 DC0A  
                                         l661 DCB4                                           l733 DBD8  
                                         l398 DB1E                                           l655 DB2E  
                                         l495 DE52                                           l649 DBC2  
                                         l753 E520                                           l737 DD2E  
                                         l569 E1DC                                           l673 DBEE  
                                         l593 E5BE                                           l738 DD30  
                                         l667 DB88                                           l771 DB24  
                                         l747 E486                                           l756 DC24  
                                         l780 DB7C                                           l765 DB40  
                                         l774 DB20                                           l759 DC3A  
                                         l783 DB68                                           l768 DB22  
                                         l777 DB72                                           _PR2 3FAB  
                                         _abs DD32                                  ___awmod@sign 0006  
                                         tosl 3FFD                                           wreg 3FE8  
                    ?_Read_Calibrated_Sensors 0001                                    Countdown@i 0048  
                                 main@battery 0099                               Right_Turn@speed 0003  
                                        l1120 E70E                                          l1107 E948  
                                        ?_abs 0007                                          l3001 E91A  
                                        l3011 E940                                          l3003 E91C  
                                        l3005 E922                                          l3021 E67A  
                                        l3007 E928                                          l3031 E6AE  
                                        l3023 E67E                                          l3015 E660  
                                        l3103 DD32                                          l3111 ECC8  
                                        l3009 E938                                          l3041 E6E8  
                                        l3033 E6B6                                          l3025 E68C  
                                        l3017 E664                                          l3105 DD40  
                                        l3121 ED18                                          l3113 ECD4  
                                        l4001 F756                                          l3035 E6C4  
                                        l3043 E6EE                                          l3027 E694  
                                        l3019 E672                                          l3051 E1DE  
                                        l3131 EDBC                                          l3123 ED3A  
                                        l3115 ECE0                                          l3107 EC98  
                                        l3211 E4AC                                          l3203 E486  
                                        l4011 F79A                                          l4003 F764  
                                        l3301 E5C0                                          l3045 E6FE  
                                        l3037 E6DA                                          l3029 E6A6  
                                        l3061 E216                                          l3053 E1E6  
                                        l3141 EE0E                                          l3133 EDD8  
                                        l3125 ED56                                          l3117 ECE4  
                                        l3109 ECA0                                          l3221 E502  
                                        l3213 E4C6                                          l3205 E496  
                                        l4101 FAC0                                          l4021 F7E0  
                                        l4005 F774                                          l1374 E250  
                                        l1622 DD64                                          l1614 DF02  
                                        l3231 DCEE                                          l3311 E5FC  
                                        l3303 E5C4                                          l3047 E706  
                                        l3039 E6E2                                          l3071 E242  
                                        l3063 E21C                                          l3055 E1F8  
                                        l1367 E248                                          l3143 EE1E  
                                        l3151 EE54                                          l3135 EDDC  
                                        l3127 ED74                                          l3119 ECF6  
                                        l1615 DF0A                                          l3223 E51C  
                                        l3215 E4D6                                          l3207 E49A  
                                        l4103 FACA                                          l4031 F830  
                                        l4023 F7EC                                          l4015 F7AE  
                                        l4007 F78E                                          l1384 E02C  
                                        l3233 DCFE                                          l3313 E610  
                                        l3305 E5D8                                          l3401 DC94  
                                        l3065 E232                                          l3057 E200  
                                        l3081 DFFA                                          l1377 E024  
                                        l3073 DFCA                                          l3161 EED6  
                                        l3145 EE2C                                          l3137 EDEE  
                                        l3129 ED8C                                          l3153 EE72  
                                        l3321 DD6E                                          l3217 E4D8  
                                        l3209 E4AA                                          l3241 DD06  
                                        l4105 FAEA                                          l4041 F88A  
                                        l4033 F842                                          l4025 F802  
                                        l4017 F7D8                                          l4009 F796  
                                        l1634 E884                                          l1554 DDAE  
                                        l3227 DCDA                                          l3315 E64A  
                                        l3307 E5DE                                          l3403 DCA0  
                                        l3067 E23A                                          l3059 E208  
                                        l3083 E010                                          l3075 DFDC  
                                        l1619 DD4C                                          l3091 E7D8  
                                        l3171 EF40                                          l3163 EEFA  
                                        l3155 EE94                                          l3147 EE34  
                                        l3139 EDFE                                          l3251 DEB0  
                                        l3323 DD76                                          l3219 E4F2  
                                        l3243 DD0A                                          l3411 DB56  
                                        l4107 FAF0                                          l4051 F932  
                                        l4043 F894                                          l4035 F850  
                                        l4027 F816                                          l3421 E400  
                                        l3237 DC0A                                          l3229 DCDE  
                                        l3317 E64C                                          l3309 E5F2  
                                        l3405 DCAC                                          l3069 E23C  
                                        l3085 E018                                          l3077 DFE4  
                                        l3093 E7EA                                          l3173 EF5E  
                                        l3165 EF16                                          l3157 EEB0  
                                        l3181 EFA8                                          l3149 EE52  
                                        l3253 DEB8                                          l3325 DD7E  
                                        l3501 EB52                                          l3245 DD1A  
                                        l3341 E398                                          l3333 E364  
                                        l3261 E962                                          l3413 DB42  
                                        l4109 FAF6                                          l4061 F960  
                                        l4053 F936                                          l4045 F8A2  
                                        l4037 F860                                          l4029 F81E  
                                        l3431 E43E                                          l3423 E404  
                                        l3239 DC1A                                          l3415 DB98  
                                        l3087 E01E                                          l3079 DFEC  
                                        l3095 E7F4                                          l3191 EFF4  
                                        l3183 EFB4                                          l3175 EF60  
                                        l3167 EF1A                                          l3159 EED2  
                                        l3255 DEC4                                          l3327 DD9C  
                                        l3319 DD66                                          l3511 EB96  
                                        l3503 EB5C                                          l3247 DD2A  
                                        l3351 E3DA                                          l3343 E39E  
                                        l3335 E36A                                          l3271 E9CA  
                                        l3263 E96C                                          l4071 F9B6  
                                        l4063 F97E                                          l4055 F93A  
                                        l4039 F86C                                          l3433 E440  
                                        l3425 E414                                          l3281 DC3C  
                                        l3097 E812                                          l3089 E7C6  
                                        l3169 EF2C                                          l3257 DEE0  
                                        l3329 DDA6                                          l3521 EBD8  
                                        l3513 EBA2                                          l3505 EB60  
                                        l1649 DC74                                          l3353 E3EC  
                                        l3345 E3B0                                          l3337 E37E  
                                        l3601 E33C                                          l3273 E9D0  
                                        l3265 E9C4                                          l3361 E268  
                                        l3409 DB4C                                          l4081 F9EA  
                                        l4073 F9C6                                          l4065 F988  
                                        l4057 F944                                          l4049 F8AA  
                                        l3435 E458                                          l3427 E416  
                                        l3419 E3F0                                          l3283 DC3C  
                                        l3291 DDC6                                          l3099 E848  
                                        l3179 EF76                                          l1595 EE66  
                                        l3187 EFC0                                          l3531 EC28  
                                        l3523 EBEC                                          l3515 EBB8  
                                        l3507 EB6A                                          l3339 E384  
                                        l3347 E3BA                                          l3603 E342  
                                        l3611 DE04                                          l3275 E9D2  
                                        l3267 E9C6                                          l3259 E94A  
                                        l3443 DCB6                                          l3371 E2A2  
                                        l3363 E26E                                          l3451 DB60  
                                        l4091 FA80                                          l4083 F9FA  
                                        l4075 F9CA                                          l4067 F996  
                                        l4059 F954                                          l1596 EFFC  
                                        l3437 E468                                          l3429 E42E  
                                        l3285 DC50                                          l3293 DDCC  
                                        l3381 DBB6                                          l3189 EFE8  
                                        l3541 EC92                                          l3533 EC32  
                                        l3525 EBF6                                          l3517 EBBA  
                                        l3509 EB84                                          l3349 E3CA  
                                        l3605 E34E                                          l3621 DE38  
                                        l3613 DE04                                          l3445 DBF0  
                                        l3277 E9D4                                          l3269 E9C8  
                                        l3453 DB8A                                          l3373 E2B6  
                                        l3365 E282                                          l3357 E254  
                                        l3701 E550                                          l3461 E084  
                                        l4093 FA8A                                          l4085 F9FE  
                                        l4077 F9D4                                          l4069 F9AC  
                                        l4181 F8BE                                          l3439 E480  
                                        l3631 E0B2                                          l3551 E710  
                                        l3295 DDE0                                          l3287 DDB2  
                                        l3383 DBBC                                          l3391 DB28  
                                        l4183 EC64                                          l3527 EC0A  
                                        l3519 EBCA                                          l3199 DBC4  
                                        l3607 E360                                          l3623 DE4C  
                                        l3615 DE18                                          l3279 E9D6  
                                        l3375 E2C6                                          l3367 E288  
                                        l3359 E254                                          l3711 E58A  
                                        l3703 E556                                          l3463 E090  
                                        l3455 E02E                                          l3447 DB6A  
                                        l3471 DF56                                          l4095 FA98  
                                        l4087 FA06                                          l4079 F9E4  
                                        l3641 E0FA                                          l3633 E0C6  
                                        l3625 E098                                          l3553 E710  
                                        l3297 DDE6                                          l3289 DDB2  
                                        l3385 DBBE                                          l3393 DB2C  
                                        l4185 EF9A                                          l3529 EC14  
                                        l3537 EC50                                          l3617 DE1E  
                                        l3481 DF7C                                          l3377 E2D0  
                                        l3369 E29C                                          l3713 E59E  
                                        l3705 E56A                                          l3457 E06C  
                                        l3449 DB74                                          l3473 DF62  
                                        l3465 DF0C                                          l4089 FA62  
                                        l3801 F1DC                                          l3721 F006  
                                        l3635 E0CC                                          l3627 E098  
                                        l3571 E772                                          l3563 E72E  
                                        l3555 E724                                          l3299 DDFA  
                                        l3379 DBB0                                          l3387 DB7E  
                                        l3539 EC82                                          l3395 DC58  
                                        l3475 EA16                                          l3619 DE32  
                                        l3651 E132                                          l3643 E104  
                                        l3491 DFB6                                          l3483 DF82  
                                        l3547 DBDA                                          l3715 E5A4  
                                        l3707 E570                                          l3459 E078  
                                        l3467 DF3E                                          l4099 FAAC  
                                        l3811 F222                                          l3803 F1E8  
                                        l3731 F022                                          l3723 F00A  
                                        l3637 E0E0                                          l3629 E0AC  
                                        l3573 E7B0                                          l3565 E742  
                                        l3557 E72A                                          l3389 DB82  
                                        l3397 DC5C                                          l3581 E2DA  
                                        l3653 E138                                          l3645 E104  
                                        l3485 DF96                                          l3477 DF68  
                                        l3661 E172                                          l3717 E5B8  
                                        l3709 E584                                          l3469 DF4A  
                                        l3901 F4CA                                          l3821 F24A  
                                        l3813 F22A                                          l3805 F1FA  
                                        l3741 F050                                          l3733 F026  
                                        l3725 F00E                                          l3639 E0E6  
                                        l3575 E7B2                                          l3567 E750  
                                        l3495 EB3A                                          l3583 E2DC  
                                        l3655 E14C                                          l3647 E118  
                                        l3487 DF9C                                          l3479 DF68  
                                        l3671 E1A8                                          l3663 E172  
                                        l3911 F518                                          l3903 F4D6  
                                        l3831 F2B8                                          l3823 F26E  
                                        l3815 F232                                          l3807 F202  
                                        l3751 F098                                          l3743 F06E  
                                        l3735 F02A                                          l3727 F010  
                                        l3719 EFFE                                          l3681 DE54  
                                        l3577 E7C2                                          l3569 E764  
                                        l3497 EB3E                                          l3593 E300  
                                        l3585 E2E4                                          l3657 E152  
                                        l3649 E11E                                          l3489 DFB0  
                                        l3673 E1BC                                          l3665 E186  
                                        l3921 F566                                          l3913 F530  
                                        l3905 F4E2                                          l3833 F2BC  
                                        l3825 F298                                          l3817 F236  
                                        l3809 F21A                                          l3841 F2EE  
                                        l3761 F0CC                                          l3753 F09E  
                                        l3745 F078                                          l3737 F034  
                                        l3729 F014                                          l3691 DE9A  
                                        l3683 DE54                                          l2971 E886  
                                        l3499 EB42                                          l3595 E310  
                                        l3587 E2EA                                          l3659 E166  
                                        l3675 E1C2                                          l3667 E18C  
                                        l3931 F59E                                          l3923 F56E  
                                        l3915 F53E                                          l3907 F500  
                                        l3851 F348                                          l3843 F304  
                                        l3835 F2C8                                          l3771 F112  
                                        l3763 F0D0                                          l3755 F0A8  
                                        l3747 F086                                          l3739 F044  
                                        l3685 DE68                                          l2981 E8B2  
                                        l2973 E88A                                          l2965 DC24  
                                        l3597 E320                                          l3677 E1D6  
                                        l3669 E1A0                                          l3693 E522  
                                        l3941 F5DC                                          l3933 F5AC  
                                        l3925 F574                                          l3917 F54E  
                                        l3909 F50A                                          l3861 F392  
                                        l3853 F350                                          l3845 F312  
                                        l3837 F2D4                                          l3829 F2A0  
                                        l3781 F150                                          l3773 F11E  
                                        l3765 F0DA                                          l3757 F0B4  
                                        l3749 F092                                          l3687 DE6E  
                                        l2991 E8E0                                          l2983 E8BA  
                                        l2975 E898                                          l2967 DC34  
                                        l3599 E338                                          l3679 DB30  
                                        l3695 E522                                          l3951 F61A  
                                        l3943 F5E2                                          l3935 F5BC  
                                        l3927 F590                                          l3919 F55A  
                                        l3871 F3C4                                          l3855 F354  
                                        l3847 F322                                          l3839 F2DE  
                                        l3791 F194                                          l3783 F158  
                                        l3775 F128                                          l3767 F0E8  
                                        l3759 F0B8                                          l3689 DE86  
                                        l2993 E8E8                                          l2985 E8BE  
                                        l2977 E8A0                                          l2969 DB3A  
                                        l3697 E536                                          l3961 F656  
                                        l3953 F62A                                          l3945 F5FE  
                                        l3937 F5C8                                          l3881 F408  
                                        l3873 F3D0                                          l3865 F39A  
                                        l3849 F33C                                          l3793 F1BE  
                                        l3785 F15C                                          l3777 F140  
                                        l3769 F0F8                                          l2995 E8F6  
                                        l2987 E8C6                                          l2979 E8A4  
                                        l3699 E53C                                          l3971 F698  
                                        l3963 F65E                                          l3955 F636  
                                        l3939 F5D4                                          l3891 F46E  
                                        l3883 F41A                                          l3875 F3D8  
                                        l3867 F3A8                                          l3859 F368  
                                        l3779 F148                                          l2997 E8FC  
                                        l2989 E8D8                                          l3981 F6D6  
                                        l3973 F6A6                                          l3965 F668  
                                        l3957 F642                                          l3949 F60C  
                                        l3893 F49E                                          l3885 F42A  
                                        l3877 F3E8                                          l3869 F3B8  
                                        l3797 F1C6                                          l3789 F170  
                                        l2999 E912                                          l3983 F6E2  
                                        l3975 F6B6                                          l3967 F68A  
                                        l3959 F64A                                          l3887 F43C  
                                        l3879 F400                                          l3799 F1D8  
                                        l3993 F724                                          l3985 F6EA  
                                        l3977 F6C2                                          l3897 F4AC  
                                        l3889 F444                                          l3995 F732  
                                        l3987 F6F4                                          l3979 F6CE  
                                        l3899 F4BA                                          l3997 F742  
                                        l3989 F716                                          l3999 F74E  
                                        STR_1 FFA2                                          STR_2 FFE5  
                                        STR_3 FF1A                                          STR_4 FF87  
                                        STR_5 FCA0                                          STR_6 FC1D  
                                        STR_7 FE2E                                          STR_8 FF08  
                                        STR_9 FDD5                                          u2000 E610  
                                        u2001 E60C                                          u2010 E646  
                                        u2020 E65E                                          u2100 E282  
                                        u2021 E65A                                          u2101 E27E  
                                        u2030 E37E                                          u2110 E29C  
                                        u2031 E37A                                          u2111 E298  
                                        u2200 E468                                          u2040 E398  
                                        u2120 E2B6                                          u2201 E464  
                                        u2017 E638                                          u2041 E394  
                                        u2121 E2B2                                          u2050 E3B0  
                                        u2130 E2C6                                          u2051 E3AC  
                                        u2131 E2C2                                          u2140 DBAA  
                                        u2300 E764                                          u1500 E68C  
                                        u1420 DC34                                          u2060 E3CA  
                                        u2220 DF7C                                          u2141 DBA4  
                                        u2301 E760                                          u1501 E688  
                                        u1421 DC30                                          u2061 E3C6  
                                        u2221 DF78                                          _LATA 3FBA  
                                        u2150 E400                                          u2310 E7C2  
                                        u1430 E898                                          u1510 E6A6  
                                        u2070 E3DA                                          u2230 DF96  
                                        _LATB 3FBB                                          u2151 E3FC  
                                        u2311 E7BE                                          u1431 E894  
                                        u1511 E6A2                                          u2071 E3D6  
                                        u2231 DF92                                          _LATC 3FBC  
                                        u2160 E414                                          u2400 E0C6  
                                        u1440 E8B2                                          u1520 E6C4  
                                        u1600 E010                                          u2080 E3EC  
                                        u2320 E2FC                                          u2240 DFB0  
                                        _LATD 3FBD                                          u2161 E410  
                                        u2401 E0C2                                          u1441 E8AE  
                                        u1521 E6C0                                          u1601 E00C  
                                        u2081 E3E8                                          u2321 E2F8  
                                        u2241 DFAC                                          _LATE 3FBE  
                                        u2218 E46E                                          u2146 DBAC  
                                        u2410 E0E0                                          u1450 E8D8  
                                        u1530 E6DA                                          u1610 E7D8  
                                        u2250 EBB8                                          u2330 E310  
                                        u2090 E268                                          u2219 E480  
                                        u2411 E0DC                                          u1451 E8D4  
                                        u1531 E6D6                                          u1611 E7D4  
                                        u2251 EBB4                                          u2331 E30C  
                                        u2091 E264                                          u2180 E43E  
                                        u2420 E0FA                                          u1460 E8F6  
                                        u1540 E6FE                                          u1620 E7EA  
                                        u1700 ED8A                                          u2260 EC92  
                                        u2340 E320                                          u2500 E1D6  
                                        u2181 E43A                                          u2421 E0F6  
                                        u1461 E8F2                                          u1541 E6FA  
                                        u1621 E7E6                                          u2261 EC8E  
                                        u2341 E31C                                          u2501 E1D2  
                                        u2510 DE68                                          u1470 E912  
                                        u1550 E1F8                                          u1630 E812  
                                        u1710 EDEE                                          u2350 E360  
                                        u2430 E118                                          u2270 DBEC  
                                        u2511 DE64                                          u1471 E90E  
                                        u1551 E1F4                                          u1631 E80E  
                                        u1711 EDEA                                          u2351 E35C  
                                        u2431 E114                                          u2271 DBE6  
                                        u2520 DE82                                          u2280 E724  
                                        u1480 E938                                          u1560 E216  
                                        u1640 E848                                          u1720 EDFE  
                                        u1800 DBD6                                          u2360 DE18  
                                        u2440 E132                                          u2600 E5B8  
                                        u2521 DE7E                                          u2281 E720  
                                        u1481 E934                                          u1561 E212  
                                        u1641 E844                                          u1721 EDFA  
                                        u1801 DBD0                                          u2361 DE14  
                                        u2441 E12E                                          u2601 E5B4  
                                        u2178 E41C                                          u2530 DE9A  
                                        u2290 E742                                          u1490 E672  
                                        u1570 E232                                          u1650 DD40  
                                        u1730 EE0E                                          u1810 E496  
                                        u2370 DE32                                          u2450 E14C  
                                        u2610 F022                                          _T2PR 3FAB  
                                        u2179 E42E                                          u2531 DE96  
                                        u2291 E73E                                          u1491 E66E  
                                        u1571 E22E                                          u1651 DD3C  
                                        u1731 EE0A                                          u1811 E492  
                                        u2371 DE2E                                          u2451 E148  
                                        u2611 F01E                                          u1900 DC1A  
                                        u2540 DEAE                                          u1580 DFDC  
                                        u1740 EE1E                                          u1660 ECC8  
                                        u1820 E4AA                                          u2380 DE4C  
                                        u2460 E166                                          u2276 DBEE  
                                        u2700 F41A                                          u2620 F0CC  
                                        u1901 DC16                                          u2541 DEAA  
                                        u1581 DFD8                                          u1741 EE1A  
                                        u1661 ECC4                                          u1821 E4A6  
                                        u2381 DE48                                          u2461 E162  
                                        u2701 F416                                          u2621 F0C8  
                                        u2198 E446                                          u2390 E0AC  
                                        u1590 DFFA                                          u1750 EE66  
                                        u1670 ED18                                          u1806 DBD8  
                                        u1910 DD1A                                          u2470 E186  
                                        u2550 E536                                          u2710 F42A  
                                        u2630 F16C                                          u2199 E458  
                                        u2391 E0A8                                          u1591 DFF6  
                                        u1751 EE62                                          u1671 ED14  
                                        u1911 DD16                                          u2471 E182  
                                        u2551 E532                                          u2711 F426  
                                        u2631 F168                                          u1760 EE94  
                                        u1680 ED3A                                          u1840 E4D6  
                                        u1920 DD2A                                          u2480 E1A0  
                                        u2560 E550                                          u2720 F7AA  
                                        u2640 F1D8                                          u1761 EE90  
                                        u1681 ED36                                          u1841 E4D2  
                                        u1921 DD26                                          u2481 E19C  
                                        u2561 E54C                                          u2721 F7A6  
                                        u2641 F1D4                                          u1770 EF2C  
                                        u1690 ED88                                          u1930 DF02  
                                        u2490 E1BC                                          u2570 E56A  
                                        u2730 F816                                          u2650 F1FA  
                                        u1771 EF28                                          u1691 ED82  
                                        u1931 DEFE                                          u2491 E1B8  
                                        u2571 E566                                          u2731 F812  
                                        u2651 F1F6                                          u1940 DC50  
                                        u1780 EF3C                                          u1860 E502  
                                        u2580 E584                                          u2740 F830  
                                        u2660 F246                                          u1941 DC4C  
                                        u1781 EF38                                          u1861 E4FE  
                                        u2581 E580                                          u2741 F82C  
                                        u2661 F242                                          u1950 DDC6  
                                        u1790 EF72                                          u1838 E4B2  
                                        u2590 E59E                                          u2750 F842  
                                        u2670 F2B8                                          u1951 DDC2  
                                        u1791 EF6E                                          u1839 E4C6  
                                        u2591 E59A                                          u2751 F83E  
                                        u2807 F7F6                                          u2671 F2B4  
                                        u1880 DCEE                                          u1960 DDE0  
                                        u2760 F932                                          u2680 F300  
                                        u1881 DCEA                                          u1961 DDDC  
                                        u2817 F9A0                                          u2761 F92E  
                                        u2681 F2FC                                          u1890 DCFE  
                                        u1970 DDFA                                          u1858 E4DE  
                                        u2770 FAAC                                          u2690 F364  
                                        u1891 DCFA                                          u1971 DDF6  
                                        u1859 E4F2                                          u2771 FAA8  
                                        u2827 F9F0                                          u2691 F360  
                                        u1980 E5D8                                          u2780 FAC0  
                                        _PMD0 39C0                                          u1981 E5D4  
                                        u2837 FB00                                          u2781 FABC  
                                        _PMD1 39C1                                          u1990 E5F2  
                                        u1878 E508                                          u2790 FAEA  
                                        _PMD2 39C2                                          u1991 E5EE  
                                        u1879 E51C                                          u2791 FAE6  
                                        _PMD3 39C3                                          _PMD4 39C4  
                                        _PMD5 39C5                                          _PMD6 39C6  
                                        _PMD7 39C7                                          _TMR2 3FAA  
                                        _WPUA 3A41                                          _WPUB 3A51  
                                        _WPUC 3A61                                          _WPUD 3A71  
                                        _WPUE 3A81                                          _Stop DB30  
                                        abs@a 0007                                          _dbuf 0060  
                                        _main EFFE                                 ?_LCD_Position 0002  
                                        _prec 0055                               _TMR0_StartTimer DB28  
                                        _nout 0051                                          fsr1h 3FE2  
                                        fsr2h 3FDA                                          indf1 3FE7  
                                        indf2 3FDF                                          fsr1l 3FE1  
                                        fsr2l 3FD9                                          prodl 3FF3  
                                        start FFFC                               __end_of_Get_Key E3F0  
                                ___param_bank 0000                                   ?_UART1_Read 0001  
                             __end_of_Forward E2DA                                   ?_UART2_Read 0001  
                                       ??_abs 0009                       __end_of_TMR0_Initialize DBC4  
                                  _Get_Number E2DA                 __end_of_OSCILLATOR_Initialize DC08  
                                       ?_Stop 0001                                         ?_main 0001  
                             __end_of___awdiv E94A                                         STR_10 FC4A  
                                       STR_11 FE2E                                         STR_12 FF08  
                                       STR_20 FFC6                                         STR_21 FCA0  
                                       STR_13 FDF3                                         STR_22 FC87  
                                       STR_30 FFE5                                         STR_14 FE80  
                                       STR_23 FBC0                                         STR_15 FFAB  
                                       STR_31 FE98                                         STR_24 FCA0  
                                       STR_32 FF7E                                         STR_40 FF6C  
                                       STR_16 FF48                                         STR_41 FCA0  
                                       STR_33 FCA0                                         STR_17 FFD6  
                                       STR_25 FC77                                         STR_42 FBF0  
                                       STR_18 FCA0                                         STR_50 FF5A  
                                       STR_26 FEF4                                         STR_34 FBF0  
                                       STR_51 FCA0                                         STR_19 FF08  
                                       STR_35 FFF1                                         STR_27 FFDE  
                                       STR_43 FB15                                         STR_44 FFEB  
                                       STR_52 FFCE                                         STR_60 FFBD  
                                       STR_36 FF99                                         STR_28 FF90  
                             __end_of___awmod E710                                         STR_37 FCA0  
                                       STR_29 FCA0                                         STR_53 FFF6  
                                       STR_45 FF75                                         STR_61 FF51  
                                       STR_70 FCA0                                         STR_46 FCA0  
                                       STR_62 FFF1                                         STR_54 FF07  
                                       STR_38 FBC2                                         STR_55 FBC0  
                                       STR_63 FBBF                                         STR_47 FBF0  
                                       STR_39 FFF1                                         STR_71 FE11  
                                       STR_48 FB15                                         STR_56 FFA2  
                                       STR_80 FEDE                                         STR_72 FDB7  
                                       STR_64 FD95                                         STR_57 FFE5  
                                       STR_49 FFEB                                         STR_81 FEB0  
                                       STR_65 FD2F                                         STR_73 FCA3  
                                       STR_90 FF63                                         STR_58 FF36  
                                       STR_82 FEC7                                         STR_66 FD73  
                                       STR_74 FCEA                                         STR_75 FBBF  
                                       STR_59 FFE5                                         STR_91 FF24  
                                       STR_83 FE4B                                         STR_67 FD51  
                                       STR_84 FBBF                                         STR_68 FD2F  
                                       STR_92 FF2D                                         STR_76 FB5C  
                                       STR_77 FBBF                                         STR_69 FD95  
                                       STR_93 FF3F                                         STR_85 FE67  
                                       STR_86 FCA0                                         STR_94 FF63  
                                       STR_78 FD0D                                         STR_87 FCA0  
                                       STR_79 FCC7                                         STR_88 FB93  
                                       STR_89 FFB4                               ___awdiv@divisor 0003  
                                       _U1P1H 3DED                                         _U1P2H 3DEF  
                                       _U1P3H 3DF1                                         _U1P1L 3DEC  
                                       _U1P2L 3DEE                                         _T2CON 3FAC  
                                       _U1P3L 3DF0                                         _U2P1L 3DD4  
                                       _U2P2L 3DD6                                         _U2P3L 3DD8  
                                       _T2HLT 3FAD                               __end_of___lwdiv E252  
                                       _T2TMR 3FAA                                         _U1UIR 3DF8  
                                       _T2RST 3FAF                                         _U1RXB 3DE8  
                                       _U2UIR 3DE0                               __end_of___lwmod E02E  
                                       _U1TXB 3DEA                                         _U2RXB 3DD0  
                                       _U2TXB 3DD2                               ___awdiv@counter 0005  
                                       _OSCEN 39DD                                  vfpfcnvrt@cnt 0013  
                                vfpfcnvrt@fmt 000E                                         _TMR0H 3FB7  
                                       _TMR0L 3FB6                                         _TRISA 3FC2  
                                       _TRISB 3FC3                                         _TRISC 3FC4  
                                       _TRISD 3FC5                                         _TRISE 3FC6  
                                       _flags 0057                                         _fputc E7C6  
                                       _width 0053                                         _putch DB38  
                                       main@i 00A1                   __end_of_TMR0_Read16BitTimer DCB6  
                                       pclath 3FFA                                         tablat 3FF5  
                            __end_of_Backward E102                                ??_LCD_Position 0003  
                                       status 3FD8                               __end_of_sprintf DDB0  
                             Countdown@counts 0044           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler DB1E            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler DB1C  
                             Countdown@length 0047                  __end_of_TMR0_Write16BitTimer DB8A  
              TMR0_Read16BitTimer@readValHigh 0008                ??_UART2_SetOverrunErrorHandler 0003  
                             __initialization DC76                                  __end_of_Stop DB38  
                                __end_of_main FB14                                  Countdown@msg 003B  
                 ??_UART1_DefaultErrorHandler 0001                              ?_Diagnostic_Menu 0001  
                                ?_UART1_Write 0001                                        ??_Stop 0003  
                                ?_UART2_Write 0001               __end_of_Read_Calibrated_Sensors DB28  
                       _UART1_is_tx_ready$664 0001                                        ??_main 0049  
                           __end_of_LCD_Clear DC58                              ??_Auto_Calibrate 0002  
                               __activetblptr 0003                             __end_of_LCD_Print E660  
                            _UART1_Initialize E02E                            _LCD_PrintCharacter DE02  
                     __end_of_TMR0_StartTimer DB2C                                  LCD_Print@str 0002  
                                      ?_fputc 0003                              ___awdiv@dividend 0001  
                                      _ANSELA 3A40                                        ?_putch 0001  
                                      _ANSELB 3A50                                        _ANSELC 3A60  
                                      _ANSELD 3A70                                        _ANSELE 3A80  
                                      _T0CON0 3FB8                                        _T0CON1 3FB9  
                                      _RB1I2C 3A5A                                        _RB2I2C 3A5B  
                                      _RD0I2C 3A7A                                        _U1CON0 3DF2  
                                      _U1CON1 3DF3                                        _U1CON2 3DF4  
                                      _RD1I2C 3A7B                                        _RC3I2C 3A6A  
                                      _RC4I2C 3A6B                                        _U1BRGH 3DF6  
                                      _U1FIFO 3DF7                                        _U2CON0 3DDA  
                                      _U2CON1 3DDB                                        _U2CON2 3DDC  
                                      _U1BRGL 3DF5                                        _U2BRGH 3DDE  
                                      _U2FIFO 3DDF                                        _U2BRGL 3DDD  
                                      _RC0PPS 3A10                                        _RC1PPS 3A11  
                                      _RC3PPS 3A13                                        _RC4PPS 3A14  
                                      _RB6PPS 3A0E                                        _RC5PPS 3A15  
                                      _ODCONA 3A42                                        _ODCONB 3A52  
                                      _RC6PPS 3A16                                        _ODCONC 3A62  
                                      _ODCOND 3A72                                        _ODCONE 3A82  
                                      _INLVLA 3A44                                        _INLVLB 3A54  
                                      _INLVLC 3A64                                        _INLVLD 3A74  
                                      _INLVLE 3A84                                        _OSCFRQ 39DF  
                          Calibrate_Sensors@i 0012                                 vfpfcnvrt@done 0012  
                                   ??_Get_Key 0002                         _UART1_SetErrorHandler DB42  
                         ?_LCD_PrintCharacter 0001                                    _Right_Turn E170  
                                   ??_Forward 0002                              _UART2_Initialize DF0C  
                                _CCPTMRS1bits 3F5F                     _UART2_OverrunErrorHandler 00A4  
                                vfprintf@cfmt 0021                              main@differential 0098  
                                   ??___awdiv 0005                                     ??___awmod 0005  
                  ?_UART2_DefaultErrorHandler 0001                                     ??___lwdiv 0005  
                                   ??___lwmod 0005                              ?_TMR0_Initialize 0001  
                                      clear_0 DC7C                                        clear_1 DC88  
                                 ?_Get_Number 0001                              ___awdiv@quotient 0007  
                             ___awmod@divisor 0003                                        isa$std 0001  
                             ___awmod@counter 0005                                        _printf DC58  
                        ??_LCD_PrintCharacter 0002                                        fputc@c 0003  
                              _PMD_Initialize DCB6                                  __mediumconst FB14  
                                      tblptrh 3FF7                                        tblptrl 3FF6  
                                      tblptru 3FF8                              __end_of_vfprintf DF0C  
        __end_of_UART1_SetOverrunErrorHandler DB60                  _UART1_SetOverrunErrorHandler DB56  
                   _UART1_DefaultErrorHandler DB1A                                     ??_sprintf 002A  
                TMR0_Initialize@TMR0control_0 0002                  TMR0_Initialize@TMR0control_1 0001  
                           _SYSTEM_Initialize DB8A                                    __accesstop 0060  
                     __end_of__initialization DC8E                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 0001                        Right_Turn@differential 0002  
                                  _Turn_PD_ON E522                  __end_of_Read_Battery_Voltage DFCA  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler DB60  
                         ??_SYSTEM_Initialize 0001                                 __end_of_fputc E886  
           __end_of_UART2_DefaultErrorHandler DB22                                 __end_of_putch DB42  
                           __end_of_Left_Turn E170                                 Countdown@time 0046  
                           __end_of_Countdown EC98                        __end_of_PMD_Initialize DCDA  
                                Forward@speed 0002                          __end_of_LCD_Position DE02  
                                   ?_Backward 0001                     _UART1_FramingErrorHandler 005E  
                        _TMR0_Write16BitTimer DB7E                              ?_TMR0_StartTimer 0001  
                                     ??_fputc 0007                     __end_of_SYSTEM_Initialize DB98  
                                     ??_putch 0002                                    __pbssBANK0 0060  
               ?_UART1_SetOverrunErrorHandler 0001                        ?_UART1_SetErrorHandler 0001  
                                 ?_Right_Turn 0002                                    __pnvCOMRAM 005A  
                             Get_Number@digit 002B                                  ??_UART1_Read 0001  
                                ??_UART2_Read 0001          __end_of_UART2_SetFramingErrorHandler DB74  
                _UART2_SetFramingErrorHandler DB6A                               Get_Number@value 002A  
                                     ?_printf 0023                               ?_PMD_Initialize 0001  
                                  ??_Backward 0002                                       _U1ERRIE 3DFA  
                                     _U1ERRIR 3DF9                                       _T2INPPS 3ACA  
                               LCD_Position@x 0003                                 LCD_Position@y 0002  
                                     _U2ERRIE 3DE2                                       _U2ERRIR 3DE1  
                              Left_Turn@speed 0003                                       _U1RXPPS 3AE5  
                                     _U2RXPPS 3AE8                         ?_TMR0_Write16BitTimer 0001  
                                     _OSCCON1 39D9                                       _OSCCON3 39DB  
                                     _OSCTUNE 39DE                                       _PWM7DCH 3F65  
                                     _PWM7DCL 3F64                                       _PWM7CON 3F66  
                                     _SLRCONA 3A43                                       _SLRCONB 3A53  
                                     _SLRCONC 3A63                                       _SLRCOND 3A73  
                                     _SLRCONE 3A83                               LCD_Print@length 0004  
                     _TMR0_HasOverflowOccured DBDA                            __end_of_UART1_Read E486  
                          __end_of_UART2_Read E522                                       _Get_Key E364  
                           _Calibrate_Sensors E710                                       _Forward E252  
                          ?_Calibrate_Sensors 0002                                       __Hparam 0000  
                                 ?_Turn_PD_ON 0001                         Left_Turn@differential 0002  
                      ?_UART2_SetErrorHandler 0001                                       __Lparam 0000  
                    __end_of_UART1_Initialize E096                    TMR0_Read16BitTimer@readVal 0005  
                                     ___awdiv E886                                       ___awmod E660  
                         ??_Calibrate_Sensors 0004                                       ___lwdiv E1DE  
                                     ___lwmod DFCA                                     ?_vfprintf 001C  
               ?_UART2_SetFramingErrorHandler 0001                                       __pcinit DC76  
                                     __ramtop 1000                                       __ptext0 EFFE  
                                     __ptext1 DF0C                                       __ptext2 DB74  
                                     __ptext3 DB6A                                       __ptext4 DB60  
                                     __ptext5 E02E                                       __ptext6 DB56  
                                     __ptext7 DB4C                                       __ptext8 DB42  
                                     __ptext9 E522           fp__UART2_DefaultOverrunErrorHandler 0000  
    __end_of_UART2_DefaultOverrunErrorHandler DB26            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler DB24  
                       _OSCILLATOR_Initialize DBF0                                     _T2CONbits 3FAC  
                            ___awmod@dividend 0001                      ??_PIN_MANAGER_Initialize 0001  
                                   _T2HLTbits 3FAD                      __end_of_UART2_Initialize DF68  
                                   _LCD_Clear DC3C                          _Read_Battery_Voltage DF68  
                                   _LCD_Print E5C0                                       main@any 008A  
                                     _sprintf DD66                                       main@key 008B  
                                     main@msg 008E                                       main@sum 009C  
                        end_of_initialization DC8E                     __end_of_Calibrate_Sensors E7C6  
                                   _T2RSTbits 3FAF                                       fputc@fp 0005  
              ??_UART1_SetOverrunErrorHandler 0003                             __end_of_vfpfcnvrt EFFE  
                      _UART2_is_tx_ready$1035 0001                                       postdec2 3FDD  
                                     postinc0 3FEE                                       postinc1 3FE6  
                                     postinc2 3FDE                              vfpfcnvrt@convarg 0017  
                 ??_UART2_DefaultErrorHandler 0001                                    ??_vfprintf 0021  
                           UART1_Write@txData 0001                                  ??_Get_Number 002A  
                                   _PORTBbits 3FCB                        ??_TMR0_Write16BitTimer 0003  
                               Get_Key@rxdata 0002                                     _TRISBbits 3FC3  
                                  ?_LCD_Clear 0001                         ?_Read_Battery_Voltage 0002  
                   ??_TMR0_HasOverflowOccured 0001                                    ?_LCD_Print 0002  
                     _Read_Calibrated_Sensors DB26                                  _LCD_Position DDB0  
                                  main@length 009F                            __end_of_Get_Number E364  
                               Backward@speed 0002                                    main@sensor 009B  
                              _TMR0_StopTimer DB2C                                    LCD_Print@i 0007  
                                 vfpfcnvrt@ap 000F                                   vfpfcnvrt@cp 0015  
                                 vfpfcnvrt@fp 000C                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf DC76                                     _Left_Turn E102  
              ??_UART2_SetFramingErrorHandler 0003                           start_initialization DC76  
                                   _Countdown EB38                 TMR0_Read16BitTimer@readValLow 0007  
                                 __end_of_abs DD66                       ??_UART1_SetErrorHandler 0003  
                   _UART2_DefaultErrorHandler DB20                                   putch@txData 0002  
                                ??_Right_Turn 0003                        __end_of_TMR0_StopTimer DB30  
                                 vfprintf@fmt 001E                              ??_PMD_Initialize 0001  
                           UART2_Write@txData 0001                                      ??_printf 0029  
                                  ?_Left_Turn 0002                            __end_of_Right_Turn E1DE  
                                 __pbssCOMRAM 0051                                    ?_Countdown 0001  
                      ??_Read_Battery_Voltage 0004                            _UART1_ErrorHandler 005A  
                   _UART2_FramingErrorHandler 00A6                                 __pcstackBANK0 008A  
                                 ??_LCD_Clear 0002                                   ??_LCD_Print 0005  
                   ??_Read_Calibrated_Sensors 0003                                      ?_Get_Key 0001  
                fp__UART1_DefaultErrorHandler 0000                       ??_UART2_SetErrorHandler 0003  
                           ??_Diagnostic_Menu 002A                                     __pnvBANK0 00A2  
                                    ?_Forward 0001                               ?_TMR0_StopTimer 0001  
                                ??_Turn_PD_ON 0002                              ___lwdiv@dividend 0001  
                      _PIN_MANAGER_Initialize E94A                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler DB56                  _UART1_SetFramingErrorHandler DB4C  
                               __pmediumconst FB14                                      ?___awdiv 0001  
                                    ?___awmod 0001                                      ?___lwdiv 0001  
                          ??_UART1_Initialize 0003                                      ?___lwmod 0001  
                            _uart1RxLastError 0059                                 ??_UART1_Write 0001  
                               ??_UART2_Write 0001                                      _ADACTPPS 3ADD  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler DB20  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler DB1E                           _TMR0_Read16BitTimer DC94  
                           ?_UART2_Initialize 0001                              ___lwdiv@quotient 0005  
                          __end_of_Turn_PD_ON E5C0                                      _T0CKIPPS 3AC3  
                                    ?_sprintf 0023                                      _T2CLKCON 3FAE  
                                 _U1ERRIRbits 3DF9                            ??_UART2_Initialize 0003  
                                  _I2C1SDAPPS 3AE2                                    _I2C1SCLPPS 3AE1  
                            _uart2RxLastError 0058                             ??_TMR0_Initialize 0002  
                                 _U2ERRIRbits 3DE1         UART2_SetErrorHandler@interruptHandler 0001  
       UART1_SetErrorHandler@interruptHandler 0001                          ?_TMR0_Read16BitTimer 0001  
                                    _PIR3bits 39A3                                      _PIR4bits 39A4  
                                    _PIR6bits 39A6                 ?_UART1_SetFramingErrorHandler 0001  
                      LCD_PrintCharacter@byte 0002                                     _vfpfcnvrt EC98  
                                    _Backward E096                                     main@black 008D  
                                 ??_Left_Turn 0003                                   ??_Countdown 0039  
                                   main@input 0097                                     main@speed 009E  
                                   main@white 008C                           __end_of_UART1_Write DC22  
                          _UART2_ErrorHandler 00A2                           __end_of_UART2_Write DC3C  
                                  vfpfcnvrt@c 001B                                _Auto_Calibrate DE54  
                            main@sensor_value 00A0                         ??_TMR0_Read16BitTimer 0003  
                                    __Hrparam 0000                                    vfprintf@ap 0020  
                                    __Lrparam 0000                                    vfprintf@fp 001C  
                     ??_OSCILLATOR_Initialize 0001                             ??_TMR0_StartTimer 0001  
                                  ?_vfpfcnvrt 000C                                    _ANSELBbits 3A50  
                                  sprintf@fmt 0024                                    sprintf@ret 002A  
                                  _T0CON0bits 3FB8                               ___lwdiv@divisor 0003  
                             ___lwdiv@counter 0007                        __end_of_Auto_Calibrate DEB0  
                                    __ptext10 DBDA                                      __ptext11 DB30  
                                    __ptext20 E102                                      __ptext12 E252  
                                    __ptext21 DE02                                      __ptext13 DB8A  
                                    __ptext30 EA16                                      __ptext22 E2DA  
                                    __ptext14 DCB6                                      __ptext31 DC58  
                                    __ptext23 E364                                      __ptext15 E94A  
                                    __ptext40 DFCA                                      __ptext32 EB38  
                                    __ptext24 DD06                                      __ptext16 DBF0  
                                    __ptext41 E1DE                                      __ptext33 DD66  
                                    __ptext25 DBC4                                      __ptext17 E170  
                                    __ptext50 DDB0                                      __ptext42 E660  
                                    __ptext34 DEB0                                      __ptext26 E486  
                                    __ptext18 DB26                                      __ptext51 DC3C  
                                    __ptext43 E886                                      __ptext35 EC98  
                                    __ptext27 DB24                                      __ptext19 DF68  
                                    __ptext60 DB1C                                      __ptext52 E710  
                                    __ptext44 DB7E                                      __ptext36 E7C6  
                                    __ptext28 DB22                                      __ptext61 DB1A  
                                    __ptext53 E096                                      __ptext45 DB2C  
                                    __ptext37 DB38                                      __ptext29 DB20  
                                    __ptext62 0000                                      __ptext54 DE54  
                                    __ptext46 DB28                                      __ptext38 DC22  
                                    __ptext55 DCDA                                      __ptext47 DC94  
                                    __ptext39 DD32                                      __ptext56 DB98  
                                    __ptext48 DBAE                                      __ptext57 DC08  
                                    __ptext49 E5C0                                      __ptext58 E3F0  
                                    __ptext59 DB1E                                    _U1CON0bits 3DF2  
               __end_of_UART1_SetErrorHandler DB4C                                    _U2CON0bits 3DDA  
                TMR0_Write16BitTimer@timerVal 0001           fp__UART2_DefaultFramingErrorHandler 0000  
    __end_of_UART2_DefaultFramingErrorHandler DB24            ??_UART2_DefaultFramingErrorHandler 0001  
           ?_UART2_DefaultFramingErrorHandler 0001              _UART2_DefaultFramingErrorHandler DB22  
                   _UART1_OverrunErrorHandler 005C  UART2_SetOverrunErrorHandler@interruptHandler 0001  
UART1_SetOverrunErrorHandler@interruptHandler 0001                                      isa$xinst 0000  
                   Read_Battery_Voltage@lbyte 0006                     Read_Battery_Voltage@ubyte 0007  
                  ?_UART1_DefaultErrorHandler 0001                                      _vfprintf DEB0  
                  __end_of_LCD_PrintCharacter DE54                                     printf@fmt 0023  
                           _UART1_is_rx_ready DB98                                   _UART1_Write DC08  
                                 _UART2_Write DC22                             _UART1_is_tx_ready DCDA  
                     Calibrate_Sensors@values 0080                            ?_UART1_is_rx_ready 0001  
                    ?_TMR0_HasOverflowOccured 0001                ??_UART1_SetFramingErrorHandler 0003  
                          ?_UART1_is_tx_ready 0001                               _Diagnostic_Menu EA16  
                             ?_Auto_Calibrate 0001                           ??_UART1_is_rx_ready 0001  
                         ??_UART1_is_tx_ready 0001          __end_of_UART2_SetOverrunErrorHandler DB7E  
                _UART2_SetOverrunErrorHandler DB74                                     sprintf@ap 002C  
                            ??_TMR0_StopTimer 0001                              ___lwmod@dividend 0001  
                     ?_PIN_MANAGER_Initialize 0001                 __end_of_UART2_SetErrorHandler DB6A  
                                    printf@ap 0029                     __end_of_UART1_is_rx_ready DBAE  
                                  _UART1_Read E3F0                                    _UART2_Read E486  
                      Calibrate_Sensors@lbyte 0008  UART2_SetFramingErrorHandler@interruptHandler 0001  
UART1_SetFramingErrorHandler@interruptHandler 0001                        Calibrate_Sensors@ubyte 000D  
                   __end_of_UART1_is_tx_ready DD06             __end_of_UART1_DefaultErrorHandler DB1C  
                                 ??_vfpfcnvrt 0010                             _UART2_is_rx_ready DBC4  
                           _UART2_is_tx_ready DD06                                      sprintf@f 002D  
                                    sprintf@s 0023                            ?_UART2_is_rx_ready 0001  
                             ___lwmod@divisor 0003                            ?_UART2_is_tx_ready 0001  
                             _TMR0_Initialize DBAE                               ___lwmod@counter 0005  
                         ??_UART2_is_rx_ready 0001                           ??_UART2_is_tx_ready 0001  
              __end_of_PIN_MANAGER_Initialize EA16                 ?_UART2_SetOverrunErrorHandler 0001  
                fp__UART2_DefaultErrorHandler 0000  
